Search.setIndex({"docnames": ["examples/basics", "examples/contextual_bandit", "examples/epsilon_decay", "examples/index", "examples/mini_vw", "examples/poisson_regression", "examples/predict", "examples/search_covington", "examples/search_sequence", "examples/search_sequence_ldf", "examples/search_speech_tagger", "index", "output", "reference/index", "reference/python_8110_900_migration_guide", "reference/vowpalwabbit", "reference/vowpalwabbit.dftovw", "reference/vowpalwabbit.pyvw", "reference/vowpalwabbit.pyvw.pylibvw", "reference/vowpalwabbit.sklearn", "tutorials/DFtoVW_tutorial", "tutorials/cmd_csv_with_iris_dataset", "tutorials/cmd_first_steps", "tutorials/cmd_linear_regression", "tutorials/index", "tutorials/off_policy_evaluation", "tutorials/python_Contextual_bandits_and_Vowpal_Wabbit", "tutorials/python_Simulating_a_news_personalization_scenario_using_Contextual_Bandits", "tutorials/python_cats", "tutorials/python_classification", "tutorials/python_first_steps", "tutorials/python_slates"], "filenames": ["examples/basics.ipynb", "examples/contextual_bandit.ipynb", "examples/epsilon_decay.ipynb", "examples/index.md", "examples/mini_vw.md", "examples/poisson_regression.ipynb", "examples/predict.ipynb", "examples/search_covington.ipynb", "examples/search_sequence.ipynb", "examples/search_sequence_ldf.ipynb", "examples/search_speech_tagger.ipynb", "index.rst", "output.rst", "reference/index.rst", "reference/python_8110_900_migration_guide.md", "reference/vowpalwabbit.rst", "reference/vowpalwabbit.dftovw.rst", "reference/vowpalwabbit.pyvw.rst", "reference/vowpalwabbit.pyvw.pylibvw.rst", "reference/vowpalwabbit.sklearn.rst", "tutorials/DFtoVW_tutorial.ipynb", "tutorials/cmd_csv_with_iris_dataset.md", "tutorials/cmd_first_steps.md", "tutorials/cmd_linear_regression.md", "tutorials/index.md", "tutorials/off_policy_evaluation.md", "tutorials/python_Contextual_bandits_and_Vowpal_Wabbit.ipynb", "tutorials/python_Simulating_a_news_personalization_scenario_using_Contextual_Bandits.ipynb", "tutorials/python_cats.ipynb", "tutorials/python_classification.ipynb", "tutorials/python_first_steps.ipynb", "tutorials/python_slates.ipynb"], "titles": ["Python Basics", "Contextual Bandits", "[Experimental] Testing Basic Models with Varying Epsilon Values and Model Counts for Non-Stationary Epsilon Decay", "Examples", "Mini VW", "Poisson Regression", "Predict comparison", "Search - Covington", "Search - Sequence", "Search - Sequence LDF", "Search - Speech Tagger", "Vowpal Wabbit", "&lt;no title&gt;", "API Reference", "Python 8.11 to 9 migration", "vowpalwabbit", "vowpalwabbit.dftovw", "vowpalwabbit.pyvw", "vowpalwabbit.pyvw.pylibvw", "vowpalwabbit.sklearn", "Pandas DataFrame to VowpalWabbit Format Conversion", "Command Line for CSV Dataset", "Command Line Basics", "Command Line Linear Regression", "Tutorials", "Offline Policy Evaluation Using the Command Line", "Contextual Bandits", "Contextual Bandit Content Personalization", "Contextual Bandits with Continuous Actions", "Classification", "Python Basics", "Slates"], "terms": {"thi": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 30, 31], "notebook": [0, 20, 26], "demonstr": [0, 21, 23], "most": [0, 10, 15, 17, 20, 23, 25, 28], "capabl": [0, 23, 26], "vowpalwabit": 0, "interfac": [0, 10, 15, 17, 27], "ani": [0, 7, 8, 9, 10, 12, 14, 15, 16, 17, 19, 20, 23, 25, 26, 28, 31], "applic": [0, 23, 26], "us": [0, 1, 5, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31], "packag": [0, 15, 17, 23, 26, 27, 28, 30], "need": [0, 10, 14, 15, 17, 20, 22, 23, 25, 27, 28, 30, 31], "begin": [0, 19, 20, 23, 26], "import": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 18, 19, 23, 25, 26, 27, 28, 29, 30, 31], "vowpalwabbit": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 21, 24, 26, 27, 28, 29, 30, 31], "One": [0, 10, 15, 16, 17, 20], "we": [0, 2, 5, 6, 7, 10, 16, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31], "ve": [0, 10, 15, 17, 18, 25], "can": [0, 1, 2, 8, 9, 10, 14, 15, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 31], "initi": [0, 7, 8, 9, 10, 15, 16, 17, 18, 19, 20, 27, 28], "vw": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 21, 22, 23, 26, 28, 29, 31], "either": [0, 15, 17, 19, 25, 27, 28, 31], "pass": [0, 2, 4, 5, 7, 8, 10, 15, 16, 17, 19, 22, 23, 25, 26, 27, 28, 29, 30, 31], "command": [0, 11, 12, 15, 17, 20, 24, 26, 31], "line": [0, 11, 12, 15, 16, 17, 19, 20, 24, 26, 27, 31], "string": [0, 7, 8, 15, 16, 17, 18, 19, 20, 21], "e": [0, 1, 10, 15, 17, 20, 23, 25, 26, 27, 28, 31], "g": [0, 1, 19, 20, 25, 28], "quiet": [0, 1, 2, 5, 6, 7, 8, 9, 10, 15, 17, 19, 23, 26, 27, 28, 29, 30, 31], "q": [0, 2, 7, 10, 15, 17, 19, 23, 27, 28], "ab": [0, 1, 6, 15, 17, 19, 20], "l2": [0, 15, 17, 19, 20], "0": [0, 1, 2, 5, 6, 7, 9, 10, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31], "01": 0, "more": [0, 10, 12, 15, 16, 17, 19, 21, 27, 28, 31], "friendli": [0, 2, 27, 28], "manner": 0, "provid": [0, 1, 10, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28], "those": [0, 10, 18], "name": [0, 10, 12, 15, 16, 17, 18, 19, 20, 21, 23], "argument": [0, 10, 14, 15, 16, 17, 18, 19, 20, 26, 27, 31], "here": [0, 1, 10, 14, 15, 17, 21, 23, 25, 26, 27, 28, 31], "do": [0, 1, 5, 6, 7, 10, 14, 15, 17, 19, 20, 23, 25, 26, 27, 28], "latter": [0, 10], "workspac": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 14, 15, 17, 19, 20, 26, 27, 28, 29, 30, 31], "true": [0, 1, 2, 5, 7, 8, 9, 10, 12, 15, 16, 17, 18, 19, 20, 26, 27, 28, 30, 31], "object": [0, 1, 8, 9, 10, 12, 15, 16, 17, 18, 19, 20, 25, 26, 28], "lot": [0, 19, 28], "thing": [0, 10, 23, 27], "i": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 30, 31], "creat": [0, 1, 6, 10, 15, 16, 17, 18, 19, 21, 22, 25, 27, 28, 30, 31], "exampl": [0, 1, 4, 6, 7, 8, 9, 10, 11, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30], "train": [0, 1, 5, 7, 8, 9, 10, 17, 19, 23, 26, 28, 29, 31], "predict": [0, 1, 2, 3, 5, 7, 8, 9, 10, 11, 15, 17, 18, 19, 21, 22, 25, 26, 27, 28, 29, 30, 31], "wai": [0, 5, 6, 10, 14, 15, 17, 20, 23, 25, 27, 28, 31], "an": [0, 2, 7, 10, 12, 15, 16, 17, 18, 19, 21, 23, 26, 27, 28, 30, 31], "equival": [0, 1, 20, 26], "file": [0, 1, 6, 8, 9, 15, 17, 18, 19, 20, 21, 22, 25, 26, 28], "For": [0, 10, 12, 18, 19, 20, 21, 22, 23, 25, 26, 28, 30, 31], "instanc": [0, 1, 10, 14, 15, 16, 17, 18, 19, 20, 25, 26, 30, 31], "ex": [0, 4, 6, 7, 8, 9, 10, 15, 17, 19, 20, 29], "1": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 29, 30, 31], "two": [0, 5, 7, 10, 12, 14, 15, 17, 23, 25, 26, 27, 28, 31], "featur": [0, 1, 15, 16, 17, 18, 19, 21, 22, 23, 25, 27, 30, 31], "b": [0, 1, 5, 6, 7, 10, 15, 16, 17, 19, 23, 26, 28, 31], "document": [0, 19, 23, 25], "look": [0, 1, 10, 16, 19, 21, 22, 23, 25, 27, 28, 29, 30], "help": [0, 12, 21, 22, 23, 25, 26, 28, 30], "you": [0, 1, 8, 9, 10, 14, 15, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 31], "up": [0, 10, 18, 23, 25], "gener": [0, 1, 5, 10, 12, 19, 23, 25, 26, 27, 28, 31], "doc": 0, "learn": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 15, 17, 18, 19, 20, 21, 22, 25, 26, 29, 30, 31], "method": [0, 1, 14, 15, 16, 17, 20, 21, 25, 26, 31], "modul": [0, 11, 14, 17, 20, 26], "pyvw": [0, 4, 7, 8, 9, 10, 13, 15], "ec": [0, 15, 17], "union": [0, 10, 15, 16, 17], "forwardref": 0, "list": [0, 7, 8, 10, 15, 16, 17, 18, 19, 20, 23, 27, 28, 31], "str": [0, 1, 2, 6, 7, 9, 10, 15, 16, 17, 18, 19, 20, 26, 28], "none": [0, 2, 10, 14, 15, 16, 17, 18, 19, 20, 27, 28], "perform": [0, 1, 15, 17, 19, 23, 25, 26], "onlin": [0, 11, 15, 17, 23, 26], "updat": [0, 1, 15, 17, 18, 19, 23, 25, 26, 28], "arg": [0, 4, 12, 15, 16, 17, 19, 21, 28], "which": [0, 10, 12, 14, 15, 16, 17, 19, 20, 21, 23, 25, 26, 27, 28, 31], "model": [0, 1, 3, 5, 6, 11, 12, 15, 17, 18, 19, 25, 28, 29, 30], "get": [0, 2, 8, 10, 15, 17, 18, 19, 20, 21, 22, 23, 25], "If": [0, 10, 12, 14, 15, 16, 17, 19, 22, 23, 25, 26, 27, 28], "singl": [0, 10, 15, 17, 19, 31], "learner": [0, 2, 10, 15, 17, 18, 23, 25, 26, 27, 28], "must": [0, 7, 8, 9, 10, 12, 15, 16, 17, 18, 21, 26, 27, 28], "multilin": [0, 10, 15, 17, 26], "thei": [0, 6, 7, 10, 12, 15, 17, 19, 20, 23, 25, 26, 27, 31], "ar": [0, 1, 2, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 31], "pars": [0, 2, 15, 16, 17, 18, 19, 20, 21, 27, 28], "py": [0, 4, 28], "meth": 0, "befor": [0, 6, 10, 15, 17, 19, 23, 25, 26, 27, 28], "being": [0, 10, 12, 15, 16, 17, 23, 31], "from": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 18, 19, 21, 23, 25, 26, 27, 28, 29, 30, 31], "given": [0, 2, 10, 12, 15, 16, 17, 18, 19, 25, 26, 27, 28, 31], "finish_exampl": [0, 4, 6, 7, 8, 9, 10, 15, 17, 28], "later": [0, 10, 15, 17, 19, 25], "point": [0, 10, 15, 17, 18, 20, 25, 26, 27, 28], "let": [0, 10, 23, 25, 27, 28, 29, 31], "": [0, 4, 5, 8, 9, 10, 14, 15, 16, 17, 19, 22, 23, 25, 26, 27, 28, 29, 30, 31], "run": [0, 10, 15, 17, 18, 19, 21, 22, 23, 25, 27, 28, 31], "function": [0, 2, 10, 12, 14, 15, 17, 18, 19, 26, 27], "print": [0, 1, 4, 6, 7, 8, 9, 10, 18, 20, 23, 26, 27, 28, 29, 30], "f": [0, 5, 6, 10, 15, 17, 19, 20, 21, 22, 23, 25, 28, 29, 31], "current": [0, 6, 10, 15, 17, 18, 19, 20, 21, 22, 23, 25, 26, 28], "get_updated_predict": [0, 6, 18], "8230039477348328": 0, "retriev": [0, 15, 17], "made": [0, 10, 23], "intern": [0, 11, 15, 17, 18, 28], "dure": [0, 10, 28], "The": [0, 5, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 30], "aspect": [0, 20], "mean": [0, 5, 7, 10, 15, 17, 19, 20, 22, 23, 25, 26, 27, 28, 31], "were": [0, 10, 15, 17, 25, 27], "make": [0, 1, 6, 7, 10, 15, 17, 19, 20, 23, 25, 26, 27, 28, 31], "after": [0, 6, 15, 17, 18, 19, 20, 23, 25, 27, 28], "call": [0, 8, 9, 10, 12, 14, 15, 16, 17, 18, 20, 21, 22, 25, 26, 27, 28], "what": [0, 2, 10, 15, 17, 20, 21, 23, 25, 27, 28, 29, 31], "would": [0, 10, 19, 23, 25, 27, 28], "okai": [0, 10], "so": [0, 2, 7, 10, 12, 15, 17, 18, 19, 20, 23, 25, 26, 27, 28, 31], "isn": [0, 10], "t": [0, 5, 8, 9, 10, 15, 17, 18, 19, 20, 23, 25, 26, 27, 28], "quit": [0, 20], "where": [0, 5, 10, 12, 15, 16, 17, 19, 20, 23, 25, 26, 27], "want": [0, 1, 8, 9, 10, 14, 15, 17, 21, 22, 23, 25, 26, 27, 28, 30], "yet": [0, 15, 17, 25], "few": [0, 10, 12, 20, 21, 22, 23, 27, 28], "time": [0, 2, 8, 9, 10, 12, 20, 25, 26, 27, 28], "_": [0, 7, 9, 10, 19, 20, 29, 31], "rang": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 20, 23, 26, 27, 28, 31], "4": [0, 1, 2, 7, 8, 9, 10, 12, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31], "9992850422859192": 0, "now": [0, 6, 8, 9, 10, 14, 15, 17, 20, 21, 22, 23, 25, 26, 27, 28, 30, 31], "bit": [0, 10, 18, 19, 21, 22, 25, 28], "closer": [0, 20], "desir": [0, 17, 31], "new": [0, 1, 10, 14, 15, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 30], "anoth": [0, 15, 17, 20, 25, 27, 28], "form": [0, 15, 16, 17, 19, 20, 25, 27, 28], "creation": [0, 10], "dictionari": [0, 17, 18, 19, 27], "map": [0, 7, 23], "namespac": [0, 10, 15, 16, 17, 18, 19, 21, 23, 27], "eg": [0, 15, 17, 18, 19], "foo": [0, 6, 19], "pair": [0, 10, 15, 17, 18, 19, 23, 25, 26], "float": [0, 10, 15, 16, 17, 18, 19, 20, 28], "5": [0, 1, 2, 5, 7, 10, 12, 15, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 29], "ll": [0, 10, 23, 27, 31], "similar": [0, 26, 28], "ident": [0, 19, 21], "previou": [0, 1, 10, 23, 26], "see": [0, 1, 8, 9, 10, 15, 17, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31], "how": [0, 10, 18, 20, 21, 22, 23, 25, 26, 27, 28, 30, 31], "well": [0, 10, 21, 23, 25, 26, 28], "ha": [0, 5, 10, 14, 15, 16, 17, 18, 19, 20, 23, 25, 26, 27, 28, 29, 31], "note": [0, 10, 19, 20, 21, 22, 23, 25, 26, 27, 30], "setup": [0, 15, 17, 18, 25, 27, 28], "label": [0, 5, 6, 7, 10, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 28, 29], "consid": [0, 15, 17, 20, 21, 25], "test": [0, 1, 3, 6, 7, 8, 9, 10, 11, 18, 19, 23, 25, 26, 29, 30], "ex2": 0, "execut": [0, 10, 28], "But": [0, 10, 14, 25], "sinc": [0, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 27, 28], "onli": [0, 10, 12, 14, 15, 16, 17, 18, 19, 23, 25, 26, 28, 31], "becaus": [0, 7, 8, 10, 23, 25, 26, 27], "raw": [0, 12], "get_simplelabel_predict": [0, 18], "simplelabel": [0, 14, 15, 16, 17, 20], "regress": [0, 3, 11, 18, 20, 21, 22, 24, 25, 26, 30], "problem": [0, 10, 21, 22, 23, 25, 27, 30], "against": [0, 19, 21, 23, 25], "all": [0, 8, 9, 10, 12, 15, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 31], "multiclass": [0, 10, 15, 16, 17, 18, 19, 21, 27], "get_multiclass_predict": [0, 18], "etc": [0, 15, 16, 17, 18, 19, 20], "about": [0, 15, 16, 17, 20, 22, 23, 25, 27, 30], "half": 0, "re": [0, 6, 10, 15, 17, 18, 20, 23, 28, 29, 31], "also": [0, 10, 15, 16, 17, 19, 20, 21, 23, 25, 26, 27, 28], "miss": [0, 16, 23], "number": [0, 2, 7, 10, 15, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 31], "give": [0, 10, 15, 17, 19, 23, 27, 28], "set_label_str": [0, 6, 7, 9, 10, 15, 17, 18], "2": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 29, 31], "go": [0, 10, 18, 21, 23, 27, 28, 31], "back": [0, 10, 18, 31], "affect": 0, "behavior": [0, 4, 6, 15, 17, 26], "origin": [0, 1, 5, 20, 23, 26, 28, 31], "first": [0, 5, 10, 14, 15, 17, 19, 21, 22, 23, 25, 26, 27, 28, 30], "remov": [0, 14, 15, 17, 18, 19, 20], "9994351863861084": 0, "clearli": 0, "had": [0, 10, 18, 25], "impact": [0, 20, 31], "put": 0, "iter": [0, 2, 5, 10, 15, 16, 17, 20, 25, 27, 28, 31], "between": [0, 10, 15, 17, 19, 20, 23, 27, 28], "10": [0, 5, 8, 9, 10, 12, 15, 17, 18, 19, 20, 22, 23, 26, 28, 29, 30], "9994620680809021": 0, "9994668960571289": 0, "9994677305221558": 0, "9994679689407349": 0, "9994679093360901": 0, "hand": [0, 18, 28], "toward": [0, 23, 27, 28], "done": [0, 6, 10, 15, 17, 20, 27, 28], "safest": 0, "tell": [0, 8, 9, 10, 21, 22, 23, 26, 27, 31], "garbag": [0, 10], "collect": [0, 15, 16, 17, 25, 26], "them": [0, 10, 12, 15, 17, 20, 23, 27, 30], "should": [0, 1, 6, 7, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28], "happen": [0, 2, 6, 23, 25, 27, 28], "default": [0, 6, 12, 15, 16, 17, 18, 19, 20, 21, 23, 25], "when": [0, 10, 12, 14, 15, 16, 17, 19, 20, 23, 25, 26, 27, 28, 31], "out": [0, 10, 20, 23, 25, 27], "scope": 0, "per": [0, 1, 10, 15, 17, 18, 19, 23, 25, 26], "build": [0, 16, 19, 20, 23], "collector": [0, 10], "mai": [0, 10, 15, 17, 19, 23, 25, 26, 27, 28], "soon": 0, "enough": [0, 10, 23, 25, 28], "manipul": [0, 20], "larg": [0, 28, 31], "onc": [0, 10, 15, 16, 17, 25], "final": [0, 6, 10, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 31], "entir": [0, 10, 25, 31], "perhap": [0, 10], "start": [0, 6, 10, 12, 21, 22, 23, 25, 26, 27, 28, 29, 31], "good": [0, 10, 25, 27], "close": [0, 4, 6, 20, 23, 28], "old": [0, 14, 15, 17], "ones": [0, 10, 19, 20, 21, 25], "especi": [0, 25], "save": [0, 1, 6, 12, 15, 17, 18, 19, 21, 22, 25, 26], "disk": [0, 15, 17, 18], "finish": [0, 4, 5, 6, 8, 9, 10, 15, 17, 18, 20, 21, 22, 23, 25, 28, 31], "write": [0, 10, 15, 17, 18, 21, 22, 25], "add": [0, 1, 10, 15, 17, 18, 19, 20, 23, 25, 26], "mymodel": 0, "plai": [0, 1], "around": [0, 10, 15, 17, 20, 27, 28], "end": [0, 10, 12, 20, 23, 25, 26, 27], "intro": 0, "check": [0, 10, 15, 16, 17, 19], "main": [0, 12, 16, 26], "panda": [1, 2, 11, 16, 19, 24, 26, 27, 29, 31], "pd": [1, 2, 16, 19, 20, 26, 27, 29, 31], "sampl": [1, 5, 19, 20, 21, 22, 26, 27, 28], "data": [1, 5, 7, 8, 9, 10, 12, 15, 16, 17, 18, 19, 21, 22, 27, 28, 29, 30, 31], "could": [1, 7, 10, 20, 25, 26, 28, 31], "random": [1, 2, 5, 19, 26, 27, 28, 31], "trial": [1, 26], "cb": [1, 27, 28, 31], "explor": [1, 16, 20, 27, 28], "http": [1, 12, 20, 21], "github": [1, 12, 21, 23, 25, 26], "com": [1, 12, 21], "vowpal_wabbit": [1, 12, 21], "wiki": [1, 12, 20, 23, 25, 26], "log": [1, 5, 15, 17], "train_data": [1, 26], "action": [1, 2, 10, 11, 15, 16, 17, 18, 24, 25, 26, 27, 31], "cost": [1, 2, 7, 10, 15, 16, 17, 18, 19, 25, 26, 27], "probabl": [1, 2, 15, 16, 17, 18, 19, 26, 27, 28], "feature1": [1, 26], "feature2": [1, 26], "c": [1, 6, 10, 15, 16, 17, 19, 23, 26, 28, 31], "feature3": [1, 26], "3": [1, 2, 4, 7, 8, 9, 10, 12, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 29, 31], "d": [1, 7, 10, 15, 17, 19, 21, 22, 23, 25, 26, 31], "7": [1, 12, 15, 17, 18, 20, 21, 23, 26, 27, 28, 29], "train_df": [1, 26], "datafram": [1, 2, 11, 16, 24, 26, 27, 29], "index": [1, 2, 10, 12, 15, 17, 18, 20, 21, 23, 26, 27, 31], "df": [1, 2, 16, 20, 27], "len": [1, 4, 5, 7, 8, 9, 10, 15, 17, 20, 26, 27, 28, 29], "set_index": [1, 26], "some": [1, 5, 6, 10, 16, 19, 20, 21, 22, 23, 25, 26, 27, 30], "decis": [1, 10, 18, 26, 31], "describ": [1, 23, 25, 26], "user": [1, 2, 20, 26, 27, 28, 31], "exploit": [1, 25, 26], "test_data": [1, 26], "test_df": [1, 26], "take": [1, 10, 25, 26, 27, 28], "python": [1, 3, 10, 11, 13, 15, 17, 18, 22, 23, 24, 28, 31], "store": [1, 5, 8, 9, 10, 19, 26], "paramet": [1, 14, 15, 16, 17, 19, 26, 31], "four": [1, 23, 26, 27, 28], "possibl": [1, 10, 19, 20, 25, 26, 27], "row": [1, 2, 16, 20, 21, 27, 28, 29], "loop": [1, 10, 19, 25, 31], "request": [1, 15, 17, 20], "format": [1, 2, 5, 11, 15, 16, 17, 19, 21, 22, 23, 24, 28, 30], "loc": [1, 12, 20, 26, 31], "actual": [1, 10, 25, 26, 28], "same": [1, 10, 12, 17, 19, 21, 23, 25, 26, 27, 28, 31], "wa": [1, 8, 9, 10, 14, 15, 17, 18, 20, 23, 26, 27, 28], "output": [1, 7, 8, 9, 10, 19, 21, 22, 25, 27, 30], "result": [1, 10, 15, 17, 21, 23, 25, 26, 27, 28, 31], "j": [1, 10, 26, 28, 31], "choic": [1, 2, 5, 23, 25, 26, 27, 28, 31], "assign": [1, 18, 19, 20, 26], "everi": [1, 10, 15, 17, 23, 26, 27, 31], "structur": [1, 10, 18, 21, 23, 26], "its": [1, 7, 10, 14, 25, 26, 29, 31], "accordingli": [1, 26], "bonu": 1, "load": [1, 6, 12, 17, 19, 21, 22, 23, 25, 26], "del": [1, 26], "matplotlib": [2, 5, 20, 27, 28, 31], "pyplot": [2, 5, 20, 27, 28, 31], "plt": [2, 5, 20, 27, 28, 31], "itertool": [2, 27], "numpi": [2, 5, 19, 20, 31], "np": [2, 5, 19, 20, 31], "figur": [2, 5, 10, 28], "tom": 2, "anna": 2, "times_of_dai": [2, 27, 28], "morn": [2, 27, 28], "afternoon": [2, 27, 28], "polit": [2, 27], "sport": [2, 27], "music": [2, 27], "food": [2, 27], "financ": [2, 27], "health": [2, 27], "camp": [2, 27], "user_liked_articl": [2, 27], "user_disliked_articl": [2, 27], "def": [2, 4, 6, 7, 8, 9, 10, 20, 27, 28, 29, 31], "get_cost": [2, 27, 28], "context": [2, 25, 26, 27, 28, 31], "switch": [2, 23, 27, 28], "time_of_dai": [2, 27, 28], "return": [2, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 23, 26, 27, 28, 29, 31], "elif": [2, 20, 27, 28], "modifi": [2, 18, 21, 27, 28], "to_vw_example_format": [2, 27, 28], "cb_label": [2, 15, 17, 27], "chosen_act": [2, 27], "prob": [2, 15, 17, 27, 31], "example_str": [2, 27], "share": [2, 15, 17, 19, 21, 27, 28, 31], "n": [2, 7, 8, 9, 10, 12, 15, 17, 19, 20, 21, 22, 25, 26, 27], "articl": [2, 26, 27], "strip": [2, 20, 27], "last": [2, 10, 20, 21, 22, 23, 25, 27, 28], "newlin": [2, 27], "sample_custom_pmf": [2, 27, 31], "pmf": [2, 27, 31], "total": [2, 15, 17, 18, 21, 22, 23, 25, 26, 27, 31], "sum": [2, 10, 15, 17, 18, 21, 22, 23, 25, 27, 31], "scale": [2, 16, 21, 27, 31], "x": [2, 5, 6, 15, 16, 17, 19, 20, 23, 26, 27, 28, 31], "draw": [2, 20, 27, 28, 31], "sum_prob": [2, 27, 31], "enumer": [2, 15, 17, 27, 28, 31], "get_act": [2, 27], "vw_text_exampl": [2, 27, 28], "chosen_action_index": [2, 27], "choose_us": [2, 27], "choose_time_of_dai": [2, 27, 28], "displai": [2, 20, 26, 27], "prefer": [2, 14, 27, 28], "matrix": [2, 19, 20, 27], "get_preference_matrix": [2, 27], "cost_fun": [2, 27], "expand_grid": [2, 27], "data_dict": [2, 27], "product": [2, 25, 27], "from_record": [2, 27], "column": [2, 12, 16, 20, 21, 23, 27, 29], "kei": [2, 15, 17, 20, 25, 27], "appli": [2, 12, 19, 25, 26, 27, 29], "lambda": [2, 12, 19, 20, 26, 27], "r": [2, 4, 5, 7, 10, 20, 26, 27], "axi": [2, 20, 27, 28, 29], "pivot_t": [2, 27], "run_simul": [2, 27, 28], "num_iter": [2, 27, 28, 31], "cost_funct": [2, 27, 28], "switch_reward": 2, "do_learn": [2, 27, 28], "cost_sum": [2, 27, 28], "ctr": [2, 27, 28], "seed": [2, 19, 25], "In": [2, 10, 14, 15, 17, 19, 20, 23, 25, 26, 27, 28, 31], "each": [2, 7, 10, 12, 15, 16, 17, 19, 20, 21, 23, 25, 26, 27, 28, 31], "simul": [2, 19, 22, 23, 30], "choos": [2, 10, 16, 25, 26, 27, 28], "dai": [2, 20, 23, 26, 27, 28], "chose": [2, 27, 28], "inform": [2, 18, 19, 20, 22, 23, 25, 26, 27, 28, 30, 31], "vw_format": [2, 27, 28], "labeltyp": [2, 7, 9, 10, 14, 15, 17, 27, 28], "contextual_bandit": [2, 15, 17, 18, 27], "6": [2, 5, 6, 12, 15, 17, 18, 20, 21, 25, 27, 28, 29], "negat": [2, 27, 28], "plot": [2, 5, 20, 27, 28, 31], "instead": [2, 10, 14, 15, 16, 17, 18, 19, 23, 25, 26, 27, 28, 31], "minim": [2, 27, 28], "maxim": [2, 26, 27, 28], "reward": [2, 25, 26], "append": [2, 5, 6, 7, 8, 9, 10, 15, 17, 20, 23, 27, 28, 29, 31], "plot_ctr": [2, 27], "xlabel": [2, 5, 20, 27, 28, 31], "fontsiz": [2, 20, 27, 28], "14": [2, 12, 20, 27, 28], "ylabel": [2, 5, 27, 28, 31], "ylim": [2, 27, 28], "100000": 2, "25000": 2, "leg": [2, 31], "figsiz": [2, 5, 20], "15": [2, 12, 19, 20, 22, 23, 28, 30, 31], "9": [2, 12, 13, 15, 16, 17, 18, 19, 21, 25, 28, 29], "dpi": 2, "80": [2, 26], "ep": [2, 6, 10], "linspac": 2, "11": [2, 12, 13, 15, 17, 18, 20, 23, 28], "cb_explore_adf": [2, 27, 31], "ua": [2, 27, 31], "instanti": [2, 18, 27, 28], "epsilon_decai": 2, "model_count": 2, "32": [2, 21, 22, 23, 25, 28, 30], "titl": [2, 5, 12, 20, 28], "accuraci": [2, 28, 29], "17": [2, 12], "click": [2, 26, 27, 28], "through": [2, 10, 16, 19, 20, 23, 25, 27, 28], "rate": [2, 10, 19, 21, 22, 25, 27, 28], "8": [2, 7, 10, 12, 13, 15, 17, 18, 19, 20, 21, 23, 25, 28, 29], "legend": [2, 31], "show": [2, 15, 17, 20, 21, 22, 23, 27, 28, 31], "1000000": 2, "250000": [2, 23, 25], "basic": [3, 4, 10, 11, 18, 20, 21, 23, 24], "contextu": [3, 11, 15, 16, 17, 21, 22, 23, 24, 25, 30], "bandit": [3, 11, 15, 16, 17, 18, 21, 22, 23, 24, 25, 30], "experiment": [3, 11, 12, 17], "vari": [3, 11, 25], "epsilon": [3, 11, 25, 26, 27, 28, 31], "valu": [3, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31], "count": [3, 5, 11, 23, 28], "non": [3, 7, 10, 11, 18, 20, 23], "stationari": [3, 11, 23], "decai": [3, 11, 19], "mini": [3, 11], "poisson": [3, 11, 19], "comparison": [3, 4, 11, 20, 25], "search": [3, 11, 17, 18, 19, 20, 26], "covington": [3, 11], "sequenc": [3, 10, 11, 26], "ldf": [3, 7, 11], "speech": [3, 11], "tagger": [3, 11], "sy": [4, 8, 9, 10], "learnfromstr": 4, "fals": [4, 15, 17, 19, 20, 27, 28], "stupid": 4, "program": [4, 8, 12], "mimic": 4, "mostli": [4, 15, 17, 21], "purpos": [4, 20, 25], "speed": [4, 20, 23], "mini_vw": 4, "inputfil": 4, "numpass": 4, "otherarg": 4, "p": [4, 7, 8, 9, 10, 20, 21, 22, 23, 26], "h": 4, "open": [4, 20], "l": [4, 5, 7, 10, 19, 23, 31], "readlin": 4, "els": [4, 7, 10, 15, 17, 19, 20, 27, 28], "__name__": [4, 28], "__main__": 4, "argv": 4, "usag": [4, 14, 17, 20, 31], "other": [4, 10, 12, 17, 21, 23, 25, 26, 28, 31], "exit": 4, "int": [4, 8, 15, 16, 17, 18, 19, 20, 29], "join": [4, 10, 20], "inlin": 5, "distribut": [5, 19, 26], "z": [5, 20], "y": [5, 6, 15, 16, 17, 19, 20, 28, 29, 31], "100": [5, 7, 20, 28], "transform": [5, 28], "linear": [5, 11, 19, 21, 22, 24, 30, 31], "squar": [5, 15, 17, 18, 19, 23], "loss": [5, 6, 10, 18, 19, 21, 22, 23, 25, 26, 27, 28], "directli": [5, 8, 9, 10, 15, 17, 18, 19, 21, 23, 25], "second": [5, 10, 19, 20, 23, 25, 26, 27, 28], "due": [5, 10, 14], "jensen": 5, "inequ": 5, "approach": [5, 21, 22, 23, 25, 27, 30], "produc": [5, 15, 17, 25, 31], "systemat": 5, "neg": [5, 19, 25, 27, 28], "bia": [5, 19], "training_sampl": 5, "logz": 5, "001": [5, 15, 17], "loss_funct": [5, 19], "holdout_off": [5, 19, 23], "readable_model": [5, 19], "readabl": [5, 19, 23, 27, 28], "hundr": 5, "over": [5, 7, 10, 15, 17, 20, 23, 25, 26, 27, 28], "log_predict": 5, "measur": [5, 27, 28], "domain": 5, "log_bia": 5, "exp": [5, 20, 26], "although": [5, 23, 25], "rel": [5, 19, 20], "unbias": [5, 25], "our": [5, 6, 7, 10, 21, 22, 23, 25, 26, 27, 28, 30, 31], "underpredict": 5, "expect": [5, 6, 19, 23, 25, 29], "jensenn": 5, "poisson_predict": 5, "poisson_bia": 5, "18": [5, 12, 21, 22, 23, 25, 28, 30], "subplot": [5, 20, 28], "131": [5, 28], "132": [5, 28], "133": [5, 28], "text": [5, 19, 20, 23, 25, 27, 28, 30], "my_predict": 6, "pp": 6, "v": [6, 15, 17, 20, 23], "iter_featur": [6, 15, 17], "get_weight": [6, 15, 17, 18, 20], "ensure_clos": 6, "1e": 6, "rais": [6, 15, 16, 17, 20], "except": [6, 10, 15, 17, 20, 23], "fail": [6, 15, 17], "differ": [6, 10, 15, 17, 20, 22, 23, 25, 26, 27, 28, 30], "stuff": [6, 10], "read": [6, 12, 19, 21, 22, 23, 25], "updated_pr": 6, "partial": [6, 12, 18, 25], "comput": [6, 10, 18, 19, 20, 23], "own": [6, 10, 15, 17, 27, 29], "my": [6, 10], "view": [6, 25], "my_pr": 6, "scratch": [6, 17, 26], "push_featur": [6, 15, 17], "setup_exampl": [6, 15, 17, 18], "my_pred2": 6, "exlist": 6, "120": [6, 28], "safe": 6, "delet": 6, "reus": [6, 15, 17, 19], "__del__": 6, "hope": [6, 27, 28], "tag": [6, 10, 12, 16, 18, 19, 21, 23], "get_tag": [6, 18], "pred": [6, 7, 8, 9, 10, 20, 21], "get_partial_predict": [6, 18], "get_loss": [6, 18], "get_label": [6, 14, 15, 17], "explic": 6, "anywai": 6, "before_sav": 6, "after_sav": 6, "9978881478309631": 6, "167017": 6, "2683533728122711": 6, "162468": 6, "173048": 6, "19282805919647217": 6, "11650396": 6, "9978881776332855": 6, "05779286101460457": 6, "051427412778139114": 6, "8997899293899536": 6, "5196619629859924": 6, "23072463274002075": 6, "9775646924972534": 6, "word": [7, 8, 9], "parent": [7, 8, 9, 10, 12, 28], "root": [7, 10, 14, 15], "my_dataset": [7, 8, 9, 10], "monster": [7, 8, 9, 10], "ate": [7, 8, 9, 10], "big": [7, 8, 9, 10], "sandwich": [7, 8, 9, 10], "tasti": [7, 8, 9, 10], "itself": [7, 10, 12, 17, 25], "class": [7, 8, 9, 10, 12, 15, 16, 17, 18, 19, 21, 28], "covingtondeppars": [7, 10], "searchtask": [7, 8, 9, 10, 14, 17], "__init__": [7, 8, 9, 10, 15, 16, 17, 18, 19, 20], "self": [7, 8, 9, 10, 15, 17, 19, 20, 23, 28], "sch": [7, 8, 9, 10, 17], "num_act": [7, 8, 9, 10, 17, 28], "set_opt": [7, 8, 9, 10], "auto_hamming_loss": [7, 8, 9, 10], "auto_condition_featur": [7, 8, 9, 10], "_run": [7, 8, 9, 10], "sentenc": [7, 8, 9, 10], "everyth": [7, 10, 14], "wordn": [7, 10], "parn": [7, 10], "m": [7, 9, 10, 20, 26], "continu": [7, 10, 11, 15, 17, 23, 24, 25], "wordm": [7, 10], "ask": [7, 10], "question": [7, 10, 12, 25], "ispar": [7, 10], "construct": [7, 8, 9, 10, 15, 17, 18, 26, 27], "dir": [7, 10], "my_tag": [7, 8, 9, 10], "oracl": [7, 8, 9, 10, 17], "condit": [7, 8, 9, 10, 15, 17, 23], "max": [7, 10, 20, 28], "multiex": [7, 8, 10], "reduct": [7, 8, 10, 12, 21, 25], "break": [7, 10, 14, 19], "covingtondepparserldf": [7, 10], "is_ldf": [7, 9, 10], "makeexampl": [7, 9, 10], "lcostsensit": [7, 9, 10, 18], "zero": [7, 10], "irrelev": [7, 10], "ensur": [7, 10], "truth": [7, 10, 20, 25], "have": [7, 8, 9, 10, 12, 14, 15, 17, 19, 20, 21, 23, 25, 26, 27, 28, 31], "exclud": [7, 10], "revers": [7, 15, 17, 18, 28], "todo": 7, "sure": [7, 10, 15, 17], "csoaa_ldf": [7, 9, 10], "demo": 7, "version": [7, 10, 15, 16, 17, 19, 20, 25], "search_task": [7, 8, 9, 10, 15, 17], "hook": [7, 8, 9, 10, 12], "task": [7, 8, 9, 10, 17, 19, 20, 26], "init_search_task": [7, 8, 9, 10, 15, 17], "w": [7, 8, 9, 10, 20], "split": [7, 8, 9, 10, 15, 17, 19, 20, 25], "__future__": 8, "print_funct": 8, "sequencelabel": [8, 9, 10], "automat": [8, 9, 10, 15, 17, 23, 25], "option": [8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 23, 25, 26, 27, 30], "po_exist": 8, "po_get": 8, "po_get_int": 8, "found": [8, 16, 20, 21, 25], "type": [8, 9, 10, 12, 15, 16, 17, 18, 19, 23, 25, 31], "set": [8, 9, 10, 15, 16, 17, 18, 19, 20, 23, 25, 26, 29], "whatev": [8, 9, 10], "remind": [8, 9, 10], "shouldn": [8, 9, 10, 15, 17], "po": [8, 9, 10], "guarante": [8, 9, 10, 23], "properli": [8, 9, 10], "wow": [8, 9], "your": [8, 9, 10, 21, 22, 25, 26, 27, 30], "doe": [8, 9, 10, 15, 17, 19, 23, 25, 28], "NOT": [8, 9], "det": [8, 9, 10], "noun": [8, 9, 10, 19], "verb": [8, 9, 10, 19], "adj": [8, 9, 10, 19], "usual": [8, 9, 15, 17, 25, 31], "abov": [8, 9, 10, 21, 25, 26, 28], "dataset": [8, 9, 10, 11, 19, 20, 24, 25, 29], "ten": [8, 9, 10], "__iter__": [8, 9], "feed": [8, 9, 10, 19], "stderr": [8, 9], "while": [9, 23], "tutori": [10, 11, 21, 22, 23, 25, 27, 28, 30, 31], "walk": [10, 25], "code": [10, 12, 15, 17, 31], "complet": [10, 15, 17], "graduat": 10, "faster": [10, 19, 23], "pain": 10, "paradigm": 10, "solv": [10, 31], "like": [10, 15, 17, 19, 21, 23, 25, 26, 27, 28, 29], "follow": [10, 19, 20, 21, 22, 23, 25, 26, 27, 28, 31], "At": [10, 15, 17, 23], "world": [10, 25, 26, 27, 28, 31], "bad": [10, 25, 26], "earlier": [10, 27], "thankfulli": 10, "access": [10, 14, 20], "right": [10, 20, 28], "answer": [10, 25], "part": [10, 17, 20, 25], "goal": [10, 26, 27, 28, 31], "case": [10, 12, 15, 17, 19, 23, 25, 26, 27, 28, 31], "left": 10, "third": [10, 23, 25, 26, 27, 28], "project": 10, "librari": [10, 11, 15, 17, 31], "defin": [10, 16, 19, 27, 28], "one": [10, 12, 16, 18, 19, 20, 21, 23, 25, 26, 27, 28, 31], "annoi": 10, "integ": [10, 14, 15, 17, 19, 20, 23], "correctli": 10, "To": [10, 15, 17, 19, 20, 21, 22, 23, 25, 26, 27, 28, 30], "deriv": [10, 19, 23], "three": [10, 21, 22, 23, 26, 30], "plu": [10, 25], "been": [10, 15, 16, 17, 19, 20, 28], "within": 10, "via": [10, 15, 17], "Of": 10, "cours": 10, "addit": [10, 19, 23, 25, 26, 27], "input": [10, 16, 19, 21, 22, 23, 27, 30, 31], "implement": [10, 11, 16, 17, 19, 25], "unpack": 10, "It": [10, 15, 17, 20, 21, 23, 25, 26, 27, 28], "design": [10, 27], "programm": 10, "life": 10, "easier": [10, 15, 17, 20, 27, 28], "rememb": [10, 25, 27, 28], "said": 10, "sai": [10, 23, 25, 26, 28], "compar": [10, 16, 25, 27, 28, 31], "individu": [10, 19, 31], "incorrect": 10, "subtler": 10, "th": [10, 15, 17], "order": [10, 19, 25, 27, 28, 31], "underli": 10, "classifi": [10, 19, 21], "pai": 10, "attent": 10, "manual": [10, 20], "u": [10, 21, 22, 23, 25, 26, 27, 28, 30, 31], "simplic": 10, "posit": [10, 15, 16, 17, 23, 27, 28], "extract": [10, 15, 17, 20], "consist": [10, 17, 20], "fairli": 10, "complic": 10, "predictor": [10, 23, 26], "refer": [10, 11, 14, 15, 17, 23, 25, 26], "futur": [10, 14, 15, 17, 25], "requir": [10, 12, 15, 17, 22, 23, 26, 30, 31], "As": [10, 21, 25, 31], "mention": 10, "system": [10, 23, 25], "best": [10, 22, 23, 25, 26, 27, 31], "whichev": 10, "natur": [10, 14], "predecessor": 10, "though": [10, 20], "readi": [10, 25], "step": [10, 20, 21, 28], "specif": [10, 15, 16, 17, 18, 20, 23, 26, 27, 28], "alwai": [10, 15, 17, 19, 23, 26, 27], "larger": [10, 23], "ring_siz": [10, 19], "ignor": [10, 19, 21, 23, 26], "next": [10, 21, 22, 23, 26, 28, 30], "inherit": [10, 18], "anyth": [10, 15, 17], "test_exampl": [10, 26, 30], "cheat": 10, "definit": [10, 25], "inde": 10, "correct": [10, 19], "both": 10, "explicit": [10, 16, 23], "rewrit": 10, "without": [10, 12, 15, 17, 21, 26], "rid": 10, "simultan": 10, "modestli": 10, "complex": [10, 23], "sequencelabeler2": 10, "prevpr": 10, "There": [10, 17, 20, 23, 26, 27, 31], "essenti": [10, 27, 28], "chang": [10, 12, 14, 17, 18, 23, 25, 26, 27, 28], "keep": [10, 12, 17, 19, 23], "track": [10, 23, 28], "mani": [10, 18, 23, 25, 26], "error": [10, 16, 19, 20, 25, 28], "whether": [10, 22, 23, 27, 30], "insid": 10, "inner": 10, "procedur": [10, 25], "did": [10, 14, 15, 17, 25], "explicitli": [10, 18, 26], "ad": [10, 15, 17, 20], "even": [10, 20, 23, 25], "still": [10, 14, 20, 27, 28], "process": [10, 15, 16, 17, 18, 19, 25, 27, 28], "algorithm": [10, 23, 27, 28, 31], "memoiz": 10, "certain": [10, 20, 27], "know": [10, 23, 25, 27, 28], "might": [10, 25, 28], "try": [10, 20, 25, 28, 31], "variant": 10, "doesn": [10, 15, 17, 18, 19, 20, 25], "work": [10, 14, 20, 22, 23, 25, 27, 28, 30], "just": [10, 15, 17, 19, 21, 22, 23, 25, 26, 27, 28, 30], "idea": 10, "o": [10, 20, 21, 26], "real": [10, 23, 25, 26, 27, 28, 31], "don": [10, 19, 25, 26, 27, 28], "cycl": 10, "uniqu": [10, 16, 20, 23], "graph": 10, "hopefulli": 10, "shift": [10, 28], "reduc": [10, 19, 25, 27], "tree": [10, 28], "realli": [10, 15, 17, 27, 28], "kind": [10, 12, 20, 31], "unnecessari": 10, "under": [10, 14], "consider": 10, "direct": [10, 15, 17, 20, 25, 26], "edg": 10, "bunch": 10, "bin": [10, 20], "distanc": [10, 19], "argu": 10, "rather": [10, 15, 17, 19, 23, 26], "than": [10, 12, 15, 17, 19, 21, 22, 23, 25, 26, 27, 28], "weird": 10, "binari": [10, 19, 28], "sens": [10, 15, 17], "challeng": 10, "cannot": [10, 16], "vanilla": 10, "classif": [10, 11, 18, 19, 21, 24, 25, 27], "length": [10, 12, 15, 17, 21], "across": [10, 19, 26, 28], "mode": [10, 23], "id": [10, 15, 17, 18, 21], "caveat": [10, 25], "below": [10, 20, 26, 27, 28], "simpli": [10, 15, 17, 25], "henc": [10, 20, 23], "particular": [10, 15, 17, 18, 27], "vector": [10, 15, 17, 18, 19, 23, 26], "pick": [10, 27, 28], "indic": [10, 23, 25, 26, 31], "clean": 10, "focu": 10, "declar": 10, "skip": [10, 19, 23], "minut": [10, 26], "recogn": 10, "connect": [10, 31], "clever": 10, "won": 10, "specifi": [10, 16, 17, 19, 21, 23, 25, 27, 28], "correspond": [10, 14, 15, 17, 18, 19, 21, 23, 25, 27], "someth": [10, 23, 25, 27, 28], "arrow": 10, "equal": 10, "beacus": 10, "phew": 10, "un": 10, "computaiton": 10, "paragraph": 10, "ago": 10, "skippabl": 10, "trust": 10, "pedant": 10, "roughli": [10, 26], "feautr": 10, "major": 10, "hood": 10, "treat": [10, 19, 20], "sensit": [10, 19, 27], "recommend": [10, 23, 25, 27, 28], "issu": [10, 15, 17], "recal": [10, 27, 28], "intrins": 10, "clear": [10, 25], "By": [10, 15, 17], "record": [10, 20], "avoid": [10, 14, 15, 17, 21, 23, 28, 30], "necess": 10, "engin": 10, "histori": [10, 26], "seem": [10, 25], "captur": [10, 15, 17], "intuit": 10, "bug": 10, "invalid": 10, "notic": [10, 20, 23, 27, 31], "enabl": [10, 12, 15, 17, 18, 19, 20, 21, 25, 31], "wonder": 10, "rest": [10, 25, 28], "familiar": 10, "spirit": 10, "ibm": 10, "supervis": [10, 25], "unsupervis": 10, "trickier": 10, "tripl": 10, "null": [10, 12], "blue": [10, 20], "hous": [10, 22, 23, 28, 30], "la": 10, "maison": 10, "bleue": 10, "flower": [10, 21], "fleur": 10, "mismatch": 10, "level": [10, 15, 17, 19], "intersect": 10, "alignmenterror": 10, "And": [10, 14, 20], "english": 10, "side": [10, 26], "phrase": 10, "foreign": 10, "maximum": [10, 26, 28], "fed": 10, "cover": [10, 21, 22, 25, 26, 31], "multipl": [10, 19, 20, 23, 25, 26, 29, 31], "wordalign": 10, "j0": 10, "k": [10, 15, 17, 19, 28, 31], "lab": 10, "alignedsent": 10, "span": [10, 12, 26, 28], "far": [10, 18, 23, 25], "contain": [10, 12, 15, 16, 17, 20, 23, 26], "empti": [10, 15, 16, 17, 18, 19, 23], "has_kei": 10, "sortedspan": 10, "sort": [10, 16], "achiev": [10, 27, 28], "smallest": [10, 19], "local": [10, 28], "perfect": [10, 23, 27], "interest": [10, 25], "support": [10, 15, 17, 19, 25, 26, 27, 28], "ef": 10, "broken": 10, "investig": 10, "fast": [11, 23, 25], "machin": [11, 20, 23, 26], "csv": [11, 24], "offlin": [11, 24], "polici": [11, 16, 24, 27, 31], "evalu": [11, 19, 23, 24, 26, 27], "content": [11, 17, 20, 22, 23, 24, 30], "person": [11, 22, 23, 24, 28, 30], "slate": [11, 15, 17, 18, 24], "convers": [11, 24], "api": 11, "core": [11, 15, 17, 31], "migrat": 11, "guid": [11, 26], "var": 12, "templat": 12, "handlebar": 12, "inner_templ": 12, "hb": 12, "depth0": 12, "helper": [12, 15, 17], "stack1": 12, "lookupproperti": 12, "propertynam": 12, "prototyp": 12, "hasownproperti": 12, "undefin": 12, "extra_info": 12, "helpermiss": 12, "typeof": 12, "nullcontext": [12, 28], "hash": [12, 15, 17, 18, 19, 22, 30], "alias1": 12, "alias2": 12, "alias3": 12, "alias4": 12, "escapeexpress": 12, "fn": [12, 19], "invers": [12, 25, 26, 31], "noop": 12, "33": [12, 28], "nn": [12, 19], "block": 12, "short_nam": [12, 17], "56": [12, 25], "one_of": 12, "196": 12, "default_valu": [12, 17, 19], "includezero": 12, "270": 12, "19": [12, 20], "24": [12, 15, 17, 25, 28], "necessari": [12, 17, 23, 27, 28], "21": [12, 20, 25], "26": [12, 15, 17, 28], "23": [12, 20, 22, 23, 25, 30], "35": [12, 22, 23, 30, 31], "44": 12, "46": [12, 22, 30], "48": [12, 25], "50": [12, 20, 21, 23], "49": 12, "72": [12, 28], "127": 12, "12": [12, 15, 17, 18, 20, 28], "88": 12, "110": 12, "unless": [12, 23], "streq": 12, "bool": [12, 15, 17, 18, 19], "146": 12, "165": 12, "136": 12, "189": 12, "169": 12, "177": 12, "245": 12, "262": 12, "htmlnn": 12, "abbr": 12, "persist": 12, "suppli": [12, 15, 17, 18, 21, 22, 23, 27, 28], "mark": 12, "group": [12, 15, 17, 20, 23], "href": 12, "warn": [12, 14, 15, 17, 21], "subject": 12, "compil": 12, "buffer": 12, "52": 12, "blockhelpermiss": 12, "usedata": 12, "command_line_arg": 12, "startswith": 12, "41": 12, "16": [12, 21, 25, 28], "invokeparti": 12, "decor": 12, "37": 12, "optionsn": 12, "nnthere": 12, "base": [12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 31], "irrespect": 12, "nnmost": 12, "effect": [12, 27, 28, 31], "sever": [12, 20, 25], "repeat": 12, "nngeneraln": 12, "option_group": 12, "13": [12, 20], "nnreductionsn": 12, "27": [12, 25], "useparti": 12, "dftovw": [13, 20], "sklearn": [13, 14, 29], "pylibvw": [13, 14, 15, 17], "noth": [14, 15, 17], "move": [14, 20], "deprec": [14, 15, 17], "rundown": 14, "direcli": 14, "past": 14, "avail": [14, 15, 16, 17, 18, 19, 20, 26], "expos": [14, 15, 17, 19], "advanc": [14, 15, 17, 20, 21, 22, 23, 30], "less": [14, 25, 27, 28], "replac": [14, 21, 22, 23, 25, 29, 30], "example_namespac": [14, 17], "namespace_id": [14, 17], "namespaceid": [14, 15, 17], "abstract_label": [14, 17], "abstractlabel": [14, 15, 17], "simple_label": [14, 16, 17, 18], "multiclass_label": [14, 16, 17], "multiclasslabel": [14, 15, 16, 17, 20], "multiclass_probabilities_label": [14, 17], "multiclassprobabilitieslabel": [14, 15, 17], "cost_sensitive_label": [14, 17], "costsensitivelabel": [14, 15, 17], "cbandits_label": [14, 17], "cblabel": [14, 15, 17], "free": [14, 19, 23, 25], "constant": [14, 16, 19, 22, 23], "pscalar": [14, 18], "predictiontyp": [14, 15, 17], "lsimpl": [14, 18], "lbinari": [14, 18], "scalar": [14, 15, 17, 18], "ldefault": [14, 18], "lmax": [14, 18], "from_exampl": [14, 15, 17], "exist": [14, 15, 17, 18, 19, 23], "static": [14, 15, 17], "factori": 14, "accept": [14, 27, 28], "correspodn": 14, "unus": 14, "fix": [14, 25], "callsit": 14, "A": [15, 16, 17, 20, 23, 26, 27, 28, 31], "small": [15, 28], "abstract": [15, 17], "actionscor": [15, 17], "score": [15, 17, 18, 19, 26, 31], "cbcontinuouslabel": [15, 17], "cb_continu": [15, 17, 18], "cbcontinuouslabelel": [15, 17], "pdf_valu": [15, 17, 18, 28], "cbevallabel": [15, 17], "eval": [15, 17, 25], "weight": [15, 16, 17, 18, 19, 21, 22, 23, 25, 26], "cblabelel": [15, 17], "partial_predict": [15, 17], "kwarg": [15, 17, 19, 28], "ccblabel": [15, 17], "ccblabeltyp": [15, 17], "unset": [15, 17], "explicit_included_act": [15, 17], "outcom": [15, 17, 18, 31], "intenum": [15, 17], "slot": [15, 17, 18, 31], "ccbslotoutcom": [15, 17], "action_prob": [15, 17], "costsensitiveel": [15, 17], "wap_valu": [15, 17], "initstringordictorrawexampl": [15, 17], "wrapper": [15, 17, 19], "wrap": [15, 17, 28], "safer": [15, 17], "dict": [15, 17, 18, 20], "tupl": [15, 16, 17, 18], "nativ": [15, 17, 18], "rare": [15, 17, 23], "callabl": [15, 17], "until": [15, 17, 25, 28], "longer": [15, 17], "repres": [15, 16, 17, 20, 26, 28, 31], "item": [15, 17, 20, 27, 29, 31], "assum": [15, 17, 18, 19, 25, 27, 28], "infer": [15, 17, 31], "configur": [15, 17], "enum": [15, 17], "ensure_namespace_exist": [15, 17, 18], "alreadi": [15, 17, 18, 21, 25, 26], "num_features_in": [15, 17, 18], "feature_weight": [15, 17, 18], "associ": [15, 17, 18, 19, 20, 25, 26, 28, 31], "get_feature_id": [15, 17], "ns_hash": [15, 17], "label_class": [15, 17], "abil": [15, 17], "legaci": [15, 17], "slateslabel": [15, 17], "get_label_typ": [15, 17], "get_n": [15, 17], "argss": [15, 17], "get_predict": [15, 17], "prediction_typ": [15, 17], "releas": [15, 17], "accord": [15, 17, 19, 30], "action_scor": [15, 17], "multilabel": [15, 16, 17, 18], "multiclassprob": [15, 17], "decision_scor": [15, 17], "action_pdf_valu": [15, 17], "pdf": [15, 17, 18, 28], "active_multiclass": [15, 17], "nopr": [15, 17], "get_prediction_typ": [15, 17], "includ": [15, 17, 18, 19, 21, 22, 23, 25, 26, 27, 30], "hasn": [15, 17], "pop_featur": [15, 17, 18], "top": [15, 17, 18, 28], "pop": [15, 17], "pop_namespac": [15, 17, 18], "unhash": [15, 17], "push": [15, 17], "featurelist": [15, 17], "space_hash": [15, 17, 20], "hash_spac": [15, 17, 18, 20], "feat_hash": [15, 17, 20], "hash_featur": [15, 17, 18, 20], "match": [15, 17, 20], "push_hashed_featur": [15, 17, 18], "push_namespac": [15, 17, 18], "onto": [15, 17], "ala": [15, 17], "setup_don": [15, 17], "ie": [15, 17], "quadrat": [15, 17, 18, 19, 23], "stride": [15, 17, 18], "sum_feat_sq": [15, 17, 18], "unsetup_exampl": [15, 17, 18], "edit": [15, 17], "examplenamespac": [15, 17], "allow": [15, 16, 17, 23, 25, 26, 27, 28], "oper": [15, 17, 19, 23, 27, 28], "mainli": [15, 17], "0th": [15, 17], "target": [15, 16, 17, 18, 19, 23, 29], "feature_list": [15, 17], "feature_list_legaci": [15, 17], "never": [15, 17, 25, 26, 27, 28], "inli": [15, 17], "conditional_contextual_bandit": [15, 17, 18], "contextual_bandit_ev": [15, 17], "cost_sensit": [15, 17, 18], "simpl": [15, 16, 17, 20, 23], "multilabellabel": [15, 17], "convert": [15, 16, 17, 19, 27, 28], "space": [15, 17, 23, 25, 26, 27, 28], "charact": [15, 17, 18, 19], "versu": [15, 17], "touch": [15, 17], "respres": [15, 17], "ord_n": [15, 17], "represent": [15, 16, 17, 23], "field": [15, 17, 19, 26], "slateslabeltyp": [15, 17], "slot_id": [15, 17, 18], "arg_str": [15, 17, 20], "enable_log": [15, 17, 20], "arg_list": [15, 17], "kw": [15, 17], "bind": [15, 17, 18], "glue": [15, 17], "merg": [15, 17], "togeth": [15, 17, 27, 28], "duplic": [15, 17, 19], "audit": [15, 17, 18], "naiv": [15, 17], "control": [15, 17, 19, 26], "pleas": [15, 16, 17, 19, 25, 26], "abl": [15, 17, 23, 25, 27, 28], "get_log": [15, 17, 20], "token": [15, 17], "compris": [15, 17], "vw1": [15, 17], "vw2": [15, 17], "vw3": [15, 17], "vw4": [15, 17], "ac": [15, 17], "interact": [15, 17, 19, 23, 25, 26, 28, 31], "stringordict": [15, 17], "descript": [15, 17, 31], "valid": [15, 16, 17, 23, 25], "stop": [15, 17, 18, 26], "statist": [15, 17, 21, 22], "care": [15, 17], "get_config": [15, 17], "filtered_enabled_reductions_onli": [15, 17], "messag": [15, 16, 17], "init": [15, 17, 20], "offset": [15, 17, 18, 23], "get_weight_from_nam": [15, 17, 20], "feature_nam": [15, 17, 20, 29], "namespace_nam": [15, 17, 20], "live": [15, 17, 23], "task_data": [15, 17], "num_weight": [15, 17, 18], "str_ex": [15, 17], "element": [15, 17, 20], "75": [15, 17, 20, 23, 26, 28], "cb_adf": [15, 17], "parser_ran": [15, 17], "filenam": [15, 17, 18, 19, 23], "renam": [16, 17, 19, 20], "contextualbanditlabel": 16, "constructor": [16, 19], "hashabl": 16, "taken": [16, 25], "observ": [16, 20, 26, 27, 28, 31], "lower": [16, 20, 25, 31], "better": [16, 23, 25, 27, 31], "select": [16, 28, 31], "seri": [16, 19, 31], "suitabl": [16, 31], "built": [16, 23], "conveni": 16, "compos": 16, "identifi": [16, 26], "conv1": 16, "convert_df": [16, 20], "conv2": 16, "col": [16, 20], "conv3": 16, "doubleit": 16, "rename_featur": 16, "feat_a": 16, "conv4": 16, "ns1": 16, "ns2": 16, "check_columns_type_and_valu": 16, "check_features_typ": 16, "typeerror": [16, 20], "check_instance_column": 16, "attribut": [16, 20], "_col": 16, "occur": [16, 23, 27, 28], "prepend": [16, 25], "formula": 16, "valueerror": [16, 20, 28], "check_label_typ": 16, "check_missing_columns_df": 16, "check_namespaces_typ": 16, "empty_col": 16, "much": [16, 23, 28], "classmethod": 16, "from_colnam": 16, "label_typ": [16, 17], "from_column_nam": [16, 20], "multi_label": 16, "conv": 16, "df2": 16, "x1": 16, "x2": 16, "x3": 16, "process_featur": 16, "process_label_and_tag": 16, "raise_missing_col_error": 16, "missing_cols_dict": 16, "set_namespac": 16, "as_typ": 16, "enforc": 16, "numer": [16, 19, 20], "categor": [16, 20], "ensure_valid_valu": 16, "multi": [16, 26], "thu": [16, 21, 25], "factor": [16, 19], "ns_one_featur": 16, "ns_multi_featur": 16, "ns_one_feature_with_nam": 16, "firstnamespac": 16, "ns_one_feature_with_name_and_valu": 16, "check_attributes_typ": 16, "expected_typ": 16, "coupl": 17, "initstringordict": 17, "data_iter": 17, "my_exampl": 17, "useoracl": 17, "vwoption": 17, "help_str": 17, "allow_overrid": 17, "value_suppli": 17, "default_value_suppli": 17, "properti": [17, 20, 21], "is_flag": 17, "get_all_vw_opt": 17, "get_label_class_from_enum": 17, "merge_model": 17, "base_model": 17, "separ": [17, 21, 23, 25, 26], "serial": 17, "exact": [17, 25], "preserve_performance_count": [17, 19], "model1": 17, "initial_regressor": [17, 19], "model2": 17, "merged_model": 17, "emploi": 18, "extra": [18, 19], "page": [18, 26, 31], "hold": [18, 23], "parser": [18, 20, 23], "arg1": 18, "arg2": 18, "vw_log": 18, "arg3": 18, "audit_exampl": 18, "get_argu": 18, "resolv": 18, "depend": [18, 26, 27], "get_enabled_learn": 18, "get_enabled_reduct": 18, "get_holdout_sum_loss": 18, "cumul": [18, 20], "holdout": [18, 19, 25], "suffer": 18, "get_id": 18, "get_learner_metr": 18, "stack": 18, "metric": [18, 31], "extra_metr": 18, "get_opt": 18, "get_search_ptr": 18, "pointer": 18, "get_strid": 18, "get_sum_loss": 18, "get_weighted_exampl": 18, "json_weight": 18, "json": [18, 19, 28], "lconditionalcontextualbandit": 18, "lcontextualbandit": 18, "lcontextualbanditev": 18, "lcontinu": 18, "lmulticlass": 18, "lmultilabel": 18, "lslate": 18, "learn_multi": 18, "paction_pdf_valu": 18, "paction_prob": 18, "paction_scor": 18, "pactive_multiclass": 18, "pdecision_scor": 18, "pmulticlass": 18, "pmulticlassprob": 18, "pmultilabel": 18, "pnopr": 18, "ppdf": 18, "pprob": 18, "predict_multi": 18, "run_pars": 18, "extern": [18, 19], "set_weight": 18, "arg4": 18, "prepar": 18, "taction": 18, "tshare": 18, "tslot": 18, "tunset": 18, "erase_namespac": 18, "ith": 18, "ord": 18, "get_action_pdf_valu": 18, "get_action_scor": 18, "get_active_multiclass": 18, "activ": [18, 23, 25], "get_cb_continuous_class": 18, "get_cb_continuous_num_cost": 18, "get_cb_continuous_cost": 18, "get_cb_continuous_pdf_valu": 18, "get_cb_eval_act": 18, "cb_eval": 18, "get_cb_eval_class": 18, "get_cb_eval_num_cost": 18, "get_cb_eval_cost": 18, "get_cb_eval_partial_predict": 18, "get_cb_eval_prob": 18, "get_cb_eval_weight": 18, "get_cbandits_class": 18, "get_cbandits_num_cost": 18, "get_cbandits_cost": 18, "get_cbandits_partial_predict": 18, "get_cbandits_predict": 18, "get_cbandits_prob": 18, "get_cbandits_weight": 18, "get_ccb_act": 18, "get_ccb_cost": 18, "get_ccb_explicitly_included_act": 18, "arrai": [18, 19], "get_ccb_has_outcom": 18, "verifi": 18, "get_ccb_num_explicitly_included_act": 18, "get_ccb_num_prob": 18, "get_ccb_prob": 18, "get_ccb_typ": 18, "get_ccb_weight": 18, "get_costsensitive_class": 18, "get_costsensitive_num_cost": 18, "get_costsensitive_cost": 18, "get_costsensitive_partial_predict": 18, "get_costsensitive_predict": 18, "get_costsensitive_wap_valu": 18, "recomput": 18, "get_decision_scor": 18, "get_example_count": 18, "counter": [18, 19, 21, 22, 23, 25], "seen": [18, 23, 27], "get_feature_numb": 18, "get_ft_offset": 18, "bulk": 18, "get_multiclass_label": 18, "get_multiclass_weight": 18, "get_multilabel_label": 18, "get_multilabel_predict": 18, "get_pdf": 18, "get_prob": 18, "get_scalar": 18, "get_simplelabel_initi": 18, "baselin": [18, 27, 28], "get_simplelabel_label": 18, "get_simplelabel_weight": 18, "get_slates_act": 18, "get_slates_cost": 18, "get_slates_label": 18, "get_slates_num_prob": 18, "get_slates_prob": 18, "get_slates_slot_id": 18, "get_slates_typ": 18, "get_slates_weight": 18, "get_topic_predict": 18, "lda": [18, 19], "topic": [18, 19], "get_total_sum_feat_sq": 18, "num_namespac": 18, "iff": 18, "off": [18, 23, 26], "push_feature_dict": 18, "push_feature_list": 18, "arg5": 18, "set_test_onli": 18, "compat": 19, "sklearn_vw": 19, "model_select": [19, 29], "train_test_split": [19, 29], "vwclassifi": 19, "make_hastie_10_2": 19, "n_sampl": 19, "10000": 19, "random_st": [19, 20], "astyp": [19, 20], "float32": 19, "x_train": 19, "x_test": 19, "y_train": 19, "y_test": 19, "test_siz": [19, 29], "256": [19, 28], "fit": [19, 23, 28], "y_pred": 19, "util": [19, 27, 28], "integr": 19, "vowpal": [19, 21, 25], "wabbit": [19, 21, 25], "scikit": 19, "linearclassifiermixin": 19, "logisticregress": 19, "convert_to_vw": 19, "convert_label": 19, "strict_pars": 19, "learning_r": 19, "power_t": [19, 21, 22, 23, 25, 31], "decay_learning_r": 19, "initial_t": [19, 21, 22, 23, 25], "feature_mask": 19, "initial_weight": 19, "random_weight": 19, "normal_weight": 19, "truncated_normal_weight": 19, "sparse_weight": 19, "input_feature_regular": 19, "random_se": 19, "hash_se": 19, "ignore_linear": 19, "redefin": [19, 20], "bit_precis": 19, "noconst": [19, 23], "ngram": 19, "feature_limit": 19, "affix": 19, "spell": 19, "dictionary_path": 19, "permut": 19, "leave_duplicate_interact": 19, "cubic": [19, 23], "testonli": 19, "holdout_period": [19, 23], "holdout_aft": 19, "early_termin": 19, "initial_pass_length": 19, "min_predict": 19, "max_predict": 19, "sort_featur": 19, "quantile_tau": 19, "l1": [19, 20], "no_bias_regular": 19, "named_label": [19, 21], "final_regressor": [19, 21, 22, 25], "invert_hash": 19, "save_resum": 19, "output_feature_regularizer_binari": 19, "output_feature_regularizer_text": 19, "oaa": [19, 21, 29], "ect": 19, "csoaa": [19, 25], "wap": 19, "inpass": 19, "multitask": 19, "dropout": 19, "meanfield": 19, "conjugate_gradi": 19, "bfg": 19, "hessian_on": 19, "mem": 19, "termin": 19, "lda_alpha": 19, "lda_rho": 19, "lda_d": 19, "lda_epsilon": 19, "minibatch": 19, "svrg": 19, "stage_s": 19, "ftrl": 19, "coin": [19, 27, 28], "pistol": 19, "ftrl_alpha": 19, "ftrl_beta": 19, "ksvm": 19, "kernel": 19, "bandwidth": [19, 28], "degre": [19, 20, 28], "sgd": 19, "adapt": [19, 23], "invari": [19, 23], "normal": [19, 20, 23, 25, 31], "link": [19, 31], "stage_poli": 19, "sched_expon": 19, "batch_sz": 19, "batch_sz_no_doubl": 19, "lrq": [19, 23], "lrqdropout": 19, "lrqfa": 19, "cach": [19, 21, 22, 25, 28], "cache_fil": [19, 23], "kill_cach": 19, "baseestim": 19, "estim": [19, 25], "happi": 19, "flag": [19, 25], "size": [19, 20], "ring": 19, "throw": 19, "malform": 19, "power": [19, 20, 28], "regressor": [19, 23, 26], "determin": [19, 25], "truncat": 19, "spars": [19, 27], "datastructur": 19, "regular": 19, "disgnost": 19, "progress": [19, 20, 23, 25], "term": [19, 26, 28], "shall": 19, "wildcard": 19, "tabl": [19, 21, 27, 28], "gram": 19, "conjunct": 19, "limit": [19, 26], "prefix": 19, "suffix": 19, "2a": 19, "3b": 19, "char": 19, "directori": 19, "env": 19, "path": [19, 20], "combin": [19, 20, 25, 28, 31], "ba": 19, "printabl": 19, "period": [19, 23, 25], "toler": 19, "decreas": [19, 20], "earli": 19, "largest": 19, "turn": [19, 23, 26, 27, 28], "disregard": 19, "lead": [19, 25, 26, 28], "smaller": [19, 28], "classic": 19, "hing": 19, "logist": 19, "quantil": [19, 20], "tau": 19, "l_1": 19, "l_2": 19, "comma": [19, 21], "sep": 19, "punc": 19, "human": 19, "computation": 19, "expens": 19, "state": [19, 23], "resum": 19, "reset": 19, "warmstart": 19, "oaa_subsampl": 19, "subsampl": 19, "tournament": 19, "sigmoid": 19, "forward": 19, "neural": 19, "network": 19, "hidden": 19, "unit": 19, "layer": [19, 25], "conjug": 19, "gradient": [19, 23], "optim": [19, 23, 26, 27, 28], "bgf": 19, "memori": [19, 23], "threshold": 19, "prior": [19, 26], "sparsiti": 19, "converg": [19, 23], "stream": 19, "stochast": 19, "varianc": 19, "stage": 19, "proxim": 19, "leader": 19, "bet": 19, "alpha": [19, 20, 28], "beta": 19, "svm": 19, "rbf": 19, "poli": 19, "descent": 19, "adax": 19, "2x": 19, "awar": 19, "glf1": 19, "stagewis": 19, "polynomi": 19, "expon": 19, "quantiti": 19, "multipli": [19, 27, 28], "batch": 19, "doubl": 19, "low": [19, 23], "rank": [19, 23], "sample_weight": 19, "shape": 19, "n_featur": 19, "get_coef": 19, "coeffici": 19, "get_intercept": 19, "intercept": 19, "get_param": 19, "deep": 19, "full": [19, 20, 25], "get_vw": 19, "n_class": 19, "set_coef": 19, "coef": 19, "set_param": 19, "destroi": 19, "recreat": 19, "remain": [19, 26], "vw_": 19, "vwmulticlassifi": 19, "logit": 19, "assumpt": [19, 31], "classes_": 19, "coef_": 19, "decision_funct": 19, "confid": 19, "sign": 19, "hyperplan": 19, "array_lik": 19, "predict_proba": 19, "multiclassifi": 19, "estimator_": 19, "20": [19, 20, 26, 28], "38924146": 19, "30537927": 19, "40661219": 19, "29669389": 19, "52335149": 19, "23832427": 19, "52696788": 19, "23651604": 19, "65430814": 19, "17284594": 19, "61224216": 19, "19387889": 19, "vwregressor": 19, "regressormixin": 19, "tovw": 19, "feature_extract": 19, "hashingvector": 19, "cat": [19, 21, 22, 28], "dog": 19, "catdog": 19, "hv": 19, "fit_transform": 19, "300839": 19, "980517": 19, "thank": [20, 25], "etiennekintzl": 20, "contribut": [20, 25], "vwlogpars": 20, "concentr": 20, "particul": 20, "matter": [20, 21, 25], "pm": 20, "atmospher": 20, "chines": 20, "citi": 20, "datetim": 20, "167": 20, "358": 20, "detail": [20, 21, 22, 25, 26, 30], "uci": 20, "repositori": 20, "archiv": 20, "ic": 20, "edu": 20, "ml": 20, "pm2": 20, "five": [20, 23, 26], "academ": 20, "paper": [20, 26], "liang": 20, "xuan": 20, "et": 20, "al": 20, "reliabl": [20, 23, 25], "air": 20, "qualiti": [20, 26], "assess": 20, "beij": 20, "pollut": 20, "weather": 20, "apec": 20, "winter": 20, "heat": 20, "download": [20, 21], "url": 20, "databas": 20, "00394": 20, "fivecitiepmdata": 20, "rar": 20, "download_data": 20, "folder": 20, "variabl": [20, 25], "data_fold": 20, "pm_data": 20, "develop": 20, "older": 20, "cell": 20, "section": [20, 21, 23, 26], "seaborn": 20, "sn": 20, "file_path_or_list": 20, "isinst": 20, "fname": 20, "dictionnari": 20, "table_lst": 20, "param": 20, "inside_t": 20, "after_t": 20, "_parse_vw_row": 20, "_make_output_df": 20, "_cast_str": 20, "cast": 20, "is_integ": 20, "lst": 20, "first_row": 20, "second_row": 20, "zip": 20, "appropri": 20, "int_col": 20, "example_count": 20, "current_featur": 20, "float_col": 20, "drop": [20, 23, 29], "param_nam": 20, "maxsplit": 20, "dest_dir": 20, "io": 20, "bytesio": 20, "rarfil": 20, "url_pm_citi": 20, "bcontent": 20, "rf": 20, "repr": 20, "extractal": 20, "import_data": 20, "folder_path": 20, "verbos": 20, "df_lst": 20, "listdir": 20, "fpath": 20, "city_nam": 20, "sub": 20, "repl": 20, "df_citi": 20, "read_csv": 20, "df_city_clean": 20, "No": [20, 21, 26], "pm_u": 20, "post": 20, "dropna": 20, "subset": 20, "concat": 20, "frac": 20, "123": 20, "shuffl": 20, "reset_index": 20, "inspect": 20, "get_feature_nam": 20, "cat_nam": 20, "get_cat_feature_nam": 20, "num_nam": 20, "select_dtyp": 20, "tolist": 20, "unique_values_cat": 20, "unique_valu": 20, "graphic": 20, "suptitle_fonts": 20, "suptitle_fontweight": 20, "bold": 20, "title_fonts": 20, "isdir": 20, "head": [20, 26, 27, 28, 29], "obviou": 20, "ug": 20, "dewp": 20, "dew": 20, "celsiu": [20, 28], "temp": 20, "temperatur": [20, 28], "humi": 20, "humid": 20, "pre": [20, 23], "pressur": 20, "hpa": 20, "cbwd": 20, "wind": 20, "iw": 20, "precipit": 20, "hourli": 20, "mm": 20, "iprec": 20, "dtype": 20, "year": [20, 22, 23, 30], "month": 20, "hour": 20, "season": [20, 28], "to_cat_col": 20, "nan": 20, "standard": [20, 23, 25], "log_pm": 20, "std": 20, "95": [20, 28], "corr": 20, "melt": 20, "id_var": 20, "value_nam": 20, "triangular": 20, "almost": 20, "perfectli": 20, "inplac": 20, "reli": 20, "upon": [20, 31], "illustr": 20, "present": [20, 23], "feature_valu": 20, "wherea": [20, 27], "nice": 20, "behind": [20, 25], "scene": 20, "special": [20, 23], "symbol": 20, "howev": [20, 25, 28], "column_not_in_df": 20, "subsect": 20, "middl": 20, "easili": 20, "log_pars": 20, "df_iter": 20, "summary_metr": 20, "instantan": 20, "scatter_var": 20, "average_loss": 20, "since_last": 20, "relplot": 20, "col_wrap": 20, "facet_kw": 20, "sharei": 20, "sharex": 20, "scatter": 20, "height": [20, 23], "fig": [20, 28], "suptitl": [20, 28], "fontweight": 20, "set_titl": [20, 28], "col_nam": 20, "tight_layout": 20, "000th": 20, "start_idx": 20, "50_000": 20, "distr_var": 20, "current_label": 20, "current_predict": 20, "example_weight": 20, "displot": 20, "dodg": 20, "hue": 20, "60": 20, "common_bin": 20, "05": [20, 22, 23, 30, 31], "substanti": 20, "offer": [20, 26], "ax1": 20, "ax2": 20, "ncol": 20, "scatterplot": 20, "ax": [20, 28], "max_rang": 20, "99": 20, "set_xlim": 20, "set_ylim": [20, 28], "range_x": 20, "min": [20, 28], "linestyl": 20, "color": [20, 23], "red": [20, 23], "linewidth": 20, "histogram": 20, "histplot": 20, "tend": 20, "undervalu": 20, "skew": 20, "weights_df": 20, "vw_feature_nam": 20, "is_cat": 20, "zfill": 20, "sort_valu": 20, "catplot": 20, "bar": [20, 23], "horizont": 20, "flat": [20, 28], "axhlin": 20, "grai": 20, "higher": [20, 23, 27, 28], "orient": 20, "calm": 20, "cv": 20, "chengdu": 20, "oddli": 20, "north": 20, "2015": 20, "noon": 20, "guangzhou": 20, "shanghai": 20, "barplot": 20, "set_xticklabel": 20, "get_xticklabel": 20, "explain": [20, 21, 23, 25], "hist": 20, "40": 20, "decid": [20, 27, 28, 31], "datetime_featur": 20, "ns_datetim": 20, "datetime_n": 20, "ns_citi": 20, "city_n": 20, "weather_featur": 20, "ns_weather": 20, "weather_n": 20, "converter_advanc": 20, "tfeatur": 20, "examples_advanc": 20, "model_advanc": 20, "exponenti": [20, 23], "params_advanc": 20, "df_iter_advanc": 20, "metrics_advanc": 20, "error_advanc": 20, "ax3": 20, "ax4": 20, "nrow": 20, "iloc": 20, "orang": 20, "loss_typ": 20, "n_iter": 20, "10_000": 20, "df_loss": 20, "roll": 20, "loss_last_it": 20, "tail": [20, 27, 28], "pct_diff_loss": 20, "025": 20, "\u03b4": 20, "2f": [20, 28], "rotat": [20, 28], "improv": [20, 27, 28], "000": 20, "iri": 21, "overview": [21, 23], "introduc": [21, 22, 23, 26], "understand": [21, 22, 23, 25, 26, 28, 30], "instal": [21, 22, 23, 30], "plant": 21, "speci": 21, "internet": 21, "wget": 21, "9203605": 21, "sepal": 21, "width": 21, "petal": 21, "setosa": 21, "deeper": 21, "wikipedia": 21, "csv_separ": 21, "csv_header": 21, "_tag": 21, "_label": 21, "csv_ns_valu": 21, "versicolor": 21, "virginica": 21, "header": 21, "ratio": 21, "namespace1": 21, "ratio1": 21, "namespace2": 21, "ratio2": 21, "status": [21, 22], "reinforc": [21, 22, 23, 25, 26, 30], "datafil": [21, 22, 23, 25], "num": [21, 22, 23, 25], "sourc": [21, 22, 25], "gd": [21, 25], "scorer": [21, 25], "averag": [21, 22, 23, 25, 26, 31], "000000": [21, 22, 23, 25], "031250": 21, "062500": 21, "64": [21, 28], "info": 21, "039062": 21, "046875": 21, "128": [21, 28], "150": 21, "033333": 21, "750": 21, "Then": [21, 23, 25], "shorter": 21, "copi": [21, 22, 23], "csv_no_file_head": 21, "txt": [21, 22], "asid": 21, "unknown": [21, 22], "kindli": 21, "quick": [22, 23, 30], "introduct": [22, 23, 27, 30], "roof": [22, 23, 30], "price": [22, 23, 30], "sqft": [22, 23, 30], "25": [22, 23, 25, 28, 30], "ag": [22, 23, 30], "2006": [22, 23, 30], "1976": [22, 23, 30], "53": [22, 23, 30], "87": [22, 23, 30], "1924": [22, 23, 30], "unfamiliar": 22, "techniqu": [22, 30], "With": [22, 31], "0000": [22, 23], "500000": [22, 23, 25], "666667": [22, 23], "333333": 22, "222222": 22, "tvowpal": 22, "workflow": 23, "manag": [23, 28], "house_dataset": 23, "second_hous": 23, "third_hous": 23, "respect": 23, "implicit": 23, "relat": [23, 31], "numeric_valu": 23, "impli": 23, "twice": 23, "come": [23, 25], "straightforward": 23, "sometim": 23, "absolut": [23, 28], "750000": [23, 25], "variou": [23, 26], "ouput": 23, "adjust": [23, 28], "noisi": 23, "massiv": 23, "down": 23, "too": [23, 25, 28], "high": [23, 27, 28], "risk": 23, "wors": 23, "often": [23, 31], "minimax": 23, "fundament": 23, "benefit": 23, "adversari": 23, "who": 23, "rule": 23, "game": 23, "react": [23, 25], "quickli": 23, "typic": [23, 25, 26], "veri": 23, "aggress": 23, "plausibli": 23, "iid": 23, "handl": [23, 27], "greatli": 23, "experi": [23, 26], "overrid": 23, "newer": 23, "highli": 23, "Or": 23, "wish": [23, 25], "altern": 23, "stdin": 23, "tcp": 23, "socket": 23, "critic": 23, "deviat": [23, 25], "success": 23, "printout": 23, "amount": [23, 31], "great": 23, "debug": 23, "backoff": 23, "handi": 23, "wrong": 23, "overfit": 23, "589385": 23, "531424": 23, "2508": 23, "378923": 23, "194769": 23, "8308": 23, "184476": 23, "002182": 23, "31": 23, "9975": 23, "090774": 23, "47": 23, "63": 23, "reach": 23, "unsurpris": 23, "reason": 23, "held": 23, "stdout": [23, 30], "dev": 23, "appear": 23, "primari": 23, "increment": [23, 28], "went": 23, "common": [23, 31], "obvious": 23, "229902": 23, "162853": 23, "165201": 23, "116060": 23, "882655": 23, "2592": 23, "453833": 23, "98": 23, "05905": 23, "15882": 23, "entri": 23, "fly": 23, "xy": 23, "cross": 23, "xyz": 23, "xyn": 23, "belong": 23, "again": [23, 25, 27], "advantag": 23, "collid": 23, "easi": [23, 25, 27, 28], "value_in_rang": 23, "digit": 23, "1st": 23, "guess": 23, "2nd": 23, "fraction": 23, "ridicul": 23, "cluster": 23, "thousand": 23, "resourc": 23, "scenario": 23, "brows": [23, 25, 26], "maxpagel": 25, "op": 25, "area": 25, "research": [25, 26], "aim": [25, 27], "candid": 25, "deploi": 25, "varieti": [25, 27], "stai": [25, 26, 28], "plan": 25, "heavi": 25, "encourag": 25, "carefulli": 25, "generalis": 25, "neither": 25, "didn": [25, 27], "fill": 25, "fake": 25, "weren": 25, "therebi": 25, "simplest": 25, "dm": [25, 26], "suspect": 25, "bias": 25, "provabl": 25, "propens": [25, 26, 31], "ip": [25, 26, 31], "doubli": [25, 26], "robust": [25, 26], "dr": [25, 26], "greedi": [25, 26], "tackl": 25, "tradeoff": 25, "explore_ev": 25, "oldest": 25, "worri": 25, "toi": 25, "user_ag": 25, "55": 25, "36": 25, "think": [25, 27, 28], "unseen": 25, "fresher": 25, "70": [25, 27, 28], "30": [25, 28], "dat": [25, 26], "worth": 25, "aren": 25, "untaken": 25, "round": 25, "known": [25, 26], "arm": [25, 31], "fact": 25, "serv": [25, 28], "dual": 25, "optimis": 25, "cb_type": [25, 26], "feel": 25, "disabl": 25, "report": 25, "calcul": 25, "discourag": 25, "unsur": 25, "suggest": 25, "complain": 25, "mix": 25, "ground": 25, "divid": 25, "625": 25, "littl": [25, 27, 28], "principl": 25, "gridsearch": 25, "hyperparamet": 25, "beforehand": 25, "rich": [25, 26], "adf": 25, "endpoint": 25, "particularli": 25, "slightli": [25, 28], "constantli": 25, "evolv": 25, "find": [25, 26], "fashion": 25, "leverag": 25, "pv": 25, "elsewher": 25, "john": 25, "langford": 25, "talk": 25, "obtain": 25, "416667": 25, "omit": 25, "altogeth": 25, "realis": 25, "6667": 25, "outsid": 25, "chosen": [25, 26, 27, 28], "feature_a": 25, "feature_b": 25, "written": 25, "feature_c": 25, "agre": 25, "disagre": 25, "number_of_arm": 25, "501957": 25, "prevent": 25, "mistak": 25, "cb_alg": 25, "cc": 25, "161": 25, "knowledg": 26, "repeatedli": [26, 28], "aid": 26, "dynam": 26, "environ": 26, "rapidli": [26, 27], "hypothet": [26, 27, 28], "app": 26, "visit": [26, 27, 31], "geoloc": 26, "websit": [26, 27], "cloud": 26, "mab": 26, "arriv": [26, 27], "locat": [26, 30], "devic": 26, "engag": [26, 27], "wait": 26, "reboot": 26, "unrespons": 26, "hardwar": 26, "spec": 26, "sku": 26, "failur": 26, "downtim": 26, "highest": 26, "parlanc": 26, "someon": 26, "act": 26, "\u03c0": 26, "mtr": 26, "focal": 26, "effici": 26, "bake": 26, "bag": 26, "softmax": 26, "compon": [26, 27, 28], "receiv": [26, 27, 28, 31], "ahead": 26, "semant": 26, "number_of_act": 26, "uniformli": [26, 27, 28], "theoret": 26, "unlik": 26, "divers": 26, "precis": 26, "signal": [26, 31], "s_1": 26, "s_2": 26, "proport": 26, "train_adf": 26, "uniform": [26, 28], "infin": 26, "excel": 26, "knob": 26, "uncertainti": 26, "frame": 26, "diagnost": [26, 30], "learn_exampl": 26, "review": 26, "learnt": 27, "site": [27, 28], "quantifi": [27, 28], "visitor": 27, "therefor": [27, 28], "chees": 27, "profil": [27, 28], "tri": 27, "dens": [27, 28], "feedback": [27, 28], "align": [27, 28], "mass": 27, "incorpor": [27, 28], "strategi": [27, 28], "likelihood": 27, "chanc": 27, "shown": 27, "reaction": [27, 28], "toss": [27, 28], "visual": [27, 28], "5000": [27, 28], "ser": 27, "ction": 27, "wouldn": 27, "hover": [27, 28], "peopl": [27, 28], "swap": [27, 28], "halfwai": [27, 28], "get_cost_1": [27, 28], "get_cost_new1": 27, "previous": 27, "run_simulation_multiple_cost_funct": [27, 28], "start_count": [27, 28], "end_count": [27, 28], "web": [27, 31], "num_iterations_per_cost_func": [27, 28], "total_iter": [27, 28], "spike": 27, "get_cost_new2": 27, "showcas": [27, 28], "saw": 27, "respond": 27, "simplist": [27, 28], "dimension": 27, "thermostat": 28, "household": 28, "satisfact": 28, "tr": 28, "propos": 28, "agent": 28, "infinit": 28, "minimum": 28, "math": 28, "user_liked_temperatur": 28, "user_disliked_temperatur": 28, "cold": 28, "warm": 28, "steep": 28, "harsh": 28, "min_valu": 28, "max_valu": 28, "randomli": 28, "selected_temperatur": 28, "fab": 28, "29": 28, "22": 28, "cats_label": 28, "example_dict": 28, "chosen_temp": 28, "_label_ca": 28, "dump": 28, "densiti": 28, "predict_temperatur": 28, "choose_room": 28, "reward_r": 28, "hit": 28, "txt_ex": 28, "plot_reward_r": 28, "smart": 28, "smooth": 28, "That": 28, "bucket": 28, "leav": 28, "discret": 28, "radiu": 28, "discreet": 28, "centr": 28, "28": 28, "goe": 28, "center": [28, 31], "bucket_centr": 28, "bigger": 28, "chain_hash": 28, "plot_reward_sweep": 28, "n_action": 28, "n_bandwidth": 28, "na": 28, "hits_percentag": 28, "set_xlabel": 28, "set_ylabel": 28, "04": 28, "va": 28, "vertic": 28, "set_figheight": 28, "set_figwidth": 28, "hide": 28, "tick": 28, "label_out": 28, "2048": 28, "grow": 28, "coarser": 28, "discretizaton": 28, "On": 28, "combinaiton": 28, "512": 28, "1024": 28, "bd": 28, "rr": 28, "callback": 28, "_draw_all_if_interact": 28, "0x7fa2c04924d0": 28, "post_execut": 28, "keyboardinterrupt": 28, "traceback": 28, "recent": 28, "opt": 28, "hostedtoolcach": 28, "x64": 28, "lib": 28, "python3": 28, "118": 28, "119": 28, "is_interact": 28, "draw_al": 28, "_pylab_help": 28, "gcf": 28, "cl": 28, "forc": 28, "130": 28, "get_all_fig_manag": 28, "canva": 28, "stale": 28, "draw_idl": 28, "backend_bas": 28, "2082": 28, "figurecanvasbas": 28, "2080": 28, "_is_idle_draw": 28, "2081": 28, "_idle_draw_cntx": 28, "backend": 28, "backend_agg": 28, "400": 28, "figurecanvasagg": 28, "396": 28, "acquir": 28, "lock": 28, "font": 28, "397": 28, "rendereragg": 28, "398": 28, "toolbar": 28, "_wait_cursor_for_draw_cm": 28, "399": 28, "render": 28, "401": 28, "gui": 28, "window": 28, "402": 28, "forget": 28, "superclass": 28, "403": 28, "super": 28, "artist": 28, "_finalize_raster": 28, "draw_wrapp": 28, "93": 28, "94": 28, "96": 28, "_raster": 28, "97": 28, "stop_raster": 28, "allow_raster": 28, "69": 28, "get_agg_filt": 28, "start_filt": 28, "73": 28, "74": 28, "3140": 28, "3137": 28, "resiz": 28, "3139": 28, "patch": 28, "mimag": 28, "_draw_list_compositing_imag": 28, "3141": 28, "suppresscomposit": 28, "3143": 28, "sfig": 28, "subfig": 28, "3144": 28, "imag": 28, "suppress_composit": 28, "129": 28, "not_composit": 28, "has_imag": 28, "composit": 28, "adjac": 28, "134": 28, "image_group": 28, "_base": 28, "3064": 28, "_axesbas": 28, "3061": 28, "artists_raster": 28, "3062": 28, "_draw_raster": 28, "3065": 28, "3067": 28, "close_group": 28, "3068": 28, "1380": 28, "1377": 28, "tlb1": 28, "tlb2": 28, "_get_ticklabel_bbox": 28, "ticks_to_draw": 28, "1379": 28, "1382": 28, "awai": 28, "overlap": 28, "ticklabel": 28, "1383": 28, "_update_label_posit": 28, "301": 28, "298": 28, "open_group": 28, "gid": 28, "get_gid": 28, "299": 28, "gridlin": 28, "tick1lin": 28, "tick2lin": 28, "300": 28, "label1": 28, "label2": 28, "302": 28, "303": 28, "773": 28, "771": 28, "gc": 28, "new_gc": 28, "772": 28, "set_foreground": 28, "get_color": 28, "set_alpha": 28, "get_alpha": 28, "774": 28, "set_url": 28, "_url": 28, "775": 28, "_set_gc_clip": 28, "906": 28, "graphicscontextbas": 28, "904": 28, "_alpha": 28, "905": 28, "_forced_alpha": 28, "_rgb": 28, "isrgba": 28, "hot": 28, "pickup": 28, "predicted_temeratur": 28, "get_smooth_cost": 28, "paramt": 28, "iris_dataset": 29, "load_iri": 29, "iris_datafram": 29, "training_data": 29, "testing_data": 29, "to_vw_format": 29, "idx": 29, "sepal_length_cm": 29, "sepal_width_cm": 29, "petal_length_cm": 29, "petal_width_cm": 29, "predicted_class": 29, "train_exampl": 30, "least": 30, "jointli": 31, "layout": 31, "box": 31, "whole": 31, "cant": 31, "address": 31, "explos": 31, "tradit": 31, "untract": 31, "extens": 31, "akin": 31, "global": 31, "occas": 31, "job": 31, "interview": 31, "corpor": 31, "trade": 31, "cloth": 31, "torso": 31, "footwear": 31, "ocas": 31, "2500": 31, "shared_context": 31, "torso_item": 31, "tshirt": 31, "buttonupshirt": 31, "highvi": 31, "legs_item": 31, "workpant": 31, "formalp": 31, "short": 31, "feet_item": 31, "formalsho": 31, "runner": 31, "flipflop": 31, "boot": 31, "reflect": 31, "dificult": 31, "inject": 31, "nois": 31, "stddev": 31, "075": 31, "reward_funct": 31, "torso_index": 31, "legs_index": 31, "feet_index": 31, "torso_valu": 31, "legs_val": 31, "feet_valu": 31, "piec": 31, "generate_slates_text_format": 31, "feet": 31, "generate_slates_text_format_with_label": 31, "chosen_torso_index": 31, "chosen_torso_prob": 31, "chosen_legs_index": 31, "chosen_legs_prob": 31, "chosen_feet_index": 31, "chosen_feet_prob": 31, "slates_vw": 31, "sa": 31, "explan": 31, "slates_reward": 31, "slates_predict": 31, "torso_prob": 31, "legs_prob": 31, "feet_prob": 31, "generate_combin": 31, "cb_vw": 31, "aa": 31, "au": 31, "aau": 31, "cb_reward": 31, "cb_predict": 31, "chosen_index": 31, "expand": 31, "regret": 31, "further": 31, "public": 31}, "objects": {"": [[15, 0, 0, "-", "vowpalwabbit"]], "vowpalwabbit": [[15, 1, 1, "", "AbstractLabel"], [15, 1, 1, "", "ActionScore"], [15, 1, 1, "", "CBContinuousLabel"], [15, 1, 1, "", "CBContinuousLabelElement"], [15, 1, 1, "", "CBEvalLabel"], [15, 1, 1, "", "CBLabel"], [15, 1, 1, "", "CBLabelElement"], [15, 1, 1, "", "CCBLabel"], [15, 1, 1, "", "CCBLabelType"], [15, 1, 1, "", "CCBSlotOutcome"], [15, 1, 1, "", "CostSensitiveElement"], [15, 1, 1, "", "CostSensitiveLabel"], [15, 1, 1, "", "Example"], [15, 1, 1, "", "ExampleNamespace"], [15, 1, 1, "", "LabelType"], [15, 1, 1, "", "MulticlassLabel"], [15, 1, 1, "", "MulticlassProbabilitiesLabel"], [15, 1, 1, "", "MultilabelLabel"], [15, 1, 1, "", "NamespaceId"], [15, 1, 1, "", "PredictionType"], [15, 1, 1, "", "SimpleLabel"], [15, 1, 1, "", "SlatesLabel"], [15, 1, 1, "", "SlatesLabelType"], [15, 1, 1, "", "Workspace"], [16, 0, 0, "-", "dftovw"], [17, 0, 0, "-", "pyvw"], [19, 0, 0, "-", "sklearn"]], "vowpalwabbit.AbstractLabel": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "from_example"]], "vowpalwabbit.ActionScore": [[15, 2, 1, "", "__init__"]], "vowpalwabbit.CBContinuousLabel": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "from_example"]], "vowpalwabbit.CBContinuousLabelElement": [[15, 2, 1, "", "__init__"]], "vowpalwabbit.CBEvalLabel": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "from_example"]], "vowpalwabbit.CBLabel": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "from_example"]], "vowpalwabbit.CBLabelElement": [[15, 2, 1, "", "__init__"]], "vowpalwabbit.CCBLabel": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "from_example"]], "vowpalwabbit.CCBLabelType": [[15, 3, 1, "", "ACTION"], [15, 3, 1, "", "SHARED"], [15, 3, 1, "", "SLOT"], [15, 3, 1, "", "UNSET"]], "vowpalwabbit.CCBSlotOutcome": [[15, 2, 1, "", "__init__"]], "vowpalwabbit.CostSensitiveElement": [[15, 2, 1, "", "__init__"]], "vowpalwabbit.CostSensitiveLabel": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "from_example"]], "vowpalwabbit.Example": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "ensure_namespace_exists"], [15, 2, 1, "", "feature"], [15, 2, 1, "", "feature_weight"], [15, 3, 1, "", "finished"], [15, 2, 1, "", "get_feature_id"], [15, 2, 1, "", "get_label"], [15, 2, 1, "", "get_ns"], [15, 2, 1, "", "get_prediction"], [15, 2, 1, "", "iter_features"], [15, 3, 1, "", "labelType"], [15, 2, 1, "", "learn"], [15, 2, 1, "", "num_features_in"], [15, 2, 1, "", "pop_feature"], [15, 2, 1, "", "pop_namespace"], [15, 2, 1, "", "push_feature"], [15, 2, 1, "", "push_features"], [15, 2, 1, "", "push_hashed_feature"], [15, 2, 1, "", "push_namespace"], [15, 2, 1, "", "set_label_string"], [15, 3, 1, "", "setup_done"], [15, 2, 1, "", "setup_example"], [15, 3, 1, "", "stride"], [15, 2, 1, "", "sum_feat_sq"], [15, 2, 1, "", "unsetup_example"], [15, 3, 1, "", "vw"]], "vowpalwabbit.ExampleNamespace": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "iter_features"], [15, 2, 1, "", "num_features_in"], [15, 2, 1, "", "pop_feature"], [15, 2, 1, "", "push_feature"], [15, 2, 1, "", "push_features"]], "vowpalwabbit.LabelType": [[15, 3, 1, "", "CONDITIONAL_CONTEXTUAL_BANDIT"], [15, 3, 1, "", "CONTEXTUAL_BANDIT"], [15, 3, 1, "", "CONTEXTUAL_BANDIT_EVAL"], [15, 3, 1, "", "CONTINUOUS"], [15, 3, 1, "", "COST_SENSITIVE"], [15, 3, 1, "", "MULTICLASS"], [15, 3, 1, "", "MULTILABEL"], [15, 3, 1, "", "SIMPLE"], [15, 3, 1, "", "SLATES"]], "vowpalwabbit.MulticlassLabel": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "from_example"]], "vowpalwabbit.MulticlassProbabilitiesLabel": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "from_example"]], "vowpalwabbit.MultilabelLabel": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "from_example"]], "vowpalwabbit.NamespaceId": [[15, 2, 1, "", "__init__"], [15, 3, 1, "", "id"], [15, 3, 1, "", "ns"], [15, 3, 1, "", "ord_ns"]], "vowpalwabbit.PredictionType": [[15, 3, 1, "", "ACTION_PDF_VALUE"], [15, 3, 1, "", "ACTION_PROBS"], [15, 3, 1, "", "ACTION_SCORES"], [15, 3, 1, "", "ACTIVE_MULTICLASS"], [15, 3, 1, "", "DECISION_SCORES"], [15, 3, 1, "", "MULTICLASS"], [15, 3, 1, "", "MULTICLASSPROBS"], [15, 3, 1, "", "MULTILABELS"], [15, 3, 1, "", "NOPRED"], [15, 3, 1, "", "PDF"], [15, 3, 1, "", "PROB"], [15, 3, 1, "", "SCALAR"], [15, 3, 1, "", "SCALARS"]], "vowpalwabbit.SimpleLabel": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "from_example"]], "vowpalwabbit.SlatesLabel": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "from_example"]], "vowpalwabbit.SlatesLabelType": [[15, 3, 1, "", "ACTION"], [15, 3, 1, "", "SHARED"], [15, 3, 1, "", "SLOT"], [15, 3, 1, "", "UNSET"]], "vowpalwabbit.Workspace": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "example"], [15, 2, 1, "", "finish"], [15, 2, 1, "", "finish_example"], [15, 3, 1, "", "finished"], [15, 2, 1, "", "get_config"], [15, 2, 1, "", "get_label_type"], [15, 2, 1, "", "get_log"], [15, 2, 1, "", "get_prediction_type"], [15, 2, 1, "", "get_weight"], [15, 2, 1, "", "get_weight_from_name"], [15, 3, 1, "", "init"], [15, 2, 1, "", "init_search_task"], [15, 2, 1, "", "learn"], [15, 2, 1, "", "num_weights"], [15, 2, 1, "", "parse"], [15, 3, 1, "", "parser_ran"], [15, 2, 1, "", "predict"], [15, 2, 1, "", "save"]], "vowpalwabbit.dftovw": [[16, 1, 1, "", "ContextualbanditLabel"], [16, 1, 1, "", "DFtoVW"], [16, 1, 1, "", "Feature"], [16, 1, 1, "", "MultiLabel"], [16, 1, 1, "", "MulticlassLabel"], [16, 1, 1, "", "Namespace"], [16, 1, 1, "", "SimpleLabel"]], "vowpalwabbit.dftovw.ContextualbanditLabel": [[16, 2, 1, "", "__init__"], [16, 3, 1, "", "action"], [16, 3, 1, "", "cost"], [16, 3, 1, "", "probability"], [16, 2, 1, "", "process"]], "vowpalwabbit.dftovw.DFtoVW": [[16, 2, 1, "", "__init__"], [16, 2, 1, "", "check_columns_type_and_values"], [16, 2, 1, "", "check_features_type"], [16, 2, 1, "", "check_instance_columns"], [16, 2, 1, "", "check_label_type"], [16, 2, 1, "", "check_missing_columns_df"], [16, 2, 1, "", "check_namespaces_type"], [16, 2, 1, "", "convert_df"], [16, 2, 1, "", "empty_col"], [16, 2, 1, "", "from_colnames"], [16, 2, 1, "", "from_column_names"], [16, 2, 1, "", "process_features"], [16, 2, 1, "", "process_label_and_tag"], [16, 2, 1, "", "raise_missing_col_error"], [16, 2, 1, "", "set_namespaces"]], "vowpalwabbit.dftovw.Feature": [[16, 2, 1, "", "__init__"], [16, 2, 1, "", "process"], [16, 3, 1, "", "value"]], "vowpalwabbit.dftovw.MultiLabel": [[16, 2, 1, "", "__init__"], [16, 3, 1, "", "label"], [16, 2, 1, "", "process"]], "vowpalwabbit.dftovw.MulticlassLabel": [[16, 2, 1, "", "__init__"], [16, 3, 1, "", "label"], [16, 2, 1, "", "process"], [16, 3, 1, "", "weight"]], "vowpalwabbit.dftovw.Namespace": [[16, 2, 1, "", "__init__"], [16, 2, 1, "", "check_attributes_type"], [16, 3, 1, "", "expected_type"], [16, 2, 1, "", "process"]], "vowpalwabbit.dftovw.SimpleLabel": [[16, 2, 1, "", "__init__"], [16, 3, 1, "", "label"], [16, 2, 1, "", "process"], [16, 3, 1, "", "weight"]], "vowpalwabbit.pyvw": [[17, 1, 1, "", "AbstractLabel"], [17, 1, 1, "", "ActionScore"], [17, 1, 1, "", "CBContinuousLabel"], [17, 1, 1, "", "CBContinuousLabelElement"], [17, 1, 1, "", "CBEvalLabel"], [17, 1, 1, "", "CBLabel"], [17, 1, 1, "", "CBLabelElement"], [17, 1, 1, "", "CCBLabel"], [17, 1, 1, "", "CCBLabelType"], [17, 1, 1, "", "CCBSlotOutcome"], [17, 1, 1, "", "CostSensitiveElement"], [17, 1, 1, "", "CostSensitiveLabel"], [17, 1, 1, "", "Example"], [17, 1, 1, "", "ExampleNamespace"], [17, 1, 1, "", "LabelType"], [17, 1, 1, "", "MulticlassLabel"], [17, 1, 1, "", "MulticlassProbabilitiesLabel"], [17, 1, 1, "", "MultilabelLabel"], [17, 1, 1, "", "NamespaceId"], [17, 1, 1, "", "PredictionType"], [17, 1, 1, "", "SearchTask"], [17, 1, 1, "", "SimpleLabel"], [17, 1, 1, "", "SlatesLabel"], [17, 1, 1, "", "SlatesLabelType"], [17, 1, 1, "", "VWOption"], [17, 1, 1, "", "Workspace"], [17, 1, 1, "", "abstract_label"], [17, 1, 1, "", "cbandits_label"], [17, 1, 1, "", "cost_sensitive_label"], [17, 1, 1, "", "example"], [17, 1, 1, "", "example_namespace"], [17, 5, 1, "", "get_all_vw_options"], [17, 5, 1, "", "get_label_class_from_enum"], [17, 5, 1, "", "get_prediction"], [17, 5, 1, "", "merge_models"], [17, 1, 1, "", "multiclass_label"], [17, 1, 1, "", "multiclass_probabilities_label"], [17, 1, 1, "", "namespace_id"], [17, 1, 1, "", "simple_label"], [17, 1, 1, "", "vw"]], "vowpalwabbit.pyvw.AbstractLabel": [[17, 2, 1, "", "__init__"], [17, 2, 1, "", "from_example"]], "vowpalwabbit.pyvw.ActionScore": [[17, 2, 1, "", "__init__"]], "vowpalwabbit.pyvw.CBContinuousLabel": [[17, 2, 1, "", "__init__"], [17, 2, 1, "", "from_example"]], "vowpalwabbit.pyvw.CBContinuousLabelElement": [[17, 2, 1, "", "__init__"]], "vowpalwabbit.pyvw.CBEvalLabel": [[17, 2, 1, "", "__init__"], [17, 2, 1, "", "from_example"]], "vowpalwabbit.pyvw.CBLabel": [[17, 2, 1, "", "__init__"], [17, 2, 1, "", "from_example"]], "vowpalwabbit.pyvw.CBLabelElement": [[17, 2, 1, "", "__init__"]], "vowpalwabbit.pyvw.CCBLabel": [[17, 2, 1, "", "__init__"], [17, 2, 1, "", "from_example"]], "vowpalwabbit.pyvw.CCBLabelType": [[17, 3, 1, "", "ACTION"], [17, 3, 1, "", "SHARED"], [17, 3, 1, "", "SLOT"], [17, 3, 1, "", "UNSET"]], "vowpalwabbit.pyvw.CCBSlotOutcome": [[17, 2, 1, "", "__init__"]], "vowpalwabbit.pyvw.CostSensitiveElement": [[17, 2, 1, "", "__init__"]], "vowpalwabbit.pyvw.CostSensitiveLabel": [[17, 2, 1, "", "__init__"], [17, 2, 1, "", "from_example"]], "vowpalwabbit.pyvw.Example": [[17, 2, 1, "", "__init__"], [17, 2, 1, "", "ensure_namespace_exists"], [17, 2, 1, "", "feature"], [17, 2, 1, "", "feature_weight"], [17, 3, 1, "", "finished"], [17, 2, 1, "", "get_feature_id"], [17, 2, 1, "", "get_label"], [17, 2, 1, "", "get_ns"], [17, 2, 1, "", "get_prediction"], [17, 2, 1, "", "iter_features"], [17, 3, 1, "", "labelType"], [17, 2, 1, "", "learn"], [17, 2, 1, "", "num_features_in"], [17, 2, 1, "", "pop_feature"], [17, 2, 1, "", "pop_namespace"], [17, 2, 1, "", "push_feature"], [17, 2, 1, "", "push_features"], [17, 2, 1, "", "push_hashed_feature"], [17, 2, 1, "", "push_namespace"], [17, 2, 1, "", "set_label_string"], [17, 3, 1, "", "setup_done"], [17, 2, 1, "", "setup_example"], [17, 3, 1, "", "stride"], [17, 2, 1, "", "sum_feat_sq"], [17, 2, 1, "", "unsetup_example"], [17, 3, 1, "", "vw"]], "vowpalwabbit.pyvw.ExampleNamespace": [[17, 2, 1, "", "__init__"], [17, 2, 1, "", "iter_features"], [17, 2, 1, "", "num_features_in"], [17, 2, 1, "", "pop_feature"], [17, 2, 1, "", "push_feature"], [17, 2, 1, "", "push_features"]], "vowpalwabbit.pyvw.LabelType": [[17, 3, 1, "", "CONDITIONAL_CONTEXTUAL_BANDIT"], [17, 3, 1, "", "CONTEXTUAL_BANDIT"], [17, 3, 1, "", "CONTEXTUAL_BANDIT_EVAL"], [17, 3, 1, "", "CONTINUOUS"], [17, 3, 1, "", "COST_SENSITIVE"], [17, 3, 1, "", "MULTICLASS"], [17, 3, 1, "", "MULTILABEL"], [17, 3, 1, "", "SIMPLE"], [17, 3, 1, "", "SLATES"]], "vowpalwabbit.pyvw.MulticlassLabel": [[17, 2, 1, "", "__init__"], [17, 2, 1, "", "from_example"]], "vowpalwabbit.pyvw.MulticlassProbabilitiesLabel": [[17, 2, 1, "", "__init__"], [17, 2, 1, "", "from_example"]], "vowpalwabbit.pyvw.MultilabelLabel": [[17, 2, 1, "", "__init__"], [17, 2, 1, "", "from_example"]], "vowpalwabbit.pyvw.NamespaceId": [[17, 2, 1, "", "__init__"], [17, 3, 1, "", "id"], [17, 3, 1, "", "ns"], [17, 3, 1, "", "ord_ns"]], "vowpalwabbit.pyvw.PredictionType": [[17, 3, 1, "", "ACTION_PDF_VALUE"], [17, 3, 1, "", "ACTION_PROBS"], [17, 3, 1, "", "ACTION_SCORES"], [17, 3, 1, "", "ACTIVE_MULTICLASS"], [17, 3, 1, "", "DECISION_SCORES"], [17, 3, 1, "", "MULTICLASS"], [17, 3, 1, "", "MULTICLASSPROBS"], [17, 3, 1, "", "MULTILABELS"], [17, 3, 1, "", "NOPRED"], [17, 3, 1, "", "PDF"], [17, 3, 1, "", "PROB"], [17, 3, 1, "", "SCALAR"], [17, 3, 1, "", "SCALARS"]], "vowpalwabbit.pyvw.SearchTask": [[17, 2, 1, "", "__init__"], [17, 2, 1, "", "example"], [17, 2, 1, "", "learn"], [17, 2, 1, "", "predict"]], "vowpalwabbit.pyvw.SimpleLabel": [[17, 2, 1, "", "__init__"], [17, 2, 1, "", "from_example"]], "vowpalwabbit.pyvw.SlatesLabel": [[17, 2, 1, "", "__init__"], [17, 2, 1, "", "from_example"]], "vowpalwabbit.pyvw.SlatesLabelType": [[17, 3, 1, "", "ACTION"], [17, 3, 1, "", "SHARED"], [17, 3, 1, "", "SLOT"], [17, 3, 1, "", "UNSET"]], "vowpalwabbit.pyvw.VWOption": [[17, 2, 1, "", "__init__"], [17, 4, 1, "", "allow_override"], [17, 4, 1, "", "default_value"], [17, 4, 1, "", "default_value_supplied"], [17, 4, 1, "", "experimental"], [17, 4, 1, "", "help_str"], [17, 2, 1, "", "is_flag"], [17, 4, 1, "", "keep"], [17, 4, 1, "", "name"], [17, 4, 1, "", "necessary"], [17, 4, 1, "", "short_name"], [17, 4, 1, "", "value"], [17, 4, 1, "", "value_supplied"]], "vowpalwabbit.pyvw.Workspace": [[17, 2, 1, "", "__init__"], [17, 2, 1, "", "example"], [17, 2, 1, "", "finish"], [17, 2, 1, "", "finish_example"], [17, 3, 1, "", "finished"], [17, 2, 1, "", "get_config"], [17, 2, 1, "", "get_label_type"], [17, 2, 1, "", "get_log"], [17, 2, 1, "", "get_prediction_type"], [17, 2, 1, "", "get_weight"], [17, 2, 1, "", "get_weight_from_name"], [17, 3, 1, "", "init"], [17, 2, 1, "", "init_search_task"], [17, 2, 1, "", "learn"], [17, 2, 1, "", "num_weights"], [17, 2, 1, "", "parse"], [17, 3, 1, "", "parser_ran"], [17, 2, 1, "", "predict"], [17, 2, 1, "", "save"]], "vowpalwabbit.pyvw.pylibvw": [[18, 1, 1, "", "example"], [18, 1, 1, "", "vw"]], "vowpalwabbit.pyvw.pylibvw.example": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "ensure_namespace_exists"], [18, 2, 1, "", "erase_namespace"], [18, 2, 1, "", "feature"], [18, 2, 1, "", "feature_weight"], [18, 2, 1, "", "get_action_pdf_value"], [18, 2, 1, "", "get_action_scores"], [18, 2, 1, "", "get_active_multiclass"], [18, 2, 1, "", "get_cb_continuous_class"], [18, 2, 1, "", "get_cb_continuous_cost"], [18, 2, 1, "", "get_cb_continuous_num_costs"], [18, 2, 1, "", "get_cb_continuous_pdf_value"], [18, 2, 1, "", "get_cb_eval_action"], [18, 2, 1, "", "get_cb_eval_class"], [18, 2, 1, "", "get_cb_eval_cost"], [18, 2, 1, "", "get_cb_eval_num_costs"], [18, 2, 1, "", "get_cb_eval_partial_prediction"], [18, 2, 1, "", "get_cb_eval_probability"], [18, 2, 1, "", "get_cb_eval_weight"], [18, 2, 1, "", "get_cbandits_class"], [18, 2, 1, "", "get_cbandits_cost"], [18, 2, 1, "", "get_cbandits_num_costs"], [18, 2, 1, "", "get_cbandits_partial_prediction"], [18, 2, 1, "", "get_cbandits_prediction"], [18, 2, 1, "", "get_cbandits_probability"], [18, 2, 1, "", "get_cbandits_weight"], [18, 2, 1, "", "get_ccb_action"], [18, 2, 1, "", "get_ccb_cost"], [18, 2, 1, "", "get_ccb_explicitly_included_actions"], [18, 2, 1, "", "get_ccb_has_outcome"], [18, 2, 1, "", "get_ccb_num_explicitly_included_actions"], [18, 2, 1, "", "get_ccb_num_probabilities"], [18, 2, 1, "", "get_ccb_probability"], [18, 2, 1, "", "get_ccb_type"], [18, 2, 1, "", "get_ccb_weight"], [18, 2, 1, "", "get_costsensitive_class"], [18, 2, 1, "", "get_costsensitive_cost"], [18, 2, 1, "", "get_costsensitive_num_costs"], [18, 2, 1, "", "get_costsensitive_partial_prediction"], [18, 2, 1, "", "get_costsensitive_prediction"], [18, 2, 1, "", "get_costsensitive_wap_value"], [18, 2, 1, "", "get_decision_scores"], [18, 2, 1, "", "get_example_counter"], [18, 2, 1, "", "get_feature_number"], [18, 2, 1, "", "get_ft_offset"], [18, 2, 1, "", "get_loss"], [18, 2, 1, "", "get_multiclass_label"], [18, 2, 1, "", "get_multiclass_prediction"], [18, 2, 1, "", "get_multiclass_weight"], [18, 2, 1, "", "get_multilabel_labels"], [18, 2, 1, "", "get_multilabel_predictions"], [18, 2, 1, "", "get_partial_prediction"], [18, 2, 1, "", "get_pdf"], [18, 2, 1, "", "get_prob"], [18, 2, 1, "", "get_scalars"], [18, 2, 1, "", "get_simplelabel_initial"], [18, 2, 1, "", "get_simplelabel_label"], [18, 2, 1, "", "get_simplelabel_prediction"], [18, 2, 1, "", "get_simplelabel_weight"], [18, 2, 1, "", "get_slates_action"], [18, 2, 1, "", "get_slates_cost"], [18, 2, 1, "", "get_slates_labeled"], [18, 2, 1, "", "get_slates_num_probabilities"], [18, 2, 1, "", "get_slates_probability"], [18, 2, 1, "", "get_slates_slot_id"], [18, 2, 1, "", "get_slates_type"], [18, 2, 1, "", "get_slates_weight"], [18, 2, 1, "", "get_tag"], [18, 2, 1, "", "get_topic_prediction"], [18, 2, 1, "", "get_total_sum_feat_sq"], [18, 2, 1, "", "get_updated_prediction"], [18, 2, 1, "", "namespace"], [18, 2, 1, "", "num_features_in"], [18, 2, 1, "", "num_namespaces"], [18, 2, 1, "", "pop_feature"], [18, 2, 1, "", "pop_namespace"], [18, 2, 1, "", "push_feature_dict"], [18, 2, 1, "", "push_feature_list"], [18, 2, 1, "", "push_hashed_feature"], [18, 2, 1, "", "push_namespace"], [18, 2, 1, "", "set_label_string"], [18, 2, 1, "", "set_test_only"], [18, 2, 1, "", "sum_feat_sq"]], "vowpalwabbit.pyvw.pylibvw.vw": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "audit_example"], [18, 2, 1, "", "finish"], [18, 2, 1, "", "get_arguments"], [18, 2, 1, "", "get_enabled_learners"], [18, 2, 1, "", "get_enabled_reductions"], [18, 2, 1, "", "get_holdout_sum_loss"], [18, 2, 1, "", "get_id"], [18, 2, 1, "", "get_learner_metrics"], [18, 2, 1, "", "get_options"], [18, 2, 1, "", "get_search_ptr"], [18, 2, 1, "", "get_stride"], [18, 2, 1, "", "get_sum_loss"], [18, 2, 1, "", "get_weight"], [18, 2, 1, "", "get_weighted_examples"], [18, 2, 1, "", "hash_feature"], [18, 2, 1, "", "hash_space"], [18, 2, 1, "", "json_weights"], [18, 3, 1, "", "lBinary"], [18, 3, 1, "", "lConditionalContextualBandit"], [18, 3, 1, "", "lContextualBandit"], [18, 3, 1, "", "lContextualBanditEval"], [18, 3, 1, "", "lContinuous"], [18, 3, 1, "", "lCostSensitive"], [18, 3, 1, "", "lDefault"], [18, 3, 1, "", "lMax"], [18, 3, 1, "", "lMulticlass"], [18, 3, 1, "", "lMultilabel"], [18, 3, 1, "", "lSimple"], [18, 3, 1, "", "lSlates"], [18, 2, 1, "", "learn"], [18, 2, 1, "", "learn_multi"], [18, 2, 1, "", "num_weights"], [18, 3, 1, "", "pACTION_PDF_VALUE"], [18, 3, 1, "", "pACTION_PROBS"], [18, 3, 1, "", "pACTION_SCORES"], [18, 3, 1, "", "pACTIVE_MULTICLASS"], [18, 3, 1, "", "pDECISION_SCORES"], [18, 3, 1, "", "pMULTICLASS"], [18, 3, 1, "", "pMULTICLASSPROBS"], [18, 3, 1, "", "pMULTILABELS"], [18, 3, 1, "", "pNOPRED"], [18, 3, 1, "", "pPDF"], [18, 3, 1, "", "pPROB"], [18, 3, 1, "", "pSCALAR"], [18, 3, 1, "", "pSCALARS"], [18, 2, 1, "", "predict"], [18, 2, 1, "", "predict_multi"], [18, 2, 1, "", "run_parser"], [18, 2, 1, "", "save"], [18, 2, 1, "", "set_weight"], [18, 2, 1, "", "setup_example"], [18, 3, 1, "", "tACTION"], [18, 3, 1, "", "tSHARED"], [18, 3, 1, "", "tSLOT"], [18, 3, 1, "", "tUNSET"], [18, 2, 1, "", "unsetup_example"]], "vowpalwabbit.sklearn": [[19, 1, 1, "", "LinearClassifierMixin"], [19, 1, 1, "", "VW"], [19, 1, 1, "", "VWClassifier"], [19, 1, 1, "", "VWMultiClassifier"], [19, 1, 1, "", "VWRegressor"], [19, 5, 1, "", "tovw"]], "vowpalwabbit.sklearn.LinearClassifierMixin": [[19, 2, 1, "", "__init__"]], "vowpalwabbit.sklearn.VW": [[19, 2, 1, "", "__init__"], [19, 3, 1, "", "convert_labels"], [19, 3, 1, "", "convert_to_vw"], [19, 2, 1, "", "fit"], [19, 2, 1, "", "get_coefs"], [19, 2, 1, "", "get_intercept"], [19, 2, 1, "", "get_params"], [19, 2, 1, "", "get_vw"], [19, 2, 1, "", "load"], [19, 2, 1, "", "predict"], [19, 2, 1, "", "save"], [19, 2, 1, "", "set_coefs"], [19, 2, 1, "", "set_params"], [19, 3, 1, "", "vw_"]], "vowpalwabbit.sklearn.VWClassifier": [[19, 2, 1, "", "__init__"], [19, 3, 1, "", "classes_"], [19, 3, 1, "", "coef_"], [19, 2, 1, "", "decision_function"], [19, 2, 1, "", "fit"], [19, 2, 1, "", "predict"], [19, 2, 1, "", "predict_proba"]], "vowpalwabbit.sklearn.VWMultiClassifier": [[19, 2, 1, "", "__init__"], [19, 3, 1, "", "classes_"], [19, 2, 1, "", "decision_function"], [19, 3, 1, "", "estimator_"], [19, 2, 1, "", "fit"], [19, 2, 1, "", "predict_proba"]], "vowpalwabbit.sklearn.VWRegressor": [[19, 2, 1, "", "__init__"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:property", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "titleterms": {"python": [0, 14, 26, 30], "basic": [0, 2, 22, 30], "contextu": [1, 26, 27, 28, 31], "bandit": [1, 26, 27, 28, 31], "experiment": 2, "test": [2, 21, 22], "model": [2, 10, 20, 21, 22, 23, 26], "vari": 2, "epsilon": 2, "valu": 2, "count": 2, "non": 2, "stationari": 2, "decai": [2, 23], "exampl": [3, 14, 15, 19, 31], "mini": 4, "vw": [4, 20, 25, 27], "poisson": 5, "regress": [5, 23], "predict": [6, 14, 20, 23], "comparison": [6, 31], "search": [7, 8, 9, 10], "covington": [7, 10], "sequenc": [8, 9], "ldf": [9, 10], "speech": 10, "tagger": 10, "remov": 10, "auto": 10, "featur": [10, 20, 26], "veri": 10, "silli": 10, "esqu": 10, "depend": 10, "pars": 10, "base": 10, "style": 10, "parser": 10, "A": 10, "simpl": 10, "word": 10, "align": 10, "vowpal": [11, 20, 22, 23, 26, 29, 30, 31], "wabbit": [11, 20, 22, 23, 26, 29, 30, 31], "api": 13, "refer": 13, "core": 13, "modul": [13, 15, 16, 19], "option": 13, "implement": 13, "intern": 13, "migrat": [13, 14], "guid": 13, "8": 14, "11": 14, "9": 14, "import": [14, 20], "pyvw": [14, 17, 18], "except": 14, "dftovw": [14, 16], "sklearn_vw": 14, "class": [14, 20], "name": 14, "get_predict": 14, "label": 14, "type": [14, 20], "get": [14, 27, 28, 30], "from": [14, 20], "an": [14, 25], "examplenamespac": 14, "push_featur": 14, "vowpalwabbit": [15, 16, 17, 18, 19, 20], "usag": [15, 19, 26], "content": [15, 16, 19, 27], "deprec": [16, 19], "alia": [16, 19], "pylibvw": 18, "sklearn": 19, "todo": 19, "panda": 20, "datafram": 20, "format": [20, 25, 26, 27, 29, 31], "convers": 20, "credit": [20, 25], "tutori": [20, 24, 26], "outlin": 20, "requir": 20, "packag": 20, "function": [20, 23, 28, 31], "definit": 20, "constant": 20, "1": [20, 27, 28], "data": [20, 23, 25, 26], "2": [20, 27, 28], "3": [20, 27, 28], "highli": 20, "correl": 20, "train": [20, 21, 22, 25, 30], "first": 20, "convert": 20, "input": [20, 26, 29], "defin": 20, "visual": 20, "": 20, "output": [20, 23], "retriev": 20, "paramet": [20, 21, 28], "loss": 20, "summari": [20, 27, 31], "metric": 20, "log": 20, "averag": 20, "distribut": 20, "select": 20, "4": 20, "learnt": 20, "weight": 20, "more": [20, 22, 23, 25, 26, 30], "complex": 20, "us": [20, 25], "transform": 20, "target": 20, "namespac": 20, "interact": [20, 27], "appli": 20, "logarithm": 20, "5": 20, "compar": 20, "perform": 20, "command": [21, 22, 23, 25], "line": [21, 22, 23, 25], "csv": 21, "dataset": [21, 22, 23, 30], "prerequisit": [21, 22, 23, 30], "scenario": [21, 22, 25, 27, 28, 30, 31], "With": [21, 27, 28], "full": 21, "fewer": 21, "result": [22, 30], "explor": [22, 23, 25, 26, 30], "linear": 23, "creat": [23, 26], "hash": 23, "techniqu": 23, "bit": 23, "learn": [23, 27, 28], "rate": 23, "initi": 23, "time": 23, "power": 23, "cach": 23, "file": 23, "sourc": 23, "number": 23, "diagnost": 23, "header": 23, "save": 23, "your": 23, "audit": 23, "offlin": 25, "polici": [25, 26], "evalu": 25, "introduct": 25, "motiv": 25, "batch": 25, "pre": 25, "cb": [25, 26], "cb_adf": 25, "onlin": 25, "increment": 25, "legaci": 25, "overview": 26, "The": [26, 31], "problem": [26, 31], "work": 26, "v": 26, "specifi": 26, "approach": 26, "algorithm": 26, "cb_explor": 26, "cb_explore_adf": 26, "share": 26, "person": 27, "simul": [27, 28, 31], "reward": [27, 28, 31], "understand": 27, "decis": [27, 28], "set": [27, 28, 31], "up": [27, 28], "asid": 27, "without": [27, 28], "tom": 27, "anna": 27, "continu": 28, "action": 28, "sweep": 28, "live": 28, "room": 28, "bedroom": 28, "better": 28, "cost": 28, "classif": 29, "start": 30, "slate": 31, "combinatori": 31, "outfit": 31, "optim": 31, "part": 31, "One": 31, "setup": 31}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx": 57}, "alltitles": {"Python Basics": [[0, "python-basics"], [30, "python-basics"]], "Contextual Bandits": [[1, "contextual-bandits"], [26, "contextual-bandits"]], "[Experimental] Testing Basic Models with Varying Epsilon Values and Model Counts for Non-Stationary Epsilon Decay": [[2, "experimental-testing-basic-models-with-varying-epsilon-values-and-model-counts-for-non-stationary-epsilon-decay"]], "Examples": [[3, "examples"]], "Mini VW": [[4, "mini-vw"]], "Poisson Regression": [[5, "poisson-regression"]], "Predict comparison": [[6, "predict-comparison"]], "Search - Covington": [[7, "search-covington"]], "Search - Sequence": [[8, "search-sequence"]], "Search - Sequence LDF": [[9, "search-sequence-ldf"]], "Search - Speech Tagger": [[10, "search-speech-tagger"]], "Removing the AUTO features": [[10, "removing-the-auto-features"]], "Very silly Covington-esqu dependency parsing": [[10, "very-silly-covington-esqu-dependency-parsing"]], "LDF-based Covington-style dependency parser": [[10, "ldf-based-covington-style-dependency-parser"]], "A simple word-alignment model": [[10, "a-simple-word-alignment-model"]], "Vowpal Wabbit": [[11, "vowpal-wabbit"]], "API Reference": [[13, "api-reference"]], "Core module": [[13, "core-module"]], "Optional modules": [[13, "optional-modules"]], "Implementation/internal modules": [[13, "implementation-internal-modules"]], "Migration guides": [[13, "migration-guides"]], "Python 8.11 to 9 migration": [[14, "python-8-11-to-9-migration"]], "Imports": [[14, "imports"]], "pyvw": [[14, "pyvw"]], "Exception": [[14, null]], "DFtoVW": [[14, "dftovw"]], "sklearn_vw": [[14, "sklearn-vw"]], "Class names": [[14, "class-names"]], "get_prediction": [[14, "get-prediction"]], "Label types and prediction types": [[14, "label-types-and-prediction-types"]], "Getting a label from an Example": [[14, "getting-a-label-from-an-example"]], "ExampleNamespace.push_features": [[14, "examplenamespace-push-features"]], "vowpalwabbit": [[15, "vowpalwabbit"]], "Example usage": [[15, "example-usage"], [19, "example-usage"]], "Module contents": [[15, "module-vowpalwabbit"], [16, "module-vowpalwabbit.dftovw"], [19, "module-vowpalwabbit.sklearn"]], "vowpalwabbit.dftovw": [[16, "vowpalwabbit-dftovw"]], "Deprecated alias": [[16, "deprecated-alias"], [19, "deprecated-alias"]], "vowpalwabbit.pyvw": [[17, "vowpalwabbit-pyvw"]], "vowpalwabbit.pyvw.pylibvw": [[18, "vowpalwabbit-pyvw-pylibvw"]], "vowpalwabbit.sklearn": [[19, "vowpalwabbit-sklearn"]], "Todo": [[19, "id1"]], "Pandas DataFrame to VowpalWabbit Format Conversion": [[20, "pandas-dataframe-to-vowpalwabbit-format-conversion"]], "Credit": [[20, null], [25, null]], "Tutorial outline": [[20, "tutorial-outline"]], "Requirements": [[20, "requirements"]], "Importing packages": [[20, "importing-packages"]], "Function and class definition": [[20, "function-and-class-definition"]], "Constants": [[20, "constants"]], "1. Data": [[20, "data"]], "1.1. Import": [[20, "import"]], "1.2. Types": [[20, "types"]], "1.3. Highly correlated features": [[20, "highly-correlated-features"]], "2. Train a first model": [[20, "train-a-first-model"]], "2.1. Converting DataFrame to Vowpal Wabbit input format.": [[20, "converting-dataframe-to-vowpal-wabbit-input-format"]], "2.2. Define and train model": [[20, "define-and-train-model"]], "3. Visualizing model\u2019s outputs": [[20, "visualizing-model-s-outputs"]], "3.1. Retrieving model\u2019s parameters, losses/predictions and summary metrics from the log": [[20, "retrieving-model-s-parameters-losses-predictions-and-summary-metrics-from-the-log"]], "3.2. Visualizing the average loss and the distribution of selected metrics": [[20, "visualizing-the-average-loss-and-the-distribution-of-selected-metrics"]], "3.3. Visualizing the predictions of the model": [[20, "visualizing-the-predictions-of-the-model"]], "3.4. Visualizing learnt weights": [[20, "visualizing-learnt-weights"]], "4. Train a more complex model: using log transformed target and namespace interactions": [[20, "train-a-more-complex-model-using-log-transformed-target-and-namespace-interactions"]], "4.1. Applying logarithm transformation to the target": [[20, "applying-logarithm-transformation-to-the-target"]], "4.2. Defining namespaces": [[20, "defining-namespaces"]], "4.3. Converting to VW format and training model": [[20, "converting-to-vw-format-and-training-model"]], "4.4. Visualizing model\u2019s outputs": [[20, "id1"]], "4.5. Comparing models\u2019 performance": [[20, "comparing-models-performance"]], "Command Line for CSV Dataset": [[21, "command-line-for-csv-dataset"]], "Prerequisites": [[21, null], [22, null], [23, null], [30, null]], "Training scenario and dataset": [[21, "training-scenario-and-dataset"], [22, "training-scenario-and-dataset"], [30, "training-scenario-and-dataset"]], "Train a model": [[21, "train-a-model"], [22, "train-a-model"]], "With full parameters": [[21, "with-full-parameters"]], "Fewer parameters": [[21, "fewer-parameters"]], "Test a model": [[21, "test-a-model"], [22, "test-a-model"]], "Command Line Basics": [[22, "command-line-basics"]], "Vowpal Wabbit results": [[22, "vowpal-wabbit-results"], [30, "vowpal-wabbit-results"]], "More to explore": [[22, "more-to-explore"], [23, "more-to-explore"], [25, "more-to-explore"], [26, "more-to-explore"], [30, "more-to-explore"]], "Command Line Linear Regression": [[23, "command-line-linear-regression"]], "Create a dataset": [[23, "create-a-dataset"]], "Vowpal Wabbit hashing techniques": [[23, "vowpal-wabbit-hashing-techniques"]], "Vowpal Wabbit output": [[23, "vowpal-wabbit-output"]], "Hash function bits": [[23, "hash-function-bits"]], "Learning rate": [[23, "learning-rate"]], "Initial time": [[23, "initial-time"]], "Power on learning rate decay": [[23, "power-on-learning-rate-decay"]], "Cache files": [[23, "cache-files"]], "Data sources": [[23, "data-sources"]], "Number of data sources": [[23, "number-of-data-sources"]], "Vowpal Wabbit diagnostic header": [[23, "vowpal-wabbit-diagnostic-header"]], "Saving your model into a file": [[23, "saving-your-model-into-a-file"]], "Vowpal Wabbit predictions": [[23, "vowpal-wabbit-predictions"]], "Auditing": [[23, "auditing"]], "Tutorials": [[24, "tutorials"]], "Offline Policy Evaluation Using the Command Line": [[25, "offline-policy-evaluation-using-the-command-line"]], "Introduction & Motivation": [[25, "introduction-motivation"]], "Batch scenario: policy evaluation with a pre-trained VW policy, cb-format data": [[25, "batch-scenario-policy-evaluation-with-a-pre-trained-vw-policy-cb-format-data"]], "Batch scenario: policy evaluation with a pre-trained VW policy, cb_adf-format data": [[25, "batch-scenario-policy-evaluation-with-a-pre-trained-vw-policy-cb-adf-format-data"]], "Online scenario: policy evaluation with an incrementally trained VW policy, cb-format data": [[25, "online-scenario-policy-evaluation-with-an-incrementally-trained-vw-policy-cb-format-data"]], "Online scenario: policy evaluation with an incrementally trained VW policy, cb_adf-format data": [[25, "online-scenario-policy-evaluation-with-an-incrementally-trained-vw-policy-cb-adf-format-data"]], "Legacy: policy evaluation with cb-format data, using a pre-trained policy": [[25, "legacy-policy-evaluation-with-cb-format-data-using-a-pre-trained-policy"]], "Overview": [[26, "overview"]], "The contextual bandit problem": [[26, "the-contextual-bandit-problem"]], "Working with contextual bandits in Vowpal Wabbit": [[26, "working-with-contextual-bandits-in-vowpal-wabbit"]], "Policy vs. model": [[26, "policy-vs-model"]], "Specifying the contextual bandit approach": [[26, "specifying-the-contextual-bandit-approach"]], "Specifying exploration algorithms": [[26, "specifying-exploration-algorithms"]], "Contextual bandit algorithms and input formats": [[26, "contextual-bandit-algorithms-and-input-formats"]], "Input format for --cb": [[26, "input-format-for-cb"]], "Input format for --cb_explore": [[26, "input-format-for-cb-explore"]], "Usage": [[26, "usage"], [26, "id1"]], "Input format for --cb_explore_adf": [[26, "input-format-for-cb-explore-adf"]], "Shared contextual features": [[26, "shared-contextual-features"]], "Create contextual bandit data": [[26, "create-contextual-bandit-data"]], "Contextual bandits Python tutorial": [[26, "contextual-bandits-python-tutorial"]], "Contextual Bandit Content Personalization": [[27, "contextual-bandit-content-personalization"]], "Simulate reward": [[27, "simulate-reward"], [28, "simulate-reward"]], "Understanding VW format": [[27, "understanding-vw-format"]], "Getting a decision": [[27, "getting-a-decision"], [28, "getting-a-decision"]], "Simulation set up": [[27, "simulation-set-up"], [28, "simulation-set-up"]], "Scenario 1": [[27, "scenario-1"], [28, "scenario-1"]], "With learning": [[27, "with-learning"], [27, "id1"], [27, "id5"]], "Aside: interactions": [[27, "aside-interactions"]], "Without learning": [[27, "without-learning"], [27, "id2"]], "Scenario 2": [[27, "scenario-2"], [28, "scenario-2"]], "Tom": [[27, "tom"], [27, "id3"]], "Anna": [[27, "anna"], [27, "id4"]], "Scenario 3": [[27, "scenario-3"], [28, "scenario-3"]], "Without Learning": [[27, "id6"], [28, "without-learning"], [28, "id2"], [28, "id4"]], "Summary": [[27, "summary"], [31, "summary"]], "Contextual Bandits with Continuous Actions": [[28, "contextual-bandits-with-continuous-actions"]], "With Learning": [[28, "with-learning"], [28, "id1"], [28, "id3"]], "Parameter sweep": [[28, "parameter-sweep"]], "Living Room": [[28, "living-room"]], "Bedroom": [[28, "bedroom"]], "Better cost function": [[28, "better-cost-function"]], "Classification": [[29, "classification"]], "Vowpal Wabbit input format": [[29, "vowpal-wabbit-input-format"]], "Getting started": [[30, "getting-started"]], "Slates": [[31, "slates"], [31, "id1"]], "Combinatorial bandits": [[31, "combinatorial-bandits"]], "The Slates problem setting": [[31, "the-slates-problem-setting"]], "Vowpal Wabbit Slates example format": [[31, "vowpal-wabbit-slates-example-format"]], "Scenario: Outfit optimization": [[31, "scenario-outfit-optimization"]], "Part One - setup": [[31, "part-one-setup"]], "Reward function": [[31, "reward-function"]], "Slates simulation": [[31, "slates-simulation"]], "Contextual Bandit": [[31, "contextual-bandit"]], "Comparison": [[31, "comparison"]]}, "indexentries": {"action (vowpalwabbit.ccblabeltype attribute)": [[15, "vowpalwabbit.CCBLabelType.ACTION"]], "action (vowpalwabbit.slateslabeltype attribute)": [[15, "vowpalwabbit.SlatesLabelType.ACTION"]], "action_pdf_value (vowpalwabbit.predictiontype attribute)": [[15, "vowpalwabbit.PredictionType.ACTION_PDF_VALUE"]], "action_probs (vowpalwabbit.predictiontype attribute)": [[15, "vowpalwabbit.PredictionType.ACTION_PROBS"]], "action_scores (vowpalwabbit.predictiontype attribute)": [[15, "vowpalwabbit.PredictionType.ACTION_SCORES"]], "active_multiclass (vowpalwabbit.predictiontype attribute)": [[15, "vowpalwabbit.PredictionType.ACTIVE_MULTICLASS"]], "abstractlabel (class in vowpalwabbit)": [[15, "vowpalwabbit.AbstractLabel"]], "actionscore (class in vowpalwabbit)": [[15, "vowpalwabbit.ActionScore"]], "cbcontinuouslabel (class in vowpalwabbit)": [[15, "vowpalwabbit.CBContinuousLabel"]], "cbcontinuouslabelelement (class in vowpalwabbit)": [[15, "vowpalwabbit.CBContinuousLabelElement"]], "cbevallabel (class in vowpalwabbit)": [[15, "vowpalwabbit.CBEvalLabel"]], "cblabel (class in vowpalwabbit)": [[15, "vowpalwabbit.CBLabel"]], "cblabelelement (class in vowpalwabbit)": [[15, "vowpalwabbit.CBLabelElement"]], "ccblabel (class in vowpalwabbit)": [[15, "vowpalwabbit.CCBLabel"]], "ccblabeltype (class in vowpalwabbit)": [[15, "vowpalwabbit.CCBLabelType"]], "ccbslotoutcome (class in vowpalwabbit)": [[15, "vowpalwabbit.CCBSlotOutcome"]], "conditional_contextual_bandit (vowpalwabbit.labeltype attribute)": [[15, "vowpalwabbit.LabelType.CONDITIONAL_CONTEXTUAL_BANDIT"]], "contextual_bandit (vowpalwabbit.labeltype attribute)": [[15, "vowpalwabbit.LabelType.CONTEXTUAL_BANDIT"]], "contextual_bandit_eval (vowpalwabbit.labeltype attribute)": [[15, "vowpalwabbit.LabelType.CONTEXTUAL_BANDIT_EVAL"]], "continuous (vowpalwabbit.labeltype attribute)": [[15, "vowpalwabbit.LabelType.CONTINUOUS"]], "cost_sensitive (vowpalwabbit.labeltype attribute)": [[15, "vowpalwabbit.LabelType.COST_SENSITIVE"]], "costsensitiveelement (class in vowpalwabbit)": [[15, "vowpalwabbit.CostSensitiveElement"]], "costsensitivelabel (class in vowpalwabbit)": [[15, "vowpalwabbit.CostSensitiveLabel"]], "decision_scores (vowpalwabbit.predictiontype attribute)": [[15, "vowpalwabbit.PredictionType.DECISION_SCORES"]], "example (class in vowpalwabbit)": [[15, "vowpalwabbit.Example"]], "examplenamespace (class in vowpalwabbit)": [[15, "vowpalwabbit.ExampleNamespace"]], "labeltype (class in vowpalwabbit)": [[15, "vowpalwabbit.LabelType"]], "multiclass (vowpalwabbit.labeltype attribute)": [[15, "vowpalwabbit.LabelType.MULTICLASS"]], "multiclass (vowpalwabbit.predictiontype attribute)": [[15, "vowpalwabbit.PredictionType.MULTICLASS"]], "multiclassprobs (vowpalwabbit.predictiontype attribute)": [[15, "vowpalwabbit.PredictionType.MULTICLASSPROBS"]], "multilabel (vowpalwabbit.labeltype attribute)": [[15, "vowpalwabbit.LabelType.MULTILABEL"]], "multilabels (vowpalwabbit.predictiontype attribute)": [[15, "vowpalwabbit.PredictionType.MULTILABELS"]], "multiclasslabel (class in vowpalwabbit)": [[15, "vowpalwabbit.MulticlassLabel"]], "multiclassprobabilitieslabel (class in vowpalwabbit)": [[15, "vowpalwabbit.MulticlassProbabilitiesLabel"]], "multilabellabel (class in vowpalwabbit)": [[15, "vowpalwabbit.MultilabelLabel"]], "nopred (vowpalwabbit.predictiontype attribute)": [[15, "vowpalwabbit.PredictionType.NOPRED"]], "namespaceid (class in vowpalwabbit)": [[15, "vowpalwabbit.NamespaceId"]], "pdf (vowpalwabbit.predictiontype attribute)": [[15, "vowpalwabbit.PredictionType.PDF"]], "prob (vowpalwabbit.predictiontype attribute)": [[15, "vowpalwabbit.PredictionType.PROB"]], "predictiontype (class in vowpalwabbit)": [[15, "vowpalwabbit.PredictionType"]], "scalar (vowpalwabbit.predictiontype attribute)": [[15, "vowpalwabbit.PredictionType.SCALAR"]], "scalars (vowpalwabbit.predictiontype attribute)": [[15, "vowpalwabbit.PredictionType.SCALARS"]], "shared (vowpalwabbit.ccblabeltype attribute)": [[15, "vowpalwabbit.CCBLabelType.SHARED"]], "shared (vowpalwabbit.slateslabeltype attribute)": [[15, "vowpalwabbit.SlatesLabelType.SHARED"]], "simple (vowpalwabbit.labeltype attribute)": [[15, "vowpalwabbit.LabelType.SIMPLE"]], "slates (vowpalwabbit.labeltype attribute)": [[15, "vowpalwabbit.LabelType.SLATES"]], "slot (vowpalwabbit.ccblabeltype attribute)": [[15, "vowpalwabbit.CCBLabelType.SLOT"]], "slot (vowpalwabbit.slateslabeltype attribute)": [[15, "vowpalwabbit.SlatesLabelType.SLOT"]], "simplelabel (class in vowpalwabbit)": [[15, "vowpalwabbit.SimpleLabel"]], "slateslabel (class in vowpalwabbit)": [[15, "vowpalwabbit.SlatesLabel"]], "slateslabeltype (class in vowpalwabbit)": [[15, "vowpalwabbit.SlatesLabelType"]], "unset (vowpalwabbit.ccblabeltype attribute)": [[15, "vowpalwabbit.CCBLabelType.UNSET"]], "unset (vowpalwabbit.slateslabeltype attribute)": [[15, "vowpalwabbit.SlatesLabelType.UNSET"]], "workspace (class in vowpalwabbit)": [[15, "vowpalwabbit.Workspace"]], "__init__() (vowpalwabbit.abstractlabel method)": [[15, "vowpalwabbit.AbstractLabel.__init__"]], "__init__() (vowpalwabbit.actionscore method)": [[15, "vowpalwabbit.ActionScore.__init__"]], "__init__() (vowpalwabbit.cbcontinuouslabel method)": [[15, "vowpalwabbit.CBContinuousLabel.__init__"]], "__init__() (vowpalwabbit.cbcontinuouslabelelement method)": [[15, "vowpalwabbit.CBContinuousLabelElement.__init__"]], "__init__() (vowpalwabbit.cbevallabel method)": [[15, "vowpalwabbit.CBEvalLabel.__init__"]], "__init__() (vowpalwabbit.cblabel method)": [[15, "vowpalwabbit.CBLabel.__init__"]], "__init__() (vowpalwabbit.cblabelelement method)": [[15, "vowpalwabbit.CBLabelElement.__init__"]], "__init__() (vowpalwabbit.ccblabel method)": [[15, "vowpalwabbit.CCBLabel.__init__"]], "__init__() (vowpalwabbit.ccbslotoutcome method)": [[15, "vowpalwabbit.CCBSlotOutcome.__init__"]], "__init__() (vowpalwabbit.costsensitiveelement method)": [[15, "vowpalwabbit.CostSensitiveElement.__init__"]], "__init__() (vowpalwabbit.costsensitivelabel method)": [[15, "vowpalwabbit.CostSensitiveLabel.__init__"]], "__init__() (vowpalwabbit.example method)": [[15, "vowpalwabbit.Example.__init__"]], "__init__() (vowpalwabbit.examplenamespace method)": [[15, "vowpalwabbit.ExampleNamespace.__init__"]], "__init__() (vowpalwabbit.multiclasslabel method)": [[15, "vowpalwabbit.MulticlassLabel.__init__"]], "__init__() (vowpalwabbit.multiclassprobabilitieslabel method)": [[15, "vowpalwabbit.MulticlassProbabilitiesLabel.__init__"]], "__init__() (vowpalwabbit.multilabellabel method)": [[15, "vowpalwabbit.MultilabelLabel.__init__"]], "__init__() (vowpalwabbit.namespaceid method)": [[15, "vowpalwabbit.NamespaceId.__init__"]], "__init__() (vowpalwabbit.simplelabel method)": [[15, "vowpalwabbit.SimpleLabel.__init__"]], "__init__() (vowpalwabbit.slateslabel method)": [[15, "vowpalwabbit.SlatesLabel.__init__"]], "__init__() (vowpalwabbit.workspace method)": [[15, "vowpalwabbit.Workspace.__init__"]], "ensure_namespace_exists() (vowpalwabbit.example method)": [[15, "vowpalwabbit.Example.ensure_namespace_exists"]], "example() (vowpalwabbit.workspace method)": [[15, "vowpalwabbit.Workspace.example"]], "feature() (vowpalwabbit.example method)": [[15, "vowpalwabbit.Example.feature"]], "feature_weight() (vowpalwabbit.example method)": [[15, "vowpalwabbit.Example.feature_weight"]], "finish() (vowpalwabbit.workspace method)": [[15, "vowpalwabbit.Workspace.finish"]], "finish_example() (vowpalwabbit.workspace method)": [[15, "vowpalwabbit.Workspace.finish_example"]], "finished (vowpalwabbit.example attribute)": [[15, "vowpalwabbit.Example.finished"]], "finished (vowpalwabbit.workspace attribute)": [[15, "vowpalwabbit.Workspace.finished"]], "from_example() (vowpalwabbit.abstractlabel static method)": [[15, "vowpalwabbit.AbstractLabel.from_example"]], "from_example() (vowpalwabbit.cbcontinuouslabel static method)": [[15, "vowpalwabbit.CBContinuousLabel.from_example"]], "from_example() (vowpalwabbit.cbevallabel static method)": [[15, "vowpalwabbit.CBEvalLabel.from_example"]], "from_example() (vowpalwabbit.cblabel static method)": [[15, "vowpalwabbit.CBLabel.from_example"]], "from_example() (vowpalwabbit.ccblabel static method)": [[15, "vowpalwabbit.CCBLabel.from_example"]], "from_example() (vowpalwabbit.costsensitivelabel static method)": [[15, "vowpalwabbit.CostSensitiveLabel.from_example"]], "from_example() (vowpalwabbit.multiclasslabel static method)": [[15, "vowpalwabbit.MulticlassLabel.from_example"]], "from_example() (vowpalwabbit.multiclassprobabilitieslabel static method)": [[15, "vowpalwabbit.MulticlassProbabilitiesLabel.from_example"]], "from_example() (vowpalwabbit.multilabellabel static method)": [[15, "vowpalwabbit.MultilabelLabel.from_example"]], "from_example() (vowpalwabbit.simplelabel static method)": [[15, "vowpalwabbit.SimpleLabel.from_example"]], "from_example() (vowpalwabbit.slateslabel static method)": [[15, "vowpalwabbit.SlatesLabel.from_example"]], "get_config() (vowpalwabbit.workspace method)": [[15, "vowpalwabbit.Workspace.get_config"]], "get_feature_id() (vowpalwabbit.example method)": [[15, "vowpalwabbit.Example.get_feature_id"]], "get_label() (vowpalwabbit.example method)": [[15, "vowpalwabbit.Example.get_label"]], "get_label_type() (vowpalwabbit.workspace method)": [[15, "vowpalwabbit.Workspace.get_label_type"]], "get_log() (vowpalwabbit.workspace method)": [[15, "vowpalwabbit.Workspace.get_log"]], "get_ns() (vowpalwabbit.example method)": [[15, "vowpalwabbit.Example.get_ns"]], "get_prediction() (vowpalwabbit.example method)": [[15, "vowpalwabbit.Example.get_prediction"]], "get_prediction_type() (vowpalwabbit.workspace method)": [[15, "vowpalwabbit.Workspace.get_prediction_type"]], "get_weight() (vowpalwabbit.workspace method)": [[15, "vowpalwabbit.Workspace.get_weight"]], "get_weight_from_name() (vowpalwabbit.workspace method)": [[15, "vowpalwabbit.Workspace.get_weight_from_name"]], "id (vowpalwabbit.namespaceid attribute)": [[15, "vowpalwabbit.NamespaceId.id"]], "init (vowpalwabbit.workspace attribute)": [[15, "vowpalwabbit.Workspace.init"]], "init_search_task() (vowpalwabbit.workspace method)": [[15, "vowpalwabbit.Workspace.init_search_task"]], "iter_features() (vowpalwabbit.example method)": [[15, "vowpalwabbit.Example.iter_features"]], "iter_features() (vowpalwabbit.examplenamespace method)": [[15, "vowpalwabbit.ExampleNamespace.iter_features"]], "labeltype (vowpalwabbit.example attribute)": [[15, "vowpalwabbit.Example.labelType"]], "learn() (vowpalwabbit.example method)": [[15, "vowpalwabbit.Example.learn"]], "learn() (vowpalwabbit.workspace method)": [[15, "vowpalwabbit.Workspace.learn"]], "module": [[15, "module-vowpalwabbit"], [16, "module-vowpalwabbit.dftovw"], [17, "module-vowpalwabbit.pyvw"], [19, "module-vowpalwabbit.sklearn"]], "ns (vowpalwabbit.namespaceid attribute)": [[15, "vowpalwabbit.NamespaceId.ns"]], "num_features_in() (vowpalwabbit.example method)": [[15, "vowpalwabbit.Example.num_features_in"]], "num_features_in() (vowpalwabbit.examplenamespace method)": [[15, "vowpalwabbit.ExampleNamespace.num_features_in"]], "num_weights() (vowpalwabbit.workspace method)": [[15, "vowpalwabbit.Workspace.num_weights"]], "ord_ns (vowpalwabbit.namespaceid attribute)": [[15, "vowpalwabbit.NamespaceId.ord_ns"]], "parse() (vowpalwabbit.workspace method)": [[15, "vowpalwabbit.Workspace.parse"]], "parser_ran (vowpalwabbit.workspace attribute)": [[15, "vowpalwabbit.Workspace.parser_ran"]], "pop_feature() (vowpalwabbit.example method)": [[15, "vowpalwabbit.Example.pop_feature"]], "pop_feature() (vowpalwabbit.examplenamespace method)": [[15, "vowpalwabbit.ExampleNamespace.pop_feature"]], "pop_namespace() (vowpalwabbit.example method)": [[15, "vowpalwabbit.Example.pop_namespace"]], "predict() (vowpalwabbit.workspace method)": [[15, "vowpalwabbit.Workspace.predict"]], "push_feature() (vowpalwabbit.example method)": [[15, "vowpalwabbit.Example.push_feature"]], "push_feature() (vowpalwabbit.examplenamespace method)": [[15, "vowpalwabbit.ExampleNamespace.push_feature"]], "push_features() (vowpalwabbit.example method)": [[15, "vowpalwabbit.Example.push_features"]], "push_features() (vowpalwabbit.examplenamespace method)": [[15, "vowpalwabbit.ExampleNamespace.push_features"]], "push_hashed_feature() (vowpalwabbit.example method)": [[15, "vowpalwabbit.Example.push_hashed_feature"]], "push_namespace() (vowpalwabbit.example method)": [[15, "vowpalwabbit.Example.push_namespace"]], "save() (vowpalwabbit.workspace method)": [[15, "vowpalwabbit.Workspace.save"]], "set_label_string() (vowpalwabbit.example method)": [[15, "vowpalwabbit.Example.set_label_string"]], "setup_done (vowpalwabbit.example attribute)": [[15, "vowpalwabbit.Example.setup_done"]], "setup_example() (vowpalwabbit.example method)": [[15, "vowpalwabbit.Example.setup_example"]], "stride (vowpalwabbit.example attribute)": [[15, "vowpalwabbit.Example.stride"]], "sum_feat_sq() (vowpalwabbit.example method)": [[15, "vowpalwabbit.Example.sum_feat_sq"]], "unsetup_example() (vowpalwabbit.example method)": [[15, "vowpalwabbit.Example.unsetup_example"]], "vowpalwabbit": [[15, "module-vowpalwabbit"]], "vw (vowpalwabbit.example attribute)": [[15, "vowpalwabbit.Example.vw"]], "contextualbanditlabel (class in vowpalwabbit.dftovw)": [[16, "vowpalwabbit.dftovw.ContextualbanditLabel"]], "dftovw (class in vowpalwabbit.dftovw)": [[16, "vowpalwabbit.dftovw.DFtoVW"]], "feature (class in vowpalwabbit.dftovw)": [[16, "vowpalwabbit.dftovw.Feature"]], "multilabel (class in vowpalwabbit.dftovw)": [[16, "vowpalwabbit.dftovw.MultiLabel"]], "multiclasslabel (class in vowpalwabbit.dftovw)": [[16, "vowpalwabbit.dftovw.MulticlassLabel"]], "namespace (class in vowpalwabbit.dftovw)": [[16, "vowpalwabbit.dftovw.Namespace"]], "simplelabel (class in vowpalwabbit.dftovw)": [[16, "vowpalwabbit.dftovw.SimpleLabel"]], "__init__() (vowpalwabbit.dftovw.contextualbanditlabel method)": [[16, "vowpalwabbit.dftovw.ContextualbanditLabel.__init__"]], "__init__() (vowpalwabbit.dftovw.dftovw method)": [[16, "vowpalwabbit.dftovw.DFtoVW.__init__"]], "__init__() (vowpalwabbit.dftovw.feature method)": [[16, "vowpalwabbit.dftovw.Feature.__init__"]], "__init__() (vowpalwabbit.dftovw.multilabel method)": [[16, "vowpalwabbit.dftovw.MultiLabel.__init__"]], "__init__() (vowpalwabbit.dftovw.multiclasslabel method)": [[16, "vowpalwabbit.dftovw.MulticlassLabel.__init__"]], "__init__() (vowpalwabbit.dftovw.namespace method)": [[16, "vowpalwabbit.dftovw.Namespace.__init__"]], "__init__() (vowpalwabbit.dftovw.simplelabel method)": [[16, "vowpalwabbit.dftovw.SimpleLabel.__init__"]], "action (vowpalwabbit.dftovw.contextualbanditlabel attribute)": [[16, "vowpalwabbit.dftovw.ContextualbanditLabel.action"]], "check_attributes_type() (vowpalwabbit.dftovw.namespace method)": [[16, "vowpalwabbit.dftovw.Namespace.check_attributes_type"]], "check_columns_type_and_values() (vowpalwabbit.dftovw.dftovw method)": [[16, "vowpalwabbit.dftovw.DFtoVW.check_columns_type_and_values"]], "check_features_type() (vowpalwabbit.dftovw.dftovw method)": [[16, "vowpalwabbit.dftovw.DFtoVW.check_features_type"]], "check_instance_columns() (vowpalwabbit.dftovw.dftovw method)": [[16, "vowpalwabbit.dftovw.DFtoVW.check_instance_columns"]], "check_label_type() (vowpalwabbit.dftovw.dftovw method)": [[16, "vowpalwabbit.dftovw.DFtoVW.check_label_type"]], "check_missing_columns_df() (vowpalwabbit.dftovw.dftovw method)": [[16, "vowpalwabbit.dftovw.DFtoVW.check_missing_columns_df"]], "check_namespaces_type() (vowpalwabbit.dftovw.dftovw method)": [[16, "vowpalwabbit.dftovw.DFtoVW.check_namespaces_type"]], "convert_df() (vowpalwabbit.dftovw.dftovw method)": [[16, "vowpalwabbit.dftovw.DFtoVW.convert_df"]], "cost (vowpalwabbit.dftovw.contextualbanditlabel attribute)": [[16, "vowpalwabbit.dftovw.ContextualbanditLabel.cost"]], "empty_col() (vowpalwabbit.dftovw.dftovw method)": [[16, "vowpalwabbit.dftovw.DFtoVW.empty_col"]], "expected_type (vowpalwabbit.dftovw.namespace attribute)": [[16, "vowpalwabbit.dftovw.Namespace.expected_type"]], "from_colnames() (vowpalwabbit.dftovw.dftovw class method)": [[16, "vowpalwabbit.dftovw.DFtoVW.from_colnames"]], "from_column_names() (vowpalwabbit.dftovw.dftovw class method)": [[16, "vowpalwabbit.dftovw.DFtoVW.from_column_names"]], "label (vowpalwabbit.dftovw.multilabel attribute)": [[16, "vowpalwabbit.dftovw.MultiLabel.label"]], "label (vowpalwabbit.dftovw.multiclasslabel attribute)": [[16, "vowpalwabbit.dftovw.MulticlassLabel.label"]], "label (vowpalwabbit.dftovw.simplelabel attribute)": [[16, "vowpalwabbit.dftovw.SimpleLabel.label"]], "probability (vowpalwabbit.dftovw.contextualbanditlabel attribute)": [[16, "vowpalwabbit.dftovw.ContextualbanditLabel.probability"]], "process() (vowpalwabbit.dftovw.contextualbanditlabel method)": [[16, "vowpalwabbit.dftovw.ContextualbanditLabel.process"]], "process() (vowpalwabbit.dftovw.feature method)": [[16, "vowpalwabbit.dftovw.Feature.process"]], "process() (vowpalwabbit.dftovw.multilabel method)": [[16, "vowpalwabbit.dftovw.MultiLabel.process"]], "process() (vowpalwabbit.dftovw.multiclasslabel method)": [[16, "vowpalwabbit.dftovw.MulticlassLabel.process"]], "process() (vowpalwabbit.dftovw.namespace method)": [[16, "vowpalwabbit.dftovw.Namespace.process"]], "process() (vowpalwabbit.dftovw.simplelabel method)": [[16, "vowpalwabbit.dftovw.SimpleLabel.process"]], "process_features() (vowpalwabbit.dftovw.dftovw method)": [[16, "vowpalwabbit.dftovw.DFtoVW.process_features"]], "process_label_and_tag() (vowpalwabbit.dftovw.dftovw method)": [[16, "vowpalwabbit.dftovw.DFtoVW.process_label_and_tag"]], "raise_missing_col_error() (vowpalwabbit.dftovw.dftovw method)": [[16, "vowpalwabbit.dftovw.DFtoVW.raise_missing_col_error"]], "set_namespaces() (vowpalwabbit.dftovw.dftovw method)": [[16, "vowpalwabbit.dftovw.DFtoVW.set_namespaces"]], "value (vowpalwabbit.dftovw.feature attribute)": [[16, "vowpalwabbit.dftovw.Feature.value"]], "vowpalwabbit.dftovw": [[16, "module-vowpalwabbit.dftovw"]], "weight (vowpalwabbit.dftovw.multiclasslabel attribute)": [[16, "vowpalwabbit.dftovw.MulticlassLabel.weight"]], "weight (vowpalwabbit.dftovw.simplelabel attribute)": [[16, "vowpalwabbit.dftovw.SimpleLabel.weight"]], "action (vowpalwabbit.pyvw.ccblabeltype attribute)": [[17, "vowpalwabbit.pyvw.CCBLabelType.ACTION"]], "action (vowpalwabbit.pyvw.slateslabeltype attribute)": [[17, "vowpalwabbit.pyvw.SlatesLabelType.ACTION"]], "action_pdf_value (vowpalwabbit.pyvw.predictiontype attribute)": [[17, "vowpalwabbit.pyvw.PredictionType.ACTION_PDF_VALUE"]], "action_probs (vowpalwabbit.pyvw.predictiontype attribute)": [[17, "vowpalwabbit.pyvw.PredictionType.ACTION_PROBS"]], "action_scores (vowpalwabbit.pyvw.predictiontype attribute)": [[17, "vowpalwabbit.pyvw.PredictionType.ACTION_SCORES"]], "active_multiclass (vowpalwabbit.pyvw.predictiontype attribute)": [[17, "vowpalwabbit.pyvw.PredictionType.ACTIVE_MULTICLASS"]], "abstractlabel (class in vowpalwabbit.pyvw)": [[17, "vowpalwabbit.pyvw.AbstractLabel"]], "actionscore (class in vowpalwabbit.pyvw)": [[17, "vowpalwabbit.pyvw.ActionScore"]], "cbcontinuouslabel (class in vowpalwabbit.pyvw)": [[17, "vowpalwabbit.pyvw.CBContinuousLabel"]], "cbcontinuouslabelelement (class in vowpalwabbit.pyvw)": [[17, "vowpalwabbit.pyvw.CBContinuousLabelElement"]], "cbevallabel (class in vowpalwabbit.pyvw)": [[17, "vowpalwabbit.pyvw.CBEvalLabel"]], "cblabel (class in vowpalwabbit.pyvw)": [[17, "vowpalwabbit.pyvw.CBLabel"]], "cblabelelement (class in vowpalwabbit.pyvw)": [[17, "vowpalwabbit.pyvw.CBLabelElement"]], "ccblabel (class in vowpalwabbit.pyvw)": [[17, "vowpalwabbit.pyvw.CCBLabel"]], "ccblabeltype (class in vowpalwabbit.pyvw)": [[17, "vowpalwabbit.pyvw.CCBLabelType"]], "ccbslotoutcome (class in vowpalwabbit.pyvw)": [[17, "vowpalwabbit.pyvw.CCBSlotOutcome"]], "conditional_contextual_bandit (vowpalwabbit.pyvw.labeltype attribute)": [[17, "vowpalwabbit.pyvw.LabelType.CONDITIONAL_CONTEXTUAL_BANDIT"]], "contextual_bandit (vowpalwabbit.pyvw.labeltype attribute)": [[17, "vowpalwabbit.pyvw.LabelType.CONTEXTUAL_BANDIT"]], "contextual_bandit_eval (vowpalwabbit.pyvw.labeltype attribute)": [[17, "vowpalwabbit.pyvw.LabelType.CONTEXTUAL_BANDIT_EVAL"]], "continuous (vowpalwabbit.pyvw.labeltype attribute)": [[17, "vowpalwabbit.pyvw.LabelType.CONTINUOUS"]], "cost_sensitive (vowpalwabbit.pyvw.labeltype attribute)": [[17, "vowpalwabbit.pyvw.LabelType.COST_SENSITIVE"]], "costsensitiveelement (class in vowpalwabbit.pyvw)": [[17, "vowpalwabbit.pyvw.CostSensitiveElement"]], "costsensitivelabel (class in vowpalwabbit.pyvw)": [[17, "vowpalwabbit.pyvw.CostSensitiveLabel"]], "decision_scores (vowpalwabbit.pyvw.predictiontype attribute)": [[17, "vowpalwabbit.pyvw.PredictionType.DECISION_SCORES"]], "example (class in vowpalwabbit.pyvw)": [[17, "vowpalwabbit.pyvw.Example"], [17, "vowpalwabbit.pyvw.example"]], "examplenamespace (class in vowpalwabbit.pyvw)": [[17, "vowpalwabbit.pyvw.ExampleNamespace"]], "labeltype (class in vowpalwabbit.pyvw)": [[17, "vowpalwabbit.pyvw.LabelType"]], "multiclass (vowpalwabbit.pyvw.labeltype attribute)": [[17, "vowpalwabbit.pyvw.LabelType.MULTICLASS"]], "multiclass (vowpalwabbit.pyvw.predictiontype attribute)": [[17, "vowpalwabbit.pyvw.PredictionType.MULTICLASS"]], "multiclassprobs (vowpalwabbit.pyvw.predictiontype attribute)": [[17, "vowpalwabbit.pyvw.PredictionType.MULTICLASSPROBS"]], "multilabel (vowpalwabbit.pyvw.labeltype attribute)": [[17, "vowpalwabbit.pyvw.LabelType.MULTILABEL"]], "multilabels (vowpalwabbit.pyvw.predictiontype attribute)": [[17, "vowpalwabbit.pyvw.PredictionType.MULTILABELS"]], "multiclasslabel (class in vowpalwabbit.pyvw)": [[17, "vowpalwabbit.pyvw.MulticlassLabel"]], "multiclassprobabilitieslabel (class in vowpalwabbit.pyvw)": [[17, "vowpalwabbit.pyvw.MulticlassProbabilitiesLabel"]], "multilabellabel (class in vowpalwabbit.pyvw)": [[17, "vowpalwabbit.pyvw.MultilabelLabel"]], "nopred (vowpalwabbit.pyvw.predictiontype attribute)": [[17, "vowpalwabbit.pyvw.PredictionType.NOPRED"]], "namespaceid (class in vowpalwabbit.pyvw)": [[17, "vowpalwabbit.pyvw.NamespaceId"]], "pdf (vowpalwabbit.pyvw.predictiontype attribute)": [[17, "vowpalwabbit.pyvw.PredictionType.PDF"]], "prob (vowpalwabbit.pyvw.predictiontype attribute)": [[17, "vowpalwabbit.pyvw.PredictionType.PROB"]], "predictiontype (class in vowpalwabbit.pyvw)": [[17, "vowpalwabbit.pyvw.PredictionType"]], "scalar (vowpalwabbit.pyvw.predictiontype attribute)": [[17, "vowpalwabbit.pyvw.PredictionType.SCALAR"]], "scalars (vowpalwabbit.pyvw.predictiontype attribute)": [[17, "vowpalwabbit.pyvw.PredictionType.SCALARS"]], "shared (vowpalwabbit.pyvw.ccblabeltype attribute)": [[17, "vowpalwabbit.pyvw.CCBLabelType.SHARED"]], "shared (vowpalwabbit.pyvw.slateslabeltype attribute)": [[17, "vowpalwabbit.pyvw.SlatesLabelType.SHARED"]], "simple (vowpalwabbit.pyvw.labeltype attribute)": [[17, "vowpalwabbit.pyvw.LabelType.SIMPLE"]], "slates (vowpalwabbit.pyvw.labeltype attribute)": [[17, "vowpalwabbit.pyvw.LabelType.SLATES"]], "slot (vowpalwabbit.pyvw.ccblabeltype attribute)": [[17, "vowpalwabbit.pyvw.CCBLabelType.SLOT"]], "slot (vowpalwabbit.pyvw.slateslabeltype attribute)": [[17, "vowpalwabbit.pyvw.SlatesLabelType.SLOT"]], "searchtask (class in vowpalwabbit.pyvw)": [[17, "vowpalwabbit.pyvw.SearchTask"]], "simplelabel (class in vowpalwabbit.pyvw)": [[17, "vowpalwabbit.pyvw.SimpleLabel"]], "slateslabel (class in vowpalwabbit.pyvw)": [[17, "vowpalwabbit.pyvw.SlatesLabel"]], "slateslabeltype (class in vowpalwabbit.pyvw)": [[17, "vowpalwabbit.pyvw.SlatesLabelType"]], "unset (vowpalwabbit.pyvw.ccblabeltype attribute)": [[17, "vowpalwabbit.pyvw.CCBLabelType.UNSET"]], "unset (vowpalwabbit.pyvw.slateslabeltype attribute)": [[17, "vowpalwabbit.pyvw.SlatesLabelType.UNSET"]], "vwoption (class in vowpalwabbit.pyvw)": [[17, "vowpalwabbit.pyvw.VWOption"]], "workspace (class in vowpalwabbit.pyvw)": [[17, "vowpalwabbit.pyvw.Workspace"]], "__init__() (vowpalwabbit.pyvw.abstractlabel method)": [[17, "vowpalwabbit.pyvw.AbstractLabel.__init__"]], "__init__() (vowpalwabbit.pyvw.actionscore method)": [[17, "vowpalwabbit.pyvw.ActionScore.__init__"]], "__init__() (vowpalwabbit.pyvw.cbcontinuouslabel method)": [[17, "vowpalwabbit.pyvw.CBContinuousLabel.__init__"]], "__init__() (vowpalwabbit.pyvw.cbcontinuouslabelelement method)": [[17, "vowpalwabbit.pyvw.CBContinuousLabelElement.__init__"]], "__init__() (vowpalwabbit.pyvw.cbevallabel method)": [[17, "vowpalwabbit.pyvw.CBEvalLabel.__init__"]], "__init__() (vowpalwabbit.pyvw.cblabel method)": [[17, "vowpalwabbit.pyvw.CBLabel.__init__"]], "__init__() (vowpalwabbit.pyvw.cblabelelement method)": [[17, "vowpalwabbit.pyvw.CBLabelElement.__init__"]], "__init__() (vowpalwabbit.pyvw.ccblabel method)": [[17, "vowpalwabbit.pyvw.CCBLabel.__init__"]], "__init__() (vowpalwabbit.pyvw.ccbslotoutcome method)": [[17, "vowpalwabbit.pyvw.CCBSlotOutcome.__init__"]], "__init__() (vowpalwabbit.pyvw.costsensitiveelement method)": [[17, "vowpalwabbit.pyvw.CostSensitiveElement.__init__"]], "__init__() (vowpalwabbit.pyvw.costsensitivelabel method)": [[17, "vowpalwabbit.pyvw.CostSensitiveLabel.__init__"]], "__init__() (vowpalwabbit.pyvw.example method)": [[17, "vowpalwabbit.pyvw.Example.__init__"]], "__init__() (vowpalwabbit.pyvw.examplenamespace method)": [[17, "vowpalwabbit.pyvw.ExampleNamespace.__init__"]], "__init__() (vowpalwabbit.pyvw.multiclasslabel method)": [[17, "vowpalwabbit.pyvw.MulticlassLabel.__init__"]], "__init__() (vowpalwabbit.pyvw.multiclassprobabilitieslabel method)": [[17, "vowpalwabbit.pyvw.MulticlassProbabilitiesLabel.__init__"]], "__init__() (vowpalwabbit.pyvw.multilabellabel method)": [[17, "vowpalwabbit.pyvw.MultilabelLabel.__init__"]], "__init__() (vowpalwabbit.pyvw.namespaceid method)": [[17, "vowpalwabbit.pyvw.NamespaceId.__init__"]], "__init__() (vowpalwabbit.pyvw.searchtask method)": [[17, "vowpalwabbit.pyvw.SearchTask.__init__"]], "__init__() (vowpalwabbit.pyvw.simplelabel method)": [[17, "vowpalwabbit.pyvw.SimpleLabel.__init__"]], "__init__() (vowpalwabbit.pyvw.slateslabel method)": [[17, "vowpalwabbit.pyvw.SlatesLabel.__init__"]], "__init__() (vowpalwabbit.pyvw.vwoption method)": [[17, "vowpalwabbit.pyvw.VWOption.__init__"]], "__init__() (vowpalwabbit.pyvw.workspace method)": [[17, "vowpalwabbit.pyvw.Workspace.__init__"]], "abstract_label (class in vowpalwabbit.pyvw)": [[17, "vowpalwabbit.pyvw.abstract_label"]], "allow_override (vowpalwabbit.pyvw.vwoption property)": [[17, "vowpalwabbit.pyvw.VWOption.allow_override"]], "cbandits_label (class in vowpalwabbit.pyvw)": [[17, "vowpalwabbit.pyvw.cbandits_label"]], "cost_sensitive_label (class in vowpalwabbit.pyvw)": [[17, "vowpalwabbit.pyvw.cost_sensitive_label"]], "default_value (vowpalwabbit.pyvw.vwoption property)": [[17, "vowpalwabbit.pyvw.VWOption.default_value"]], "default_value_supplied (vowpalwabbit.pyvw.vwoption property)": [[17, "vowpalwabbit.pyvw.VWOption.default_value_supplied"]], "ensure_namespace_exists() (vowpalwabbit.pyvw.example method)": [[17, "vowpalwabbit.pyvw.Example.ensure_namespace_exists"]], "example() (vowpalwabbit.pyvw.searchtask method)": [[17, "vowpalwabbit.pyvw.SearchTask.example"]], "example() (vowpalwabbit.pyvw.workspace method)": [[17, "vowpalwabbit.pyvw.Workspace.example"]], "example_namespace (class in vowpalwabbit.pyvw)": [[17, "vowpalwabbit.pyvw.example_namespace"]], "experimental (vowpalwabbit.pyvw.vwoption property)": [[17, "vowpalwabbit.pyvw.VWOption.experimental"]], "feature() (vowpalwabbit.pyvw.example method)": [[17, "vowpalwabbit.pyvw.Example.feature"]], "feature_weight() (vowpalwabbit.pyvw.example method)": [[17, "vowpalwabbit.pyvw.Example.feature_weight"]], "finish() (vowpalwabbit.pyvw.workspace method)": [[17, "vowpalwabbit.pyvw.Workspace.finish"]], "finish_example() (vowpalwabbit.pyvw.workspace method)": [[17, "vowpalwabbit.pyvw.Workspace.finish_example"]], "finished (vowpalwabbit.pyvw.example attribute)": [[17, "vowpalwabbit.pyvw.Example.finished"]], "finished (vowpalwabbit.pyvw.workspace attribute)": [[17, "vowpalwabbit.pyvw.Workspace.finished"]], "from_example() (vowpalwabbit.pyvw.abstractlabel static method)": [[17, "vowpalwabbit.pyvw.AbstractLabel.from_example"]], "from_example() (vowpalwabbit.pyvw.cbcontinuouslabel static method)": [[17, "vowpalwabbit.pyvw.CBContinuousLabel.from_example"]], "from_example() (vowpalwabbit.pyvw.cbevallabel static method)": [[17, "vowpalwabbit.pyvw.CBEvalLabel.from_example"]], "from_example() (vowpalwabbit.pyvw.cblabel static method)": [[17, "vowpalwabbit.pyvw.CBLabel.from_example"]], "from_example() (vowpalwabbit.pyvw.ccblabel static method)": [[17, "vowpalwabbit.pyvw.CCBLabel.from_example"]], "from_example() (vowpalwabbit.pyvw.costsensitivelabel static method)": [[17, "vowpalwabbit.pyvw.CostSensitiveLabel.from_example"]], "from_example() (vowpalwabbit.pyvw.multiclasslabel static method)": [[17, "vowpalwabbit.pyvw.MulticlassLabel.from_example"]], "from_example() (vowpalwabbit.pyvw.multiclassprobabilitieslabel static method)": [[17, "vowpalwabbit.pyvw.MulticlassProbabilitiesLabel.from_example"]], "from_example() (vowpalwabbit.pyvw.multilabellabel static method)": [[17, "vowpalwabbit.pyvw.MultilabelLabel.from_example"]], "from_example() (vowpalwabbit.pyvw.simplelabel static method)": [[17, "vowpalwabbit.pyvw.SimpleLabel.from_example"]], "from_example() (vowpalwabbit.pyvw.slateslabel static method)": [[17, "vowpalwabbit.pyvw.SlatesLabel.from_example"]], "get_all_vw_options() (in module vowpalwabbit.pyvw)": [[17, "vowpalwabbit.pyvw.get_all_vw_options"]], "get_config() (vowpalwabbit.pyvw.workspace method)": [[17, "vowpalwabbit.pyvw.Workspace.get_config"]], "get_feature_id() (vowpalwabbit.pyvw.example method)": [[17, "vowpalwabbit.pyvw.Example.get_feature_id"]], "get_label() (vowpalwabbit.pyvw.example method)": [[17, "vowpalwabbit.pyvw.Example.get_label"]], "get_label_class_from_enum() (in module vowpalwabbit.pyvw)": [[17, "vowpalwabbit.pyvw.get_label_class_from_enum"]], "get_label_type() (vowpalwabbit.pyvw.workspace method)": [[17, "vowpalwabbit.pyvw.Workspace.get_label_type"]], "get_log() (vowpalwabbit.pyvw.workspace method)": [[17, "vowpalwabbit.pyvw.Workspace.get_log"]], "get_ns() (vowpalwabbit.pyvw.example method)": [[17, "vowpalwabbit.pyvw.Example.get_ns"]], "get_prediction() (in module vowpalwabbit.pyvw)": [[17, "vowpalwabbit.pyvw.get_prediction"]], "get_prediction() (vowpalwabbit.pyvw.example method)": [[17, "vowpalwabbit.pyvw.Example.get_prediction"]], "get_prediction_type() (vowpalwabbit.pyvw.workspace method)": [[17, "vowpalwabbit.pyvw.Workspace.get_prediction_type"]], "get_weight() (vowpalwabbit.pyvw.workspace method)": [[17, "vowpalwabbit.pyvw.Workspace.get_weight"]], "get_weight_from_name() (vowpalwabbit.pyvw.workspace method)": [[17, "vowpalwabbit.pyvw.Workspace.get_weight_from_name"]], "help_str (vowpalwabbit.pyvw.vwoption property)": [[17, "vowpalwabbit.pyvw.VWOption.help_str"]], "id (vowpalwabbit.pyvw.namespaceid attribute)": [[17, "vowpalwabbit.pyvw.NamespaceId.id"]], "init (vowpalwabbit.pyvw.workspace attribute)": [[17, "vowpalwabbit.pyvw.Workspace.init"]], "init_search_task() (vowpalwabbit.pyvw.workspace method)": [[17, "vowpalwabbit.pyvw.Workspace.init_search_task"]], "is_flag() (vowpalwabbit.pyvw.vwoption method)": [[17, "vowpalwabbit.pyvw.VWOption.is_flag"]], "iter_features() (vowpalwabbit.pyvw.example method)": [[17, "vowpalwabbit.pyvw.Example.iter_features"]], "iter_features() (vowpalwabbit.pyvw.examplenamespace method)": [[17, "vowpalwabbit.pyvw.ExampleNamespace.iter_features"]], "keep (vowpalwabbit.pyvw.vwoption property)": [[17, "vowpalwabbit.pyvw.VWOption.keep"]], "labeltype (vowpalwabbit.pyvw.example attribute)": [[17, "vowpalwabbit.pyvw.Example.labelType"]], "learn() (vowpalwabbit.pyvw.example method)": [[17, "vowpalwabbit.pyvw.Example.learn"]], "learn() (vowpalwabbit.pyvw.searchtask method)": [[17, "vowpalwabbit.pyvw.SearchTask.learn"]], "learn() (vowpalwabbit.pyvw.workspace method)": [[17, "vowpalwabbit.pyvw.Workspace.learn"]], "merge_models() (in module vowpalwabbit.pyvw)": [[17, "vowpalwabbit.pyvw.merge_models"]], "multiclass_label (class in vowpalwabbit.pyvw)": [[17, "vowpalwabbit.pyvw.multiclass_label"]], "multiclass_probabilities_label (class in vowpalwabbit.pyvw)": [[17, "vowpalwabbit.pyvw.multiclass_probabilities_label"]], "name (vowpalwabbit.pyvw.vwoption property)": [[17, "vowpalwabbit.pyvw.VWOption.name"]], "namespace_id (class in vowpalwabbit.pyvw)": [[17, "vowpalwabbit.pyvw.namespace_id"]], "necessary (vowpalwabbit.pyvw.vwoption property)": [[17, "vowpalwabbit.pyvw.VWOption.necessary"]], "ns (vowpalwabbit.pyvw.namespaceid attribute)": [[17, "vowpalwabbit.pyvw.NamespaceId.ns"]], "num_features_in() (vowpalwabbit.pyvw.example method)": [[17, "vowpalwabbit.pyvw.Example.num_features_in"]], "num_features_in() (vowpalwabbit.pyvw.examplenamespace method)": [[17, "vowpalwabbit.pyvw.ExampleNamespace.num_features_in"]], "num_weights() (vowpalwabbit.pyvw.workspace method)": [[17, "vowpalwabbit.pyvw.Workspace.num_weights"]], "ord_ns (vowpalwabbit.pyvw.namespaceid attribute)": [[17, "vowpalwabbit.pyvw.NamespaceId.ord_ns"]], "parse() (vowpalwabbit.pyvw.workspace method)": [[17, "vowpalwabbit.pyvw.Workspace.parse"]], "parser_ran (vowpalwabbit.pyvw.workspace attribute)": [[17, "vowpalwabbit.pyvw.Workspace.parser_ran"]], "pop_feature() (vowpalwabbit.pyvw.example method)": [[17, "vowpalwabbit.pyvw.Example.pop_feature"]], "pop_feature() (vowpalwabbit.pyvw.examplenamespace method)": [[17, "vowpalwabbit.pyvw.ExampleNamespace.pop_feature"]], "pop_namespace() (vowpalwabbit.pyvw.example method)": [[17, "vowpalwabbit.pyvw.Example.pop_namespace"]], "predict() (vowpalwabbit.pyvw.searchtask method)": [[17, "vowpalwabbit.pyvw.SearchTask.predict"]], "predict() (vowpalwabbit.pyvw.workspace method)": [[17, "vowpalwabbit.pyvw.Workspace.predict"]], "push_feature() (vowpalwabbit.pyvw.example method)": [[17, "vowpalwabbit.pyvw.Example.push_feature"]], "push_feature() (vowpalwabbit.pyvw.examplenamespace method)": [[17, "vowpalwabbit.pyvw.ExampleNamespace.push_feature"]], "push_features() (vowpalwabbit.pyvw.example method)": [[17, "vowpalwabbit.pyvw.Example.push_features"]], "push_features() (vowpalwabbit.pyvw.examplenamespace method)": [[17, "vowpalwabbit.pyvw.ExampleNamespace.push_features"]], "push_hashed_feature() (vowpalwabbit.pyvw.example method)": [[17, "vowpalwabbit.pyvw.Example.push_hashed_feature"]], "push_namespace() (vowpalwabbit.pyvw.example method)": [[17, "vowpalwabbit.pyvw.Example.push_namespace"]], "save() (vowpalwabbit.pyvw.workspace method)": [[17, "vowpalwabbit.pyvw.Workspace.save"]], "set_label_string() (vowpalwabbit.pyvw.example method)": [[17, "vowpalwabbit.pyvw.Example.set_label_string"]], "setup_done (vowpalwabbit.pyvw.example attribute)": [[17, "vowpalwabbit.pyvw.Example.setup_done"]], "setup_example() (vowpalwabbit.pyvw.example method)": [[17, "vowpalwabbit.pyvw.Example.setup_example"]], "short_name (vowpalwabbit.pyvw.vwoption property)": [[17, "vowpalwabbit.pyvw.VWOption.short_name"]], "simple_label (class in vowpalwabbit.pyvw)": [[17, "vowpalwabbit.pyvw.simple_label"]], "stride (vowpalwabbit.pyvw.example attribute)": [[17, "vowpalwabbit.pyvw.Example.stride"]], "sum_feat_sq() (vowpalwabbit.pyvw.example method)": [[17, "vowpalwabbit.pyvw.Example.sum_feat_sq"]], "unsetup_example() (vowpalwabbit.pyvw.example method)": [[17, "vowpalwabbit.pyvw.Example.unsetup_example"]], "value (vowpalwabbit.pyvw.vwoption property)": [[17, "vowpalwabbit.pyvw.VWOption.value"]], "value_supplied (vowpalwabbit.pyvw.vwoption property)": [[17, "vowpalwabbit.pyvw.VWOption.value_supplied"]], "vowpalwabbit.pyvw": [[17, "module-vowpalwabbit.pyvw"]], "vw (class in vowpalwabbit.pyvw)": [[17, "vowpalwabbit.pyvw.vw"]], "vw (vowpalwabbit.pyvw.example attribute)": [[17, "vowpalwabbit.pyvw.Example.vw"]], "__init__() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.__init__"]], "__init__() (vowpalwabbit.pyvw.pylibvw.vw method)": [[18, "vowpalwabbit.pyvw.pylibvw.vw.__init__"]], "audit_example() (vowpalwabbit.pyvw.pylibvw.vw method)": [[18, "vowpalwabbit.pyvw.pylibvw.vw.audit_example"]], "ensure_namespace_exists() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.ensure_namespace_exists"]], "erase_namespace() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.erase_namespace"]], "example (class in vowpalwabbit.pyvw.pylibvw)": [[18, "vowpalwabbit.pyvw.pylibvw.example"]], "feature() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.feature"]], "feature_weight() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.feature_weight"]], "finish() (vowpalwabbit.pyvw.pylibvw.vw method)": [[18, "vowpalwabbit.pyvw.pylibvw.vw.finish"]], "get_action_pdf_value() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.get_action_pdf_value"]], "get_action_scores() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.get_action_scores"]], "get_active_multiclass() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.get_active_multiclass"]], "get_arguments() (vowpalwabbit.pyvw.pylibvw.vw method)": [[18, "vowpalwabbit.pyvw.pylibvw.vw.get_arguments"]], "get_cb_continuous_class() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.get_cb_continuous_class"]], "get_cb_continuous_cost() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.get_cb_continuous_cost"]], "get_cb_continuous_num_costs() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.get_cb_continuous_num_costs"]], "get_cb_continuous_pdf_value() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.get_cb_continuous_pdf_value"]], "get_cb_eval_action() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.get_cb_eval_action"]], "get_cb_eval_class() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.get_cb_eval_class"]], "get_cb_eval_cost() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.get_cb_eval_cost"]], "get_cb_eval_num_costs() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.get_cb_eval_num_costs"]], "get_cb_eval_partial_prediction() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.get_cb_eval_partial_prediction"]], "get_cb_eval_probability() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.get_cb_eval_probability"]], "get_cb_eval_weight() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.get_cb_eval_weight"]], "get_cbandits_class() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.get_cbandits_class"]], "get_cbandits_cost() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.get_cbandits_cost"]], "get_cbandits_num_costs() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.get_cbandits_num_costs"]], "get_cbandits_partial_prediction() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.get_cbandits_partial_prediction"]], "get_cbandits_prediction() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.get_cbandits_prediction"]], "get_cbandits_probability() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.get_cbandits_probability"]], "get_cbandits_weight() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.get_cbandits_weight"]], "get_ccb_action() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.get_ccb_action"]], "get_ccb_cost() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.get_ccb_cost"]], "get_ccb_explicitly_included_actions() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.get_ccb_explicitly_included_actions"]], "get_ccb_has_outcome() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.get_ccb_has_outcome"]], "get_ccb_num_explicitly_included_actions() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.get_ccb_num_explicitly_included_actions"]], "get_ccb_num_probabilities() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.get_ccb_num_probabilities"]], "get_ccb_probability() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.get_ccb_probability"]], "get_ccb_type() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.get_ccb_type"]], "get_ccb_weight() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.get_ccb_weight"]], "get_costsensitive_class() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.get_costsensitive_class"]], "get_costsensitive_cost() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.get_costsensitive_cost"]], "get_costsensitive_num_costs() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.get_costsensitive_num_costs"]], "get_costsensitive_partial_prediction() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.get_costsensitive_partial_prediction"]], "get_costsensitive_prediction() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.get_costsensitive_prediction"]], "get_costsensitive_wap_value() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.get_costsensitive_wap_value"]], "get_decision_scores() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.get_decision_scores"]], "get_enabled_learners() (vowpalwabbit.pyvw.pylibvw.vw method)": [[18, "vowpalwabbit.pyvw.pylibvw.vw.get_enabled_learners"]], "get_enabled_reductions() (vowpalwabbit.pyvw.pylibvw.vw method)": [[18, "vowpalwabbit.pyvw.pylibvw.vw.get_enabled_reductions"]], "get_example_counter() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.get_example_counter"]], "get_feature_number() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.get_feature_number"]], "get_ft_offset() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.get_ft_offset"]], "get_holdout_sum_loss() (vowpalwabbit.pyvw.pylibvw.vw method)": [[18, "vowpalwabbit.pyvw.pylibvw.vw.get_holdout_sum_loss"]], "get_id() (vowpalwabbit.pyvw.pylibvw.vw method)": [[18, "vowpalwabbit.pyvw.pylibvw.vw.get_id"]], "get_learner_metrics() (vowpalwabbit.pyvw.pylibvw.vw method)": [[18, "vowpalwabbit.pyvw.pylibvw.vw.get_learner_metrics"]], "get_loss() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.get_loss"]], "get_multiclass_label() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.get_multiclass_label"]], "get_multiclass_prediction() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.get_multiclass_prediction"]], "get_multiclass_weight() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.get_multiclass_weight"]], "get_multilabel_labels() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.get_multilabel_labels"]], "get_multilabel_predictions() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.get_multilabel_predictions"]], "get_options() (vowpalwabbit.pyvw.pylibvw.vw method)": [[18, "vowpalwabbit.pyvw.pylibvw.vw.get_options"]], "get_partial_prediction() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.get_partial_prediction"]], "get_pdf() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.get_pdf"]], "get_prob() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.get_prob"]], "get_scalars() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.get_scalars"]], "get_search_ptr() (vowpalwabbit.pyvw.pylibvw.vw method)": [[18, "vowpalwabbit.pyvw.pylibvw.vw.get_search_ptr"]], "get_simplelabel_initial() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.get_simplelabel_initial"]], "get_simplelabel_label() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.get_simplelabel_label"]], "get_simplelabel_prediction() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.get_simplelabel_prediction"]], "get_simplelabel_weight() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.get_simplelabel_weight"]], "get_slates_action() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.get_slates_action"]], "get_slates_cost() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.get_slates_cost"]], "get_slates_labeled() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.get_slates_labeled"]], "get_slates_num_probabilities() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.get_slates_num_probabilities"]], "get_slates_probability() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.get_slates_probability"]], "get_slates_slot_id() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.get_slates_slot_id"]], "get_slates_type() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.get_slates_type"]], "get_slates_weight() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.get_slates_weight"]], "get_stride() (vowpalwabbit.pyvw.pylibvw.vw method)": [[18, "vowpalwabbit.pyvw.pylibvw.vw.get_stride"]], "get_sum_loss() (vowpalwabbit.pyvw.pylibvw.vw method)": [[18, "vowpalwabbit.pyvw.pylibvw.vw.get_sum_loss"]], "get_tag() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.get_tag"]], "get_topic_prediction() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.get_topic_prediction"]], "get_total_sum_feat_sq() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.get_total_sum_feat_sq"]], "get_updated_prediction() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.get_updated_prediction"]], "get_weight() (vowpalwabbit.pyvw.pylibvw.vw method)": [[18, "vowpalwabbit.pyvw.pylibvw.vw.get_weight"]], "get_weighted_examples() (vowpalwabbit.pyvw.pylibvw.vw method)": [[18, "vowpalwabbit.pyvw.pylibvw.vw.get_weighted_examples"]], "hash_feature() (vowpalwabbit.pyvw.pylibvw.vw method)": [[18, "vowpalwabbit.pyvw.pylibvw.vw.hash_feature"]], "hash_space() (vowpalwabbit.pyvw.pylibvw.vw method)": [[18, "vowpalwabbit.pyvw.pylibvw.vw.hash_space"]], "json_weights() (vowpalwabbit.pyvw.pylibvw.vw method)": [[18, "vowpalwabbit.pyvw.pylibvw.vw.json_weights"]], "lbinary (vowpalwabbit.pyvw.pylibvw.vw attribute)": [[18, "vowpalwabbit.pyvw.pylibvw.vw.lBinary"]], "lconditionalcontextualbandit (vowpalwabbit.pyvw.pylibvw.vw attribute)": [[18, "vowpalwabbit.pyvw.pylibvw.vw.lConditionalContextualBandit"]], "lcontextualbandit (vowpalwabbit.pyvw.pylibvw.vw attribute)": [[18, "vowpalwabbit.pyvw.pylibvw.vw.lContextualBandit"]], "lcontextualbanditeval (vowpalwabbit.pyvw.pylibvw.vw attribute)": [[18, "vowpalwabbit.pyvw.pylibvw.vw.lContextualBanditEval"]], "lcontinuous (vowpalwabbit.pyvw.pylibvw.vw attribute)": [[18, "vowpalwabbit.pyvw.pylibvw.vw.lContinuous"]], "lcostsensitive (vowpalwabbit.pyvw.pylibvw.vw attribute)": [[18, "vowpalwabbit.pyvw.pylibvw.vw.lCostSensitive"]], "ldefault (vowpalwabbit.pyvw.pylibvw.vw attribute)": [[18, "vowpalwabbit.pyvw.pylibvw.vw.lDefault"]], "lmax (vowpalwabbit.pyvw.pylibvw.vw attribute)": [[18, "vowpalwabbit.pyvw.pylibvw.vw.lMax"]], "lmulticlass (vowpalwabbit.pyvw.pylibvw.vw attribute)": [[18, "vowpalwabbit.pyvw.pylibvw.vw.lMulticlass"]], "lmultilabel (vowpalwabbit.pyvw.pylibvw.vw attribute)": [[18, "vowpalwabbit.pyvw.pylibvw.vw.lMultilabel"]], "lsimple (vowpalwabbit.pyvw.pylibvw.vw attribute)": [[18, "vowpalwabbit.pyvw.pylibvw.vw.lSimple"]], "lslates (vowpalwabbit.pyvw.pylibvw.vw attribute)": [[18, "vowpalwabbit.pyvw.pylibvw.vw.lSlates"]], "learn() (vowpalwabbit.pyvw.pylibvw.vw method)": [[18, "vowpalwabbit.pyvw.pylibvw.vw.learn"]], "learn_multi() (vowpalwabbit.pyvw.pylibvw.vw method)": [[18, "vowpalwabbit.pyvw.pylibvw.vw.learn_multi"]], "namespace() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.namespace"]], "num_features_in() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.num_features_in"]], "num_namespaces() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.num_namespaces"]], "num_weights() (vowpalwabbit.pyvw.pylibvw.vw method)": [[18, "vowpalwabbit.pyvw.pylibvw.vw.num_weights"]], "paction_pdf_value (vowpalwabbit.pyvw.pylibvw.vw attribute)": [[18, "vowpalwabbit.pyvw.pylibvw.vw.pACTION_PDF_VALUE"]], "paction_probs (vowpalwabbit.pyvw.pylibvw.vw attribute)": [[18, "vowpalwabbit.pyvw.pylibvw.vw.pACTION_PROBS"]], "paction_scores (vowpalwabbit.pyvw.pylibvw.vw attribute)": [[18, "vowpalwabbit.pyvw.pylibvw.vw.pACTION_SCORES"]], "pactive_multiclass (vowpalwabbit.pyvw.pylibvw.vw attribute)": [[18, "vowpalwabbit.pyvw.pylibvw.vw.pACTIVE_MULTICLASS"]], "pdecision_scores (vowpalwabbit.pyvw.pylibvw.vw attribute)": [[18, "vowpalwabbit.pyvw.pylibvw.vw.pDECISION_SCORES"]], "pmulticlass (vowpalwabbit.pyvw.pylibvw.vw attribute)": [[18, "vowpalwabbit.pyvw.pylibvw.vw.pMULTICLASS"]], "pmulticlassprobs (vowpalwabbit.pyvw.pylibvw.vw attribute)": [[18, "vowpalwabbit.pyvw.pylibvw.vw.pMULTICLASSPROBS"]], "pmultilabels (vowpalwabbit.pyvw.pylibvw.vw attribute)": [[18, "vowpalwabbit.pyvw.pylibvw.vw.pMULTILABELS"]], "pnopred (vowpalwabbit.pyvw.pylibvw.vw attribute)": [[18, "vowpalwabbit.pyvw.pylibvw.vw.pNOPRED"]], "ppdf (vowpalwabbit.pyvw.pylibvw.vw attribute)": [[18, "vowpalwabbit.pyvw.pylibvw.vw.pPDF"]], "pprob (vowpalwabbit.pyvw.pylibvw.vw attribute)": [[18, "vowpalwabbit.pyvw.pylibvw.vw.pPROB"]], "pscalar (vowpalwabbit.pyvw.pylibvw.vw attribute)": [[18, "vowpalwabbit.pyvw.pylibvw.vw.pSCALAR"]], "pscalars (vowpalwabbit.pyvw.pylibvw.vw attribute)": [[18, "vowpalwabbit.pyvw.pylibvw.vw.pSCALARS"]], "pop_feature() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.pop_feature"]], "pop_namespace() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.pop_namespace"]], "predict() (vowpalwabbit.pyvw.pylibvw.vw method)": [[18, "vowpalwabbit.pyvw.pylibvw.vw.predict"]], "predict_multi() (vowpalwabbit.pyvw.pylibvw.vw method)": [[18, "vowpalwabbit.pyvw.pylibvw.vw.predict_multi"]], "push_feature_dict() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.push_feature_dict"]], "push_feature_list() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.push_feature_list"]], "push_hashed_feature() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.push_hashed_feature"]], "push_namespace() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.push_namespace"]], "run_parser() (vowpalwabbit.pyvw.pylibvw.vw method)": [[18, "vowpalwabbit.pyvw.pylibvw.vw.run_parser"]], "save() (vowpalwabbit.pyvw.pylibvw.vw method)": [[18, "vowpalwabbit.pyvw.pylibvw.vw.save"]], "set_label_string() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.set_label_string"]], "set_test_only() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.set_test_only"]], "set_weight() (vowpalwabbit.pyvw.pylibvw.vw method)": [[18, "vowpalwabbit.pyvw.pylibvw.vw.set_weight"]], "setup_example() (vowpalwabbit.pyvw.pylibvw.vw method)": [[18, "vowpalwabbit.pyvw.pylibvw.vw.setup_example"]], "sum_feat_sq() (vowpalwabbit.pyvw.pylibvw.example method)": [[18, "vowpalwabbit.pyvw.pylibvw.example.sum_feat_sq"]], "taction (vowpalwabbit.pyvw.pylibvw.vw attribute)": [[18, "vowpalwabbit.pyvw.pylibvw.vw.tACTION"]], "tshared (vowpalwabbit.pyvw.pylibvw.vw attribute)": [[18, "vowpalwabbit.pyvw.pylibvw.vw.tSHARED"]], "tslot (vowpalwabbit.pyvw.pylibvw.vw attribute)": [[18, "vowpalwabbit.pyvw.pylibvw.vw.tSLOT"]], "tunset (vowpalwabbit.pyvw.pylibvw.vw attribute)": [[18, "vowpalwabbit.pyvw.pylibvw.vw.tUNSET"]], "unsetup_example() (vowpalwabbit.pyvw.pylibvw.vw method)": [[18, "vowpalwabbit.pyvw.pylibvw.vw.unsetup_example"]], "vw (class in vowpalwabbit.pyvw.pylibvw)": [[18, "vowpalwabbit.pyvw.pylibvw.vw"]], "linearclassifiermixin (class in vowpalwabbit.sklearn)": [[19, "vowpalwabbit.sklearn.LinearClassifierMixin"]], "vw (class in vowpalwabbit.sklearn)": [[19, "vowpalwabbit.sklearn.VW"]], "vwclassifier (class in vowpalwabbit.sklearn)": [[19, "vowpalwabbit.sklearn.VWClassifier"]], "vwmulticlassifier (class in vowpalwabbit.sklearn)": [[19, "vowpalwabbit.sklearn.VWMultiClassifier"]], "vwregressor (class in vowpalwabbit.sklearn)": [[19, "vowpalwabbit.sklearn.VWRegressor"]], "__init__() (vowpalwabbit.sklearn.linearclassifiermixin method)": [[19, "vowpalwabbit.sklearn.LinearClassifierMixin.__init__"]], "__init__() (vowpalwabbit.sklearn.vw method)": [[19, "vowpalwabbit.sklearn.VW.__init__"]], "__init__() (vowpalwabbit.sklearn.vwclassifier method)": [[19, "vowpalwabbit.sklearn.VWClassifier.__init__"]], "__init__() (vowpalwabbit.sklearn.vwmulticlassifier method)": [[19, "vowpalwabbit.sklearn.VWMultiClassifier.__init__"]], "__init__() (vowpalwabbit.sklearn.vwregressor method)": [[19, "vowpalwabbit.sklearn.VWRegressor.__init__"]], "classes_ (vowpalwabbit.sklearn.vwclassifier attribute)": [[19, "vowpalwabbit.sklearn.VWClassifier.classes_"]], "classes_ (vowpalwabbit.sklearn.vwmulticlassifier attribute)": [[19, "vowpalwabbit.sklearn.VWMultiClassifier.classes_"]], "coef_ (vowpalwabbit.sklearn.vwclassifier attribute)": [[19, "vowpalwabbit.sklearn.VWClassifier.coef_"]], "convert_labels (vowpalwabbit.sklearn.vw attribute)": [[19, "vowpalwabbit.sklearn.VW.convert_labels"]], "convert_to_vw (vowpalwabbit.sklearn.vw attribute)": [[19, "vowpalwabbit.sklearn.VW.convert_to_vw"]], "decision_function() (vowpalwabbit.sklearn.vwclassifier method)": [[19, "vowpalwabbit.sklearn.VWClassifier.decision_function"]], "decision_function() (vowpalwabbit.sklearn.vwmulticlassifier method)": [[19, "vowpalwabbit.sklearn.VWMultiClassifier.decision_function"]], "estimator_ (vowpalwabbit.sklearn.vwmulticlassifier attribute)": [[19, "vowpalwabbit.sklearn.VWMultiClassifier.estimator_"]], "fit() (vowpalwabbit.sklearn.vw method)": [[19, "vowpalwabbit.sklearn.VW.fit"]], "fit() (vowpalwabbit.sklearn.vwclassifier method)": [[19, "vowpalwabbit.sklearn.VWClassifier.fit"]], "fit() (vowpalwabbit.sklearn.vwmulticlassifier method)": [[19, "vowpalwabbit.sklearn.VWMultiClassifier.fit"]], "get_coefs() (vowpalwabbit.sklearn.vw method)": [[19, "vowpalwabbit.sklearn.VW.get_coefs"]], "get_intercept() (vowpalwabbit.sklearn.vw method)": [[19, "vowpalwabbit.sklearn.VW.get_intercept"]], "get_params() (vowpalwabbit.sklearn.vw method)": [[19, "vowpalwabbit.sklearn.VW.get_params"]], "get_vw() (vowpalwabbit.sklearn.vw method)": [[19, "vowpalwabbit.sklearn.VW.get_vw"]], "load() (vowpalwabbit.sklearn.vw method)": [[19, "vowpalwabbit.sklearn.VW.load"]], "predict() (vowpalwabbit.sklearn.vw method)": [[19, "vowpalwabbit.sklearn.VW.predict"]], "predict() (vowpalwabbit.sklearn.vwclassifier method)": [[19, "vowpalwabbit.sklearn.VWClassifier.predict"]], "predict_proba() (vowpalwabbit.sklearn.vwclassifier method)": [[19, "vowpalwabbit.sklearn.VWClassifier.predict_proba"]], "predict_proba() (vowpalwabbit.sklearn.vwmulticlassifier method)": [[19, "vowpalwabbit.sklearn.VWMultiClassifier.predict_proba"]], "save() (vowpalwabbit.sklearn.vw method)": [[19, "vowpalwabbit.sklearn.VW.save"]], "set_coefs() (vowpalwabbit.sklearn.vw method)": [[19, "vowpalwabbit.sklearn.VW.set_coefs"]], "set_params() (vowpalwabbit.sklearn.vw method)": [[19, "vowpalwabbit.sklearn.VW.set_params"]], "tovw() (in module vowpalwabbit.sklearn)": [[19, "vowpalwabbit.sklearn.tovw"]], "vowpalwabbit.sklearn": [[19, "module-vowpalwabbit.sklearn"]], "vw_ (vowpalwabbit.sklearn.vw attribute)": [[19, "vowpalwabbit.sklearn.VW.vw_"]]}})