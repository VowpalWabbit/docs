Search.setIndex({"docnames": ["examples/basics", "examples/contextual_bandit", "examples/epsilon_decay", "examples/index", "examples/mini_vw", "examples/poisson_regression", "examples/predict", "examples/search_covington", "examples/search_sequence", "examples/search_sequence_ldf", "examples/search_speech_tagger", "index", "reference/index", "reference/python_8110_900_migration_guide", "reference/vowpalwabbit", "reference/vowpalwabbit.dftovw", "reference/vowpalwabbit.pyvw", "reference/vowpalwabbit.pyvw.pylibvw", "reference/vowpalwabbit.sklearn", "tutorials/DFtoVW_tutorial", "tutorials/cmd_csv_with_iris_dataset", "tutorials/cmd_first_steps", "tutorials/cmd_linear_regression", "tutorials/index", "tutorials/off_policy_evaluation", "tutorials/python_Contextual_bandits_and_Vowpal_Wabbit", "tutorials/python_Simulating_a_news_personalization_scenario_using_Contextual_Bandits", "tutorials/python_cats", "tutorials/python_classification", "tutorials/python_first_steps", "tutorials/python_slates"], "filenames": ["examples/basics.ipynb", "examples/contextual_bandit.ipynb", "examples/epsilon_decay.ipynb", "examples/index.md", "examples/mini_vw.md", "examples/poisson_regression.ipynb", "examples/predict.ipynb", "examples/search_covington.ipynb", "examples/search_sequence.ipynb", "examples/search_sequence_ldf.ipynb", "examples/search_speech_tagger.ipynb", "index.rst", "reference/index.rst", "reference/python_8110_900_migration_guide.md", "reference/vowpalwabbit.rst", "reference/vowpalwabbit.dftovw.rst", "reference/vowpalwabbit.pyvw.rst", "reference/vowpalwabbit.pyvw.pylibvw.rst", "reference/vowpalwabbit.sklearn.rst", "tutorials/DFtoVW_tutorial.ipynb", "tutorials/cmd_csv_with_iris_dataset.md", "tutorials/cmd_first_steps.md", "tutorials/cmd_linear_regression.md", "tutorials/index.md", "tutorials/off_policy_evaluation.md", "tutorials/python_Contextual_bandits_and_Vowpal_Wabbit.ipynb", "tutorials/python_Simulating_a_news_personalization_scenario_using_Contextual_Bandits.ipynb", "tutorials/python_cats.ipynb", "tutorials/python_classification.ipynb", "tutorials/python_first_steps.ipynb", "tutorials/python_slates.ipynb"], "titles": ["Python Basics", "Contextual Bandits", "[Experimental] Testing Basic Models with Varying Epsilon Values and Model Counts for Non-Stationary Epsilon Decay", "Examples", "Mini VW", "Poisson Regression", "Predict comparison", "Search - Covington", "Search - Sequence", "Search - Sequence LDF", "Search - Speech Tagger", "Vowpal Wabbit", "API Reference", "Python 8.11 to 9 migration", "vowpalwabbit", "vowpalwabbit.dftovw", "vowpalwabbit.pyvw", "vowpalwabbit.pyvw.pylibvw", "vowpalwabbit.sklearn", "Pandas DataFrame to VowpalWabbit Format Conversion", "Command Line for CSV Dataset", "Command Line Basics", "Command Line Linear Regression", "Tutorials", "Offline Policy Evaluation Using the Command Line", "Contextual Bandits", "Contextual Bandit Content Personalization", "Contextual Bandits with Continuous Actions", "Classification", "Python Basics", "Slates"], "terms": {"thi": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 29, 30], "notebook": [0, 19, 25], "demonstr": [0, 20, 22], "most": [0, 10, 14, 16, 19, 22, 24], "capabl": [0, 22, 25], "vowpalwabit": 0, "interfac": [0, 10, 14, 16, 26], "ani": [0, 7, 8, 9, 10, 13, 14, 15, 16, 18, 19, 22, 24, 25, 30], "applic": [0, 22, 25], "us": [0, 1, 5, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30], "packag": [0, 14, 16, 22, 25, 26, 27, 29], "need": [0, 10, 13, 14, 16, 19, 21, 22, 24, 26, 27, 29, 30], "begin": [0, 18, 19, 22, 25], "import": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 14, 15, 16, 17, 18, 22, 24, 25, 26, 27, 28, 29, 30], "vowpalwabbit": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 20, 23, 25, 26, 27, 28, 29, 30], "One": [0, 10, 14, 15, 16, 19], "we": [0, 2, 5, 6, 7, 10, 15, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30], "ve": [0, 10, 14, 16, 17, 24], "can": [0, 1, 2, 8, 9, 10, 13, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 30], "initi": [0, 7, 8, 9, 10, 14, 15, 16, 17, 18, 19, 26, 27], "vw": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 25, 27, 28, 30], "either": [0, 14, 16, 18, 24, 26, 27, 30], "pass": [0, 2, 4, 5, 7, 8, 10, 14, 15, 16, 18, 21, 22, 24, 25, 26, 27, 28, 29, 30], "command": [0, 11, 14, 16, 19, 23, 25, 30], "line": [0, 11, 14, 15, 16, 18, 19, 23, 25, 26, 30], "string": [0, 7, 8, 14, 15, 16, 17, 18, 19, 20], "e": [0, 1, 10, 14, 16, 19, 22, 24, 25, 26, 27, 30], "g": [0, 1, 18, 19, 24, 27], "quiet": [0, 1, 2, 5, 6, 7, 8, 9, 10, 14, 16, 18, 22, 25, 26, 27, 28, 29, 30], "q": [0, 2, 7, 10, 14, 16, 18, 22, 26, 27], "ab": [0, 1, 6, 14, 16, 18, 19], "l2": [0, 14, 16, 18, 19], "0": [0, 1, 2, 5, 6, 7, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30], "01": 0, "more": [0, 10, 14, 15, 16, 18, 20, 26, 27, 30], "friendli": [0, 2, 26, 27], "manner": 0, "provid": [0, 1, 10, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27], "those": [0, 10, 17], "name": [0, 10, 14, 15, 16, 17, 18, 19, 20, 22], "argument": [0, 10, 13, 14, 15, 16, 17, 18, 19, 25, 26, 30], "here": [0, 1, 10, 13, 14, 16, 20, 22, 24, 25, 26, 27, 30], "do": [0, 1, 5, 6, 7, 10, 13, 14, 16, 18, 19, 22, 24, 25, 26, 27], "latter": [0, 10], "workspac": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 13, 14, 16, 18, 19, 25, 26, 27, 28, 29, 30], "true": [0, 1, 2, 5, 7, 8, 9, 10, 14, 15, 16, 17, 18, 19, 25, 26, 27, 29, 30], "object": [0, 1, 8, 9, 10, 14, 15, 16, 17, 18, 19, 24, 25, 27], "lot": [0, 18, 27], "thing": [0, 10, 22, 26], "i": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 29, 30], "creat": [0, 1, 6, 10, 14, 15, 16, 17, 18, 20, 21, 24, 26, 27, 29, 30], "exampl": [0, 1, 4, 6, 7, 8, 9, 10, 11, 15, 16, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29], "train": [0, 1, 5, 7, 8, 9, 10, 16, 18, 22, 25, 27, 28, 30], "predict": [0, 1, 2, 3, 5, 7, 8, 9, 10, 11, 14, 16, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 30], "wai": [0, 5, 6, 10, 13, 14, 16, 19, 22, 24, 26, 27, 30], "an": [0, 2, 7, 10, 14, 15, 16, 17, 18, 20, 22, 25, 26, 27, 29, 30], "equival": [0, 1, 19, 25], "file": [0, 1, 6, 8, 9, 14, 16, 17, 18, 19, 20, 21, 24, 25], "For": [0, 10, 17, 18, 19, 20, 21, 22, 24, 25, 27, 29, 30], "instanc": [0, 1, 10, 13, 14, 15, 16, 17, 18, 19, 24, 25, 29, 30], "ex": [0, 4, 6, 7, 8, 9, 10, 14, 16, 18, 19, 28], "1": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 28, 29, 30], "two": [0, 5, 7, 10, 13, 14, 16, 22, 24, 25, 26, 27, 30], "featur": [0, 1, 14, 15, 16, 17, 18, 20, 21, 22, 24, 26, 29, 30], "b": [0, 1, 5, 6, 7, 10, 14, 15, 16, 18, 22, 25, 27, 30], "document": [0, 18, 22, 24], "look": [0, 1, 10, 15, 18, 20, 21, 22, 24, 26, 27, 28, 29], "help": [0, 20, 21, 22, 24, 25, 27, 29], "you": [0, 1, 8, 9, 10, 13, 14, 16, 17, 19, 20, 21, 22, 24, 25, 26, 27, 30], "up": [0, 10, 17, 22, 24], "gener": [0, 1, 5, 10, 18, 22, 24, 25, 26, 27, 30], "doc": 0, "learn": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 14, 16, 17, 18, 19, 20, 21, 24, 25, 28, 29, 30], "method": [0, 1, 13, 14, 15, 16, 19, 20, 24, 25, 30], "modul": [0, 11, 13, 16, 19, 25], "pyvw": [0, 4, 7, 8, 9, 10, 12, 14], "ec": [0, 14, 16], "union": [0, 10, 14, 15, 16], "forwardref": 0, "list": [0, 7, 8, 10, 14, 15, 16, 17, 18, 19, 22, 26, 27, 30], "str": [0, 1, 2, 6, 7, 9, 10, 14, 15, 16, 17, 18, 19, 25, 27], "none": [0, 2, 10, 13, 14, 15, 16, 17, 18, 19, 26, 27], "perform": [0, 1, 14, 16, 18, 22, 24, 25], "onlin": [0, 11, 14, 16, 22, 25], "updat": [0, 1, 14, 16, 17, 18, 22, 24, 25], "arg": [0, 4, 14, 15, 16, 18, 20], "which": [0, 10, 13, 14, 15, 16, 18, 19, 20, 22, 24, 25, 26, 27, 30], "model": [0, 1, 3, 5, 6, 11, 14, 16, 17, 18, 24, 27, 28, 29], "get": [0, 2, 8, 10, 14, 16, 17, 18, 19, 20, 21, 22, 24], "If": [0, 10, 13, 14, 15, 16, 18, 21, 22, 24, 25, 26, 27], "singl": [0, 10, 14, 16, 18, 30], "learner": [0, 2, 10, 14, 16, 17, 22, 24, 25, 26, 27], "must": [0, 7, 8, 9, 10, 14, 15, 16, 17, 20, 25, 26, 27], "multilin": [0, 10, 14, 16, 25], "thei": [0, 6, 7, 10, 14, 16, 18, 19, 22, 24, 25, 26, 30], "ar": [0, 1, 2, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 30], "pars": [0, 2, 14, 15, 16, 17, 18, 19, 20, 26, 27], "py": [0, 4], "meth": 0, "befor": [0, 6, 10, 14, 16, 18, 22, 24, 25, 26, 27], "being": [0, 10, 14, 15, 16, 22, 30], "from": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 14, 15, 16, 17, 18, 20, 22, 24, 25, 26, 27, 28, 29, 30], "given": [0, 2, 10, 14, 15, 16, 17, 18, 24, 25, 26, 27, 30], "finish_exampl": [0, 4, 6, 7, 8, 9, 10, 14, 16, 27], "later": [0, 10, 14, 16, 18, 24], "point": [0, 10, 14, 16, 17, 19, 24, 25, 26, 27], "let": [0, 10, 22, 24, 26, 27, 28, 30], "": [0, 4, 5, 8, 9, 10, 13, 14, 15, 16, 18, 21, 22, 24, 25, 26, 27, 28, 29, 30], "run": [0, 10, 14, 16, 17, 18, 20, 21, 22, 24, 26, 27, 30], "function": [0, 2, 10, 13, 14, 16, 17, 18, 25, 26], "print": [0, 1, 4, 6, 7, 8, 9, 10, 17, 19, 22, 25, 26, 27, 28, 29], "f": [0, 5, 6, 10, 14, 16, 18, 19, 20, 21, 22, 24, 27, 28, 30], "current": [0, 6, 10, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27], "get_updated_predict": [0, 6, 17], "8230039477348328": 0, "retriev": [0, 14, 16], "made": [0, 10, 22], "intern": [0, 11, 14, 16, 17, 27], "dure": [0, 10, 27], "The": [0, 5, 7, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 29], "aspect": [0, 19], "mean": [0, 5, 7, 10, 14, 16, 18, 19, 21, 22, 24, 25, 26, 27, 30], "were": [0, 10, 14, 16, 24, 26], "make": [0, 1, 6, 7, 10, 14, 16, 18, 19, 22, 24, 25, 26, 27, 30], "after": [0, 6, 14, 16, 17, 18, 19, 22, 24, 26, 27], "call": [0, 8, 9, 10, 13, 14, 15, 16, 17, 19, 20, 21, 24, 25, 26, 27], "what": [0, 2, 10, 14, 16, 19, 20, 22, 24, 26, 27, 28, 30], "would": [0, 10, 18, 22, 24, 26, 27], "okai": [0, 10], "so": [0, 2, 7, 10, 14, 16, 17, 18, 19, 22, 24, 25, 26, 27, 30], "isn": [0, 10], "t": [0, 5, 8, 9, 10, 14, 16, 17, 18, 19, 22, 24, 25, 26, 27], "quit": [0, 19], "where": [0, 5, 10, 14, 15, 16, 18, 19, 22, 24, 25, 26], "want": [0, 1, 8, 9, 10, 13, 14, 16, 20, 21, 22, 24, 25, 26, 27, 29], "yet": [0, 14, 16, 24], "few": [0, 10, 19, 20, 21, 22, 26, 27], "time": [0, 2, 8, 9, 10, 19, 24, 25, 26, 27], "_": [0, 7, 9, 10, 18, 19, 28, 30], "rang": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 14, 15, 16, 19, 22, 25, 26, 27, 30], "4": [0, 1, 2, 7, 8, 9, 10, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30], "9992850422859192": 0, "now": [0, 6, 8, 9, 10, 13, 14, 16, 19, 20, 21, 22, 24, 25, 26, 27, 29, 30], "bit": [0, 10, 17, 18, 20, 21, 24, 27], "closer": [0, 19], "desir": [0, 16, 30], "new": [0, 1, 10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24, 25, 26, 27, 29], "anoth": [0, 14, 16, 19, 24, 26, 27], "form": [0, 14, 15, 16, 18, 19, 24, 26, 27], "creation": [0, 10], "dictionari": [0, 16, 17, 18, 26], "map": [0, 7, 22], "namespac": [0, 10, 14, 15, 16, 17, 18, 20, 22, 26], "eg": [0, 14, 16, 17, 18], "foo": [0, 6, 18], "pair": [0, 10, 14, 16, 17, 18, 22, 24, 25], "float": [0, 10, 14, 15, 16, 17, 18, 19, 27], "5": [0, 1, 2, 5, 7, 10, 14, 16, 17, 18, 20, 21, 22, 24, 25, 26, 27, 28], "ll": [0, 10, 22, 26, 30], "similar": [0, 25, 27], "ident": [0, 18, 20], "previou": [0, 1, 10, 22, 25], "see": [0, 1, 8, 9, 10, 14, 16, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30], "how": [0, 10, 17, 19, 20, 21, 22, 24, 25, 26, 27, 29, 30], "well": [0, 10, 20, 22, 24, 25, 27], "ha": [0, 5, 10, 13, 14, 15, 16, 17, 18, 19, 22, 24, 25, 26, 27, 28, 30], "note": [0, 10, 18, 19, 20, 21, 22, 24, 25, 26, 29], "setup": [0, 14, 16, 17, 24, 26, 27], "label": [0, 5, 6, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27, 28], "consid": [0, 14, 16, 19, 20, 24], "test": [0, 1, 3, 6, 7, 8, 9, 10, 11, 17, 18, 22, 24, 25, 28, 29], "ex2": 0, "execut": [0, 10, 27], "But": [0, 10, 13, 24], "sinc": [0, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27], "onli": [0, 10, 13, 14, 15, 16, 17, 18, 22, 24, 25, 27, 30], "becaus": [0, 7, 8, 10, 22, 24, 25, 26], "raw": 0, "get_simplelabel_predict": [0, 17], "simplelabel": [0, 13, 14, 15, 16, 19], "regress": [0, 3, 11, 17, 19, 20, 21, 23, 24, 25, 29], "problem": [0, 10, 20, 21, 22, 24, 26, 29], "against": [0, 18, 20, 22, 24], "all": [0, 8, 9, 10, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 30], "multiclass": [0, 10, 14, 15, 16, 17, 18, 20, 26], "get_multiclass_predict": [0, 17], "etc": [0, 14, 15, 16, 17, 18, 19], "about": [0, 14, 15, 16, 19, 21, 22, 24, 26, 29], "half": 0, "re": [0, 6, 10, 14, 16, 17, 19, 22, 27, 28, 30], "also": [0, 10, 14, 15, 16, 18, 19, 20, 22, 24, 25, 26, 27], "miss": [0, 15, 22], "number": [0, 2, 7, 10, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 30], "give": [0, 10, 14, 16, 18, 22, 26, 27], "set_label_str": [0, 6, 7, 9, 10, 14, 16, 17], "2": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 28, 30], "go": [0, 10, 17, 20, 22, 26, 27, 30], "back": [0, 10, 17, 30], "affect": 0, "behavior": [0, 4, 6, 14, 16, 25], "origin": [0, 1, 5, 19, 22, 25, 27, 30], "first": [0, 5, 10, 13, 14, 16, 18, 20, 21, 22, 24, 25, 26, 27, 29], "remov": [0, 13, 14, 16, 17, 18, 19], "9994351863861084": 0, "clearli": 0, "had": [0, 10, 17, 24], "impact": [0, 19, 30], "put": 0, "iter": [0, 2, 5, 10, 14, 15, 16, 19, 24, 26, 27, 30], "between": [0, 10, 14, 16, 18, 19, 22, 26, 27], "10": [0, 5, 8, 9, 10, 14, 16, 17, 18, 19, 21, 22, 25, 27, 28, 29], "9994620680809021": 0, "9994668960571289": 0, "9994677305221558": 0, "9994679689407349": 0, "9994679093360901": 0, "hand": [0, 17, 27], "toward": [0, 22, 26, 27], "done": [0, 6, 10, 14, 16, 19, 26, 27], "safest": 0, "tell": [0, 8, 9, 10, 20, 21, 22, 25, 26, 30], "garbag": [0, 10], "collect": [0, 14, 15, 16, 24, 25], "them": [0, 10, 14, 16, 19, 22, 26, 29], "should": [0, 1, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27], "happen": [0, 2, 6, 22, 24, 26, 27], "default": [0, 6, 14, 15, 16, 17, 18, 19, 20, 22, 24], "when": [0, 10, 13, 14, 15, 16, 18, 19, 22, 24, 25, 26, 27, 30], "out": [0, 10, 19, 22, 24, 26], "scope": 0, "per": [0, 1, 10, 14, 16, 17, 18, 22, 24, 25], "build": [0, 15, 18, 19, 22], "collector": [0, 10], "mai": [0, 10, 14, 16, 18, 22, 24, 25, 26], "soon": 0, "enough": [0, 10, 22, 24, 27], "manipul": [0, 19], "larg": [0, 27, 30], "onc": [0, 10, 14, 15, 16, 24], "final": [0, 6, 10, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 30], "entir": [0, 10, 24, 30], "perhap": [0, 10], "start": [0, 6, 10, 20, 21, 22, 24, 25, 26, 27, 28, 30], "good": [0, 10, 24, 26], "close": [0, 4, 6, 19, 22, 27], "old": [0, 13, 14, 16], "ones": [0, 10, 18, 19, 20, 24], "especi": [0, 24], "save": [0, 1, 6, 14, 16, 17, 18, 20, 21, 24, 25], "disk": [0, 14, 16, 17], "finish": [0, 4, 5, 6, 8, 9, 10, 14, 16, 17, 19, 20, 21, 22, 24, 27, 30], "write": [0, 10, 14, 16, 17, 20, 21, 24], "add": [0, 1, 10, 14, 16, 17, 18, 19, 22, 24, 25], "mymodel": 0, "plai": [0, 1], "around": [0, 10, 14, 16, 19, 26, 27], "end": [0, 10, 19, 22, 24, 25, 26], "intro": 0, "check": [0, 10, 14, 15, 16, 18], "main": [0, 15, 25], "panda": [1, 2, 11, 15, 18, 23, 25, 26, 28, 30], "pd": [1, 2, 15, 18, 19, 25, 26, 28, 30], "sampl": [1, 5, 18, 19, 20, 21, 25, 26, 27], "data": [1, 5, 7, 8, 9, 10, 14, 15, 16, 17, 18, 20, 21, 26, 27, 28, 29, 30], "could": [1, 7, 10, 19, 24, 25, 27, 30], "random": [1, 2, 5, 18, 25, 26, 27, 30], "trial": [1, 25], "cb": [1, 26, 27, 30], "explor": [1, 15, 19, 26, 27], "http": [1, 19, 20], "github": [1, 20, 22, 24, 25], "com": [1, 20], "vowpal_wabbit": [1, 20], "wiki": [1, 19, 22, 24, 25], "log": [1, 5, 14, 16], "train_data": [1, 25], "action": [1, 2, 10, 11, 14, 15, 16, 17, 23, 24, 25, 26, 30], "cost": [1, 2, 7, 10, 14, 15, 16, 17, 18, 24, 25, 26], "probabl": [1, 2, 14, 15, 16, 17, 18, 25, 26, 27], "feature1": [1, 25], "feature2": [1, 25], "c": [1, 6, 10, 14, 15, 16, 18, 22, 25, 27, 30], "feature3": [1, 25], "3": [1, 2, 4, 7, 8, 9, 10, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 28, 30], "d": [1, 7, 10, 14, 16, 18, 20, 21, 22, 24, 25, 30], "7": [1, 14, 16, 17, 19, 20, 22, 25, 26, 27, 28], "train_df": [1, 25], "datafram": [1, 2, 11, 15, 23, 25, 26, 28], "index": [1, 2, 10, 14, 16, 17, 19, 20, 22, 25, 26, 30], "df": [1, 2, 15, 19, 26], "len": [1, 4, 5, 7, 8, 9, 10, 14, 16, 19, 25, 26, 27, 28], "set_index": [1, 25], "some": [1, 5, 6, 10, 15, 18, 19, 20, 21, 22, 24, 25, 26, 29], "decis": [1, 10, 17, 25, 30], "describ": [1, 22, 24, 25], "user": [1, 2, 19, 25, 26, 27, 30], "exploit": [1, 24, 25], "test_data": [1, 25], "test_df": [1, 25], "take": [1, 10, 24, 25, 26, 27], "python": [1, 3, 10, 11, 12, 14, 16, 17, 21, 22, 23, 30], "store": [1, 5, 8, 9, 10, 18, 25], "paramet": [1, 13, 14, 15, 16, 18, 25, 30], "four": [1, 22, 25, 26, 27], "possibl": [1, 10, 18, 19, 24, 25, 26], "row": [1, 2, 15, 19, 20, 26, 27, 28], "loop": [1, 10, 18, 24, 30], "request": [1, 14, 16, 19], "format": [1, 2, 5, 11, 14, 15, 16, 18, 20, 21, 22, 23, 27, 29], "loc": [1, 19, 25, 30], "actual": [1, 10, 24, 25, 27], "same": [1, 10, 16, 18, 20, 22, 24, 25, 26, 27, 30], "wa": [1, 8, 9, 10, 13, 14, 16, 17, 19, 22, 25, 26, 27], "output": [1, 7, 8, 9, 10, 18, 20, 21, 24, 26, 29], "result": [1, 10, 14, 16, 20, 22, 24, 25, 26, 27, 30], "j": [1, 10, 25, 27, 30], "choic": [1, 2, 5, 22, 24, 25, 26, 27, 30], "assign": [1, 17, 18, 19, 25], "everi": [1, 10, 14, 16, 22, 25, 26, 30], "structur": [1, 10, 17, 20, 22, 25], "its": [1, 7, 10, 13, 24, 25, 28, 30], "accordingli": [1, 25], "bonu": 1, "load": [1, 6, 16, 18, 20, 21, 22, 24, 25], "del": [1, 25], "matplotlib": [2, 5, 19, 26, 27, 30], "pyplot": [2, 5, 19, 26, 27, 30], "plt": [2, 5, 19, 26, 27, 30], "itertool": [2, 26], "numpi": [2, 5, 18, 19, 30], "np": [2, 5, 18, 19, 30], "figur": [2, 5, 10], "tom": 2, "anna": 2, "times_of_dai": [2, 26, 27], "morn": [2, 26, 27], "afternoon": [2, 26, 27], "polit": [2, 26], "sport": [2, 26], "music": [2, 26], "food": [2, 26], "financ": [2, 26], "health": [2, 26], "camp": [2, 26], "user_liked_articl": [2, 26], "user_disliked_articl": [2, 26], "def": [2, 4, 6, 7, 8, 9, 10, 19, 26, 27, 28, 30], "get_cost": [2, 26, 27], "context": [2, 24, 25, 26, 27, 30], "switch": [2, 22, 26, 27], "time_of_dai": [2, 26, 27], "return": [2, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 22, 25, 26, 27, 28, 30], "elif": [2, 19, 26, 27], "modifi": [2, 17, 20, 26, 27], "to_vw_example_format": [2, 26, 27], "cb_label": [2, 14, 16, 26], "chosen_act": [2, 26], "prob": [2, 14, 16, 26, 30], "example_str": [2, 26], "share": [2, 14, 16, 18, 20, 26, 30], "n": [2, 7, 8, 9, 10, 14, 16, 18, 19, 20, 21, 24, 25, 26], "articl": [2, 25, 26], "strip": [2, 19, 26], "last": [2, 10, 19, 20, 21, 22, 24, 26], "newlin": [2, 26], "sample_custom_pmf": [2, 26, 30], "pmf": [2, 26, 30], "total": [2, 14, 16, 17, 20, 21, 22, 24, 25, 26, 30], "sum": [2, 10, 14, 16, 17, 20, 21, 22, 24, 26, 30], "scale": [2, 15, 20, 26, 30], "x": [2, 5, 6, 14, 15, 16, 18, 19, 22, 25, 26, 27, 30], "draw": [2, 19, 26, 30], "sum_prob": [2, 26, 30], "enumer": [2, 14, 16, 26, 27, 30], "get_act": [2, 26], "vw_text_exampl": [2, 26, 27], "chosen_action_index": [2, 26], "choose_us": [2, 26], "choose_time_of_dai": [2, 26, 27], "displai": [2, 19, 25, 26], "prefer": [2, 13, 26, 27], "matrix": [2, 18, 19, 26], "get_preference_matrix": [2, 26], "cost_fun": [2, 26], "expand_grid": [2, 26], "data_dict": [2, 26], "product": [2, 24, 26], "from_record": [2, 26], "column": [2, 15, 19, 20, 22, 26, 28], "kei": [2, 14, 16, 19, 24, 26], "appli": [2, 18, 24, 25, 26, 28], "lambda": [2, 18, 19, 25, 26], "r": [2, 4, 5, 7, 10, 19, 25, 26], "axi": [2, 19, 26, 28], "pivot_t": [2, 26], "run_simul": [2, 26, 27], "num_iter": [2, 26, 27, 30], "cost_funct": [2, 26, 27], "switch_reward": 2, "do_learn": [2, 26, 27], "cost_sum": [2, 26, 27], "ctr": [2, 26, 27], "seed": [2, 18, 24], "In": [2, 10, 13, 14, 16, 18, 19, 22, 24, 25, 26, 27, 30], "each": [2, 7, 10, 14, 15, 16, 18, 19, 20, 22, 24, 25, 26, 27, 30], "simul": [2, 18, 21, 22, 29], "choos": [2, 10, 15, 24, 25, 26, 27], "dai": [2, 19, 22, 25, 26, 27], "chose": [2, 26, 27], "inform": [2, 17, 18, 19, 21, 22, 24, 25, 26, 27, 29, 30], "vw_format": [2, 26, 27], "labeltyp": [2, 7, 9, 10, 13, 14, 16, 26, 27], "contextual_bandit": [2, 14, 16, 17, 26], "6": [2, 5, 6, 14, 16, 17, 19, 20, 24, 26, 27, 28], "negat": [2, 26, 27], "plot": [2, 5, 19, 26, 27, 30], "instead": [2, 10, 13, 14, 15, 16, 17, 18, 22, 24, 25, 26, 27, 30], "minim": [2, 26, 27], "maxim": [2, 25, 26, 27], "reward": [2, 24, 25], "append": [2, 5, 6, 7, 8, 9, 10, 14, 16, 19, 22, 26, 27, 28, 30], "plot_ctr": [2, 26], "xlabel": [2, 5, 19, 26, 27, 30], "fontsiz": [2, 19, 26, 27], "14": [2, 19, 26, 27], "ylabel": [2, 5, 26, 27, 30], "ylim": [2, 26, 27], "100000": 2, "25000": 2, "leg": [2, 30], "figsiz": [2, 5, 19], "15": [2, 18, 19, 21, 22, 27, 29, 30], "9": [2, 12, 14, 15, 16, 17, 18, 20, 24, 27, 28], "dpi": 2, "80": [2, 25], "ep": [2, 6, 10], "linspac": 2, "11": [2, 12, 14, 16, 17, 19, 22, 27], "cb_explore_adf": [2, 26, 30], "ua": [2, 26, 30], "instanti": [2, 17, 26, 27], "epsilon_decai": 2, "model_count": 2, "32": [2, 20, 21, 22, 24, 27, 29], "titl": [2, 5, 19, 27], "accuraci": [2, 27, 28], "17": 2, "click": [2, 25, 26, 27], "through": [2, 10, 15, 18, 19, 22, 24, 26, 27], "rate": [2, 10, 18, 20, 21, 24, 26, 27], "8": [2, 7, 10, 12, 14, 16, 17, 18, 19, 20, 22, 24, 27, 28], "legend": [2, 30], "show": [2, 14, 16, 19, 20, 21, 22, 26, 27, 30], "1000000": 2, "250000": [2, 22, 24], "basic": [3, 4, 10, 11, 17, 19, 20, 22, 23], "contextu": [3, 11, 14, 15, 16, 20, 21, 22, 23, 24, 29], "bandit": [3, 11, 14, 15, 16, 17, 20, 21, 22, 23, 24, 29], "experiment": [3, 11, 16], "vari": [3, 11, 24], "epsilon": [3, 11, 24, 25, 26, 27, 30], "valu": [3, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30], "count": [3, 5, 11, 22, 27], "non": [3, 7, 10, 11, 17, 19, 22], "stationari": [3, 11, 22], "decai": [3, 11, 18], "mini": [3, 11], "poisson": [3, 11, 18], "comparison": [3, 4, 11, 19, 24], "search": [3, 11, 16, 17, 18, 19, 25], "covington": [3, 11], "sequenc": [3, 10, 11, 25], "ldf": [3, 7, 11], "speech": [3, 11], "tagger": [3, 11], "sy": [4, 8, 9, 10], "learnfromstr": 4, "fals": [4, 14, 16, 18, 19, 26, 27], "stupid": 4, "program": [4, 8], "mimic": 4, "mostli": [4, 14, 16, 20], "purpos": [4, 19, 24], "speed": [4, 19, 22], "mini_vw": 4, "inputfil": 4, "numpass": 4, "otherarg": 4, "p": [4, 7, 8, 9, 10, 19, 20, 21, 22, 25], "h": 4, "open": [4, 19], "l": [4, 5, 7, 10, 18, 22, 30], "readlin": 4, "els": [4, 7, 10, 14, 16, 18, 19, 26, 27], "__name__": 4, "__main__": 4, "argv": 4, "usag": [4, 13, 16, 19, 30], "other": [4, 10, 16, 20, 22, 24, 25, 27, 30], "exit": 4, "int": [4, 8, 14, 15, 16, 17, 18, 19, 28], "join": [4, 10, 19], "inlin": 5, "distribut": [5, 18, 25], "z": [5, 19], "y": [5, 6, 14, 15, 16, 18, 19, 27, 28, 30], "100": [5, 7, 19, 27], "transform": [5, 27], "linear": [5, 11, 18, 20, 21, 23, 29, 30], "squar": [5, 14, 16, 17, 18, 22], "loss": [5, 6, 10, 17, 18, 20, 21, 22, 24, 25, 26, 27], "directli": [5, 8, 9, 10, 14, 16, 17, 18, 20, 22, 24], "second": [5, 10, 18, 19, 22, 24, 25, 26, 27], "due": [5, 10, 13], "jensen": 5, "inequ": 5, "approach": [5, 20, 21, 22, 24, 26, 29], "produc": [5, 14, 16, 24, 30], "systemat": 5, "neg": [5, 18, 24, 26, 27], "bia": [5, 18], "training_sampl": 5, "logz": 5, "001": [5, 14, 16], "loss_funct": [5, 18], "holdout_off": [5, 18, 22], "readable_model": [5, 18], "readabl": [5, 18, 22, 26, 27], "hundr": 5, "over": [5, 7, 10, 14, 16, 19, 22, 24, 25, 26, 27], "log_predict": 5, "measur": [5, 26, 27], "domain": 5, "log_bia": 5, "exp": [5, 19, 25], "although": [5, 22, 24], "rel": [5, 18, 19], "unbias": [5, 24], "our": [5, 6, 7, 10, 20, 21, 22, 24, 25, 26, 27, 29, 30], "underpredict": 5, "expect": [5, 6, 18, 22, 24, 28], "jensenn": 5, "poisson_predict": 5, "poisson_bia": 5, "18": [5, 20, 21, 22, 24, 27, 29], "subplot": [5, 19, 27], "131": 5, "132": 5, "133": 5, "text": [5, 18, 19, 22, 24, 26, 27, 29], "my_predict": 6, "pp": 6, "v": [6, 14, 16, 19, 22], "iter_featur": [6, 14, 16], "get_weight": [6, 14, 16, 17, 19], "ensure_clos": 6, "1e": 6, "rais": [6, 14, 15, 16, 19], "except": [6, 10, 14, 16, 19, 22], "fail": [6, 14, 16], "differ": [6, 10, 14, 16, 19, 21, 22, 24, 25, 26, 27, 29], "stuff": [6, 10], "read": [6, 18, 20, 21, 22, 24], "updated_pr": 6, "partial": [6, 17, 24], "comput": [6, 10, 17, 18, 19, 22], "own": [6, 10, 14, 16, 26, 28], "my": [6, 10], "view": [6, 24], "my_pr": 6, "scratch": [6, 16, 25], "push_featur": [6, 14, 16], "setup_exampl": [6, 14, 16, 17], "my_pred2": 6, "exlist": 6, "120": 6, "safe": 6, "delet": 6, "reus": [6, 14, 16, 18], "__del__": 6, "hope": [6, 26, 27], "tag": [6, 10, 15, 17, 18, 20, 22], "get_tag": [6, 17], "pred": [6, 7, 8, 9, 10, 19, 20], "get_partial_predict": [6, 17], "get_loss": [6, 17], "get_label": [6, 13, 14, 16], "explic": 6, "anywai": 6, "before_sav": 6, "after_sav": 6, "9978881478309631": 6, "167017": 6, "2683533728122711": 6, "162468": 6, "173048": 6, "19282805919647217": 6, "11650396": 6, "9978881776332855": 6, "05779286101460457": 6, "051427412778139114": 6, "8997899293899536": 6, "5196619629859924": 6, "23072463274002075": 6, "9775646924972534": 6, "word": [7, 8, 9], "parent": [7, 8, 9, 10], "root": [7, 10, 13, 14], "my_dataset": [7, 8, 9, 10], "monster": [7, 8, 9, 10], "ate": [7, 8, 9, 10], "big": [7, 8, 9, 10], "sandwich": [7, 8, 9, 10], "tasti": [7, 8, 9, 10], "itself": [7, 10, 16, 24], "class": [7, 8, 9, 10, 14, 15, 16, 17, 18, 20], "covingtondeppars": [7, 10], "searchtask": [7, 8, 9, 10, 13, 16], "__init__": [7, 8, 9, 10, 14, 15, 16, 17, 18, 19], "self": [7, 8, 9, 10, 14, 16, 18, 19, 22], "sch": [7, 8, 9, 10, 16], "num_act": [7, 8, 9, 10, 16, 27], "set_opt": [7, 8, 9, 10], "auto_hamming_loss": [7, 8, 9, 10], "auto_condition_featur": [7, 8, 9, 10], "_run": [7, 8, 9, 10], "sentenc": [7, 8, 9, 10], "everyth": [7, 10, 13], "wordn": [7, 10], "parn": [7, 10], "m": [7, 9, 10, 19, 25], "continu": [7, 10, 11, 14, 16, 22, 23, 24], "wordm": [7, 10], "ask": [7, 10], "question": [7, 10, 24], "ispar": [7, 10], "construct": [7, 8, 9, 10, 14, 16, 17, 25, 26], "dir": [7, 10], "my_tag": [7, 8, 9, 10], "oracl": [7, 8, 9, 10, 16], "condit": [7, 8, 9, 10, 14, 16, 22], "max": [7, 10, 19, 27], "multiex": [7, 8, 10], "reduct": [7, 8, 10, 20, 24], "break": [7, 10, 13, 18], "covingtondepparserldf": [7, 10], "is_ldf": [7, 9, 10], "makeexampl": [7, 9, 10], "lcostsensit": [7, 9, 10, 17], "zero": [7, 10], "irrelev": [7, 10], "ensur": [7, 10], "truth": [7, 10, 19, 24], "have": [7, 8, 9, 10, 13, 14, 16, 18, 19, 20, 22, 24, 25, 26, 27, 30], "exclud": [7, 10], "revers": [7, 14, 16, 17, 27], "todo": 7, "sure": [7, 10, 14, 16], "csoaa_ldf": [7, 9, 10], "demo": 7, "version": [7, 10, 14, 15, 16, 18, 19, 24], "search_task": [7, 8, 9, 10, 14, 16], "hook": [7, 8, 9, 10], "task": [7, 8, 9, 10, 16, 18, 19, 25], "init_search_task": [7, 8, 9, 10, 14, 16], "w": [7, 8, 9, 10, 19], "split": [7, 8, 9, 10, 14, 16, 18, 19, 24], "__future__": 8, "print_funct": 8, "sequencelabel": [8, 9, 10], "automat": [8, 9, 10, 14, 16, 22, 24], "option": [8, 9, 10, 11, 14, 15, 16, 17, 18, 22, 24, 25, 26, 29], "po_exist": 8, "po_get": 8, "po_get_int": 8, "found": [8, 15, 19, 20, 24], "type": [8, 9, 10, 14, 15, 16, 17, 18, 22, 24, 30], "set": [8, 9, 10, 14, 15, 16, 17, 18, 19, 22, 24, 25, 28], "whatev": [8, 9, 10], "remind": [8, 9, 10], "shouldn": [8, 9, 10, 14, 16], "po": [8, 9, 10], "guarante": [8, 9, 10, 22], "properli": [8, 9, 10], "wow": [8, 9], "your": [8, 9, 10, 20, 21, 24, 25, 26, 29], "doe": [8, 9, 10, 14, 16, 18, 22, 24, 27], "NOT": [8, 9], "det": [8, 9, 10], "noun": [8, 9, 10, 18], "verb": [8, 9, 10, 18], "adj": [8, 9, 10, 18], "usual": [8, 9, 14, 16, 24, 30], "abov": [8, 9, 10, 20, 24, 25, 27], "dataset": [8, 9, 10, 11, 18, 19, 23, 24, 28], "ten": [8, 9, 10], "__iter__": [8, 9], "feed": [8, 9, 10, 18], "stderr": [8, 9], "while": [9, 22], "tutori": [10, 11, 20, 21, 22, 24, 26, 27, 29, 30], "walk": [10, 24], "code": [10, 14, 16, 30], "complet": [10, 14, 16], "graduat": 10, "faster": [10, 18, 22], "pain": 10, "paradigm": 10, "solv": [10, 30], "like": [10, 14, 16, 18, 20, 22, 24, 25, 26, 27, 28], "follow": [10, 18, 19, 20, 21, 22, 24, 25, 26, 27, 30], "At": [10, 14, 16, 22], "world": [10, 24, 25, 26, 27, 30], "bad": [10, 24, 25], "earlier": [10, 26], "thankfulli": 10, "access": [10, 13, 19], "right": [10, 19, 27], "answer": [10, 24], "part": [10, 16, 19, 24], "goal": [10, 25, 26, 27, 30], "case": [10, 14, 16, 18, 22, 24, 25, 26, 27, 30], "left": 10, "third": [10, 22, 24, 25, 26, 27], "project": 10, "librari": [10, 11, 14, 16, 30], "defin": [10, 15, 18, 26, 27], "one": [10, 15, 17, 18, 19, 20, 22, 24, 25, 26, 27, 30], "annoi": 10, "integ": [10, 13, 14, 16, 18, 19, 22], "correctli": 10, "To": [10, 14, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 29], "deriv": [10, 18, 22], "three": [10, 20, 21, 22, 25, 29], "plu": [10, 24], "been": [10, 14, 15, 16, 18, 19, 27], "within": 10, "via": [10, 14, 16], "Of": 10, "cours": 10, "addit": [10, 18, 22, 24, 25, 26], "input": [10, 15, 18, 20, 21, 22, 26, 29, 30], "implement": [10, 11, 15, 16, 18, 24], "unpack": 10, "It": [10, 14, 16, 19, 20, 22, 24, 25, 26, 27], "design": [10, 26], "programm": 10, "life": 10, "easier": [10, 14, 16, 19, 26, 27], "rememb": [10, 24, 26, 27], "said": 10, "sai": [10, 22, 24, 25, 27], "compar": [10, 15, 24, 26, 27, 30], "individu": [10, 18, 30], "incorrect": 10, "subtler": 10, "th": [10, 14, 16], "order": [10, 18, 24, 26, 27, 30], "underli": 10, "classifi": [10, 18, 20], "pai": 10, "attent": 10, "manual": [10, 19], "u": [10, 20, 21, 22, 24, 25, 26, 27, 29, 30], "simplic": 10, "posit": [10, 14, 15, 16, 22, 26, 27], "extract": [10, 14, 16, 19], "consist": [10, 16, 19], "fairli": 10, "complic": 10, "predictor": [10, 22, 25], "refer": [10, 11, 13, 14, 16, 22, 24, 25], "futur": [10, 13, 14, 16, 24], "requir": [10, 14, 16, 21, 22, 25, 29, 30], "As": [10, 20, 24, 30], "mention": 10, "system": [10, 22, 24], "best": [10, 21, 22, 24, 25, 26, 30], "whichev": 10, "natur": [10, 13], "predecessor": 10, "though": [10, 19], "readi": [10, 24], "step": [10, 19, 20, 27], "specif": [10, 14, 15, 16, 17, 19, 22, 25, 26, 27], "alwai": [10, 14, 16, 18, 22, 25, 26], "larger": [10, 22], "ring_siz": [10, 18], "ignor": [10, 18, 20, 22, 25], "next": [10, 20, 21, 22, 25, 27, 29], "inherit": [10, 17], "anyth": [10, 14, 16], "test_exampl": [10, 25, 29], "cheat": 10, "definit": [10, 24], "inde": 10, "correct": [10, 18], "both": 10, "explicit": [10, 15, 22], "rewrit": 10, "without": [10, 14, 16, 20, 25], "rid": 10, "simultan": 10, "modestli": 10, "complex": [10, 22], "sequencelabeler2": 10, "prevpr": 10, "There": [10, 16, 19, 22, 25, 26, 30], "essenti": [10, 26, 27], "chang": [10, 13, 16, 17, 22, 24, 25, 26, 27], "keep": [10, 16, 18, 22], "track": [10, 22, 27], "mani": [10, 17, 22, 24, 25], "error": [10, 15, 18, 19, 24, 27], "whether": [10, 21, 22, 26, 29], "insid": 10, "inner": 10, "procedur": [10, 24], "did": [10, 13, 14, 16, 24], "explicitli": [10, 17, 25], "ad": [10, 14, 16, 19], "even": [10, 19, 22, 24], "still": [10, 13, 19, 26, 27], "process": [10, 14, 15, 16, 17, 18, 24, 26, 27], "algorithm": [10, 22, 26, 27, 30], "memoiz": 10, "certain": [10, 19, 26], "know": [10, 22, 24, 26, 27], "might": [10, 24, 27], "try": [10, 19, 24, 27, 30], "variant": 10, "doesn": [10, 14, 16, 17, 18, 19, 24], "work": [10, 13, 19, 21, 22, 24, 26, 27, 29], "just": [10, 14, 16, 18, 20, 21, 22, 24, 25, 26, 27, 29], "idea": 10, "o": [10, 19, 20, 25], "real": [10, 22, 24, 25, 26, 27, 30], "don": [10, 18, 24, 25, 26], "cycl": 10, "uniqu": [10, 15, 19, 22], "graph": 10, "hopefulli": 10, "shift": 10, "reduc": [10, 18, 24, 26], "tree": [10, 27], "realli": [10, 14, 16, 26, 27], "kind": [10, 19, 30], "unnecessari": 10, "under": [10, 13], "consider": 10, "direct": [10, 14, 16, 19, 24, 25], "edg": 10, "bunch": 10, "bin": [10, 19], "distanc": [10, 18], "argu": 10, "rather": [10, 14, 16, 18, 22, 25], "than": [10, 14, 16, 18, 20, 21, 22, 24, 25, 26, 27], "weird": 10, "binari": [10, 18, 27], "sens": [10, 14, 16], "challeng": 10, "cannot": [10, 15], "vanilla": 10, "classif": [10, 11, 17, 18, 20, 23, 24, 26], "length": [10, 14, 16, 20], "across": [10, 18, 25, 27], "mode": [10, 22], "id": [10, 14, 16, 17, 20], "caveat": [10, 24], "below": [10, 19, 25, 26, 27], "simpli": [10, 14, 16, 24], "henc": [10, 19, 22], "particular": [10, 14, 16, 17, 26], "vector": [10, 14, 16, 17, 18, 22, 25], "pick": [10, 26, 27], "indic": [10, 22, 24, 25, 30], "clean": 10, "focu": 10, "declar": 10, "skip": [10, 18, 22], "minut": [10, 25], "recogn": 10, "connect": [10, 30], "clever": 10, "won": 10, "specifi": [10, 15, 16, 18, 20, 22, 24, 26, 27], "correspond": [10, 13, 14, 16, 17, 18, 20, 22, 24, 26], "someth": [10, 22, 24, 26, 27], "arrow": 10, "equal": 10, "beacus": 10, "phew": 10, "un": 10, "computaiton": 10, "paragraph": 10, "ago": 10, "skippabl": 10, "trust": 10, "pedant": 10, "roughli": [10, 25], "feautr": 10, "major": 10, "hood": 10, "treat": [10, 18, 19], "sensit": [10, 18, 26], "recommend": [10, 22, 24, 26, 27], "issu": [10, 14, 16], "recal": [10, 26, 27], "intrins": 10, "clear": [10, 24], "By": [10, 14, 16], "record": [10, 19], "avoid": [10, 13, 14, 16, 20, 22, 29], "necess": 10, "engin": 10, "histori": [10, 25], "seem": [10, 24], "captur": [10, 14, 16], "intuit": 10, "bug": 10, "invalid": 10, "notic": [10, 19, 22, 26, 30], "enabl": [10, 14, 16, 17, 18, 19, 20, 24, 30], "wonder": 10, "rest": [10, 24, 27], "familiar": 10, "spirit": 10, "ibm": 10, "supervis": [10, 24], "unsupervis": 10, "trickier": 10, "tripl": 10, "null": 10, "blue": [10, 19], "hous": [10, 21, 22, 27, 29], "la": 10, "maison": 10, "bleue": 10, "flower": [10, 20], "fleur": 10, "mismatch": 10, "level": [10, 14, 16, 18], "intersect": 10, "alignmenterror": 10, "And": [10, 13, 19], "english": 10, "side": [10, 25], "phrase": 10, "foreign": 10, "maximum": [10, 25, 27], "fed": 10, "cover": [10, 20, 21, 24, 25, 30], "multipl": [10, 18, 19, 22, 24, 25, 28, 30], "wordalign": 10, "j0": 10, "k": [10, 14, 16, 18, 27, 30], "lab": 10, "alignedsent": 10, "span": [10, 25, 27], "far": [10, 17, 22, 24], "contain": [10, 14, 15, 16, 19, 22, 25], "empti": [10, 14, 15, 16, 17, 18, 22], "has_kei": 10, "sortedspan": 10, "sort": [10, 15], "achiev": [10, 26, 27], "smallest": [10, 18], "local": 10, "perfect": [10, 22, 26], "interest": [10, 24], "support": [10, 14, 16, 18, 24, 25, 26, 27], "ef": 10, "broken": 10, "investig": 10, "fast": [11, 22, 24], "machin": [11, 19, 22, 25], "csv": [11, 23], "offlin": [11, 23], "polici": [11, 15, 23, 26, 30], "evalu": [11, 18, 22, 23, 25, 26], "content": [11, 16, 19, 21, 22, 23, 29], "person": [11, 21, 22, 23, 27, 29], "slate": [11, 14, 16, 17, 23], "convers": [11, 23], "api": 11, "core": [11, 14, 16, 30], "migrat": 11, "guid": [11, 25], "dftovw": [12, 19], "sklearn": [12, 13, 28], "pylibvw": [12, 13, 14, 16], "noth": [13, 14, 16], "move": [13, 19], "deprec": [13, 14, 16], "warn": [13, 14, 16, 20], "rundown": 13, "direcli": 13, "past": 13, "avail": [13, 14, 15, 16, 17, 18, 19, 25], "expos": [13, 14, 16, 18], "advanc": [13, 14, 16, 19, 20, 21, 22, 29], "less": [13, 24, 26, 27], "replac": [13, 20, 21, 22, 24, 28, 29], "example_namespac": [13, 16], "namespace_id": [13, 16], "namespaceid": [13, 14, 16], "abstract_label": [13, 16], "abstractlabel": [13, 14, 16], "simple_label": [13, 15, 16, 17], "multiclass_label": [13, 15, 16], "multiclasslabel": [13, 14, 15, 16, 19], "multiclass_probabilities_label": [13, 16], "multiclassprobabilitieslabel": [13, 14, 16], "cost_sensitive_label": [13, 16], "costsensitivelabel": [13, 14, 16], "cbandits_label": [13, 16], "cblabel": [13, 14, 16], "free": [13, 18, 22, 24], "constant": [13, 15, 18, 21, 22], "pscalar": [13, 17], "predictiontyp": [13, 14, 16], "lsimpl": [13, 17], "lbinari": [13, 17], "scalar": [13, 14, 16, 17], "ldefault": [13, 17], "lmax": [13, 17], "from_exampl": [13, 14, 16], "exist": [13, 14, 16, 17, 18, 22], "static": [13, 14, 16], "factori": 13, "accept": [13, 26, 27], "correspodn": 13, "unus": 13, "fix": [13, 24], "callsit": 13, "A": [14, 15, 16, 19, 22, 25, 26, 27, 30], "small": [14, 27], "base": [14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 30], "abstract": [14, 16], "actionscor": [14, 16], "score": [14, 16, 17, 18, 25, 30], "cbcontinuouslabel": [14, 16], "cb_continu": [14, 16, 17], "cbcontinuouslabelel": [14, 16], "pdf_valu": [14, 16, 17, 27], "cbevallabel": [14, 16], "eval": [14, 16, 24], "weight": [14, 15, 16, 17, 18, 20, 21, 22, 24, 25], "cblabelel": [14, 16], "partial_predict": [14, 16], "kwarg": [14, 16, 18], "ccblabel": [14, 16], "ccblabeltyp": [14, 16], "unset": [14, 16], "explicit_included_act": [14, 16], "outcom": [14, 16, 17, 30], "intenum": [14, 16], "slot": [14, 16, 17, 30], "ccbslotoutcom": [14, 16], "action_prob": [14, 16], "costsensitiveel": [14, 16], "wap_valu": [14, 16], "initstringordictorrawexampl": [14, 16], "wrapper": [14, 16, 18], "wrap": [14, 16], "safer": [14, 16], "dict": [14, 16, 17, 19], "tupl": [14, 15, 16, 17], "nativ": [14, 16, 17], "rare": [14, 16, 22], "callabl": [14, 16], "until": [14, 16, 24, 27], "longer": [14, 16], "repres": [14, 15, 16, 19, 25, 27, 30], "item": [14, 16, 19, 26, 28, 30], "assum": [14, 16, 17, 18, 24, 26, 27], "infer": [14, 16, 30], "configur": [14, 16], "suppli": [14, 16, 17, 20, 21, 22, 26, 27], "enum": [14, 16], "ensure_namespace_exist": [14, 16, 17], "alreadi": [14, 16, 17, 20, 24, 25], "hash": [14, 16, 17, 18, 21, 29], "num_features_in": [14, 16, 17], "feature_weight": [14, 16, 17], "associ": [14, 16, 17, 18, 19, 24, 25, 27, 30], "bool": [14, 16, 17, 18], "get_feature_id": [14, 16], "ns_hash": [14, 16], "label_class": [14, 16], "abil": [14, 16], "legaci": [14, 16], "slateslabel": [14, 16], "get_label_typ": [14, 16], "get_n": [14, 16], "argss": [14, 16], "get_predict": [14, 16], "prediction_typ": [14, 16], "releas": [14, 16], "accord": [14, 16, 18, 29], "action_scor": [14, 16], "multilabel": [14, 15, 16, 17], "multiclassprob": [14, 16], "decision_scor": [14, 16], "action_pdf_valu": [14, 16], "pdf": [14, 16, 17, 27], "active_multiclass": [14, 16], "nopr": [14, 16], "get_prediction_typ": [14, 16], "includ": [14, 16, 17, 18, 20, 21, 22, 24, 25, 26, 29], "hasn": [14, 16], "pop_featur": [14, 16, 17], "top": [14, 16, 17, 27], "pop": [14, 16], "pop_namespac": [14, 16, 17], "unhash": [14, 16], "push": [14, 16], "featurelist": [14, 16], "space_hash": [14, 16, 19], "hash_spac": [14, 16, 17, 19], "feat_hash": [14, 16, 19], "hash_featur": [14, 16, 17, 19], "match": [14, 16, 19], "push_hashed_featur": [14, 16, 17], "push_namespac": [14, 16, 17], "onto": [14, 16], "ala": [14, 16], "setup_don": [14, 16], "ie": [14, 16], "quadrat": [14, 16, 17, 18, 22], "stride": [14, 16, 17], "sum_feat_sq": [14, 16, 17], "unsetup_exampl": [14, 16, 17], "edit": [14, 16], "examplenamespac": [14, 16], "helper": [14, 16], "allow": [14, 15, 16, 22, 24, 25, 26, 27], "oper": [14, 16, 18, 22, 26, 27], "mainli": [14, 16], "0th": [14, 16], "target": [14, 15, 16, 17, 18, 22, 28], "feature_list": [14, 16], "feature_list_legaci": [14, 16], "never": [14, 16, 24, 25, 26, 27], "inli": [14, 16], "conditional_contextual_bandit": [14, 16, 17], "contextual_bandit_ev": [14, 16], "cost_sensit": [14, 16, 17], "simpl": [14, 15, 16, 19, 22], "multilabellabel": [14, 16], "convert": [14, 15, 16, 18, 26, 27], "space": [14, 16, 22, 24, 25, 26, 27], "charact": [14, 16, 17, 18], "versu": [14, 16], "touch": [14, 16], "group": [14, 16, 19, 22], "respres": [14, 16], "ord_n": [14, 16], "represent": [14, 15, 16, 22], "field": [14, 16, 18, 25], "12": [14, 16, 17, 19, 27], "slateslabeltyp": [14, 16], "slot_id": [14, 16, 17], "arg_str": [14, 16, 19], "enable_log": [14, 16, 19], "arg_list": [14, 16], "kw": [14, 16], "bind": [14, 16, 17], "glue": [14, 16], "merg": [14, 16], "togeth": [14, 16, 26], "duplic": [14, 16, 18], "audit": [14, 16, 17], "naiv": [14, 16], "control": [14, 16, 18, 25], "pleas": [14, 15, 16, 18, 24, 25], "abl": [14, 16, 22, 24, 26, 27], "get_log": [14, 16, 19], "token": [14, 16], "compris": [14, 16], "vw1": [14, 16], "vw2": [14, 16], "24": [14, 16, 24, 27], "vw3": [14, 16], "26": [14, 16, 27], "vw4": [14, 16], "ac": [14, 16], "interact": [14, 16, 18, 22, 24, 25, 27, 30], "stringordict": [14, 16], "descript": [14, 16, 30], "valid": [14, 15, 16, 22, 24], "stop": [14, 16, 17, 25], "statist": [14, 16, 20, 21], "care": [14, 16], "get_config": [14, 16], "filtered_enabled_reductions_onli": [14, 16], "messag": [14, 15, 16], "init": [14, 16, 19], "offset": [14, 16, 17, 22], "get_weight_from_nam": [14, 16, 19], "feature_nam": [14, 16, 19, 28], "namespace_nam": [14, 16, 19], "live": [14, 16, 22], "task_data": [14, 16], "num_weight": [14, 16, 17], "str_ex": [14, 16], "element": [14, 16, 19], "75": [14, 16, 19, 22, 25, 27], "cb_adf": [14, 16], "parser_ran": [14, 16], "filenam": [14, 16, 17, 18, 22], "renam": [15, 16, 18, 19], "contextualbanditlabel": 15, "constructor": [15, 18], "hashabl": 15, "taken": [15, 24], "observ": [15, 19, 25, 26, 27, 30], "lower": [15, 19, 24, 30], "better": [15, 22, 24, 26, 30], "select": [15, 27, 30], "seri": [15, 18, 30], "suitabl": [15, 30], "built": [15, 22], "conveni": 15, "compos": 15, "identifi": [15, 25], "conv1": 15, "convert_df": [15, 19], "conv2": 15, "col": [15, 19], "conv3": 15, "doubleit": 15, "rename_featur": 15, "feat_a": 15, "conv4": 15, "ns1": 15, "ns2": 15, "check_columns_type_and_valu": 15, "check_features_typ": 15, "typeerror": [15, 19], "check_instance_column": 15, "attribut": [15, 19], "_col": 15, "occur": [15, 22, 26, 27], "prepend": [15, 24], "formula": 15, "valueerror": [15, 19], "check_label_typ": 15, "check_missing_columns_df": 15, "check_namespaces_typ": 15, "empty_col": 15, "much": [15, 22, 27], "classmethod": 15, "from_colnam": 15, "label_typ": [15, 16], "from_column_nam": [15, 19], "multi_label": 15, "conv": 15, "df2": 15, "x1": 15, "x2": 15, "x3": 15, "process_featur": 15, "process_label_and_tag": 15, "raise_missing_col_error": 15, "missing_cols_dict": 15, "set_namespac": 15, "as_typ": 15, "enforc": 15, "numer": [15, 18, 19], "categor": [15, 19], "ensure_valid_valu": 15, "multi": [15, 25], "thu": [15, 20, 24], "factor": [15, 18], "ns_one_featur": 15, "ns_multi_featur": 15, "ns_one_feature_with_nam": 15, "firstnamespac": 15, "ns_one_feature_with_name_and_valu": 15, "check_attributes_typ": 15, "expected_typ": 15, "coupl": 16, "initstringordict": 16, "data_iter": 16, "my_exampl": 16, "useoracl": 16, "vwoption": 16, "help_str": 16, "short_nam": 16, "necessari": [16, 22, 26, 27], "allow_overrid": 16, "value_suppli": 16, "default_valu": [16, 18], "default_value_suppli": 16, "properti": [16, 19, 20], "is_flag": 16, "get_all_vw_opt": 16, "get_label_class_from_enum": 16, "merge_model": 16, "base_model": 16, "separ": [16, 20, 22, 24, 25], "serial": 16, "exact": [16, 24], "preserve_performance_count": [16, 18], "model1": 16, "initial_regressor": [16, 18], "model2": 16, "merged_model": 16, "emploi": 17, "extra": [17, 18], "page": [17, 25, 30], "hold": [17, 22], "parser": [17, 19, 22], "arg1": 17, "arg2": 17, "vw_log": 17, "arg3": 17, "audit_exampl": 17, "get_argu": 17, "resolv": 17, "depend": [17, 25, 26], "get_enabled_learn": 17, "get_enabled_reduct": 17, "get_holdout_sum_loss": 17, "cumul": [17, 19], "holdout": [17, 18, 24], "suffer": 17, "get_id": 17, "get_learner_metr": 17, "stack": 17, "metric": [17, 30], "extra_metr": 17, "get_opt": 17, "get_search_ptr": 17, "pointer": 17, "get_strid": 17, "get_sum_loss": 17, "get_weighted_exampl": 17, "json_weight": 17, "json": [17, 18, 27], "lconditionalcontextualbandit": 17, "lcontextualbandit": 17, "lcontextualbanditev": 17, "lcontinu": 17, "lmulticlass": 17, "lmultilabel": 17, "lslate": 17, "learn_multi": 17, "paction_pdf_valu": 17, "paction_prob": 17, "paction_scor": 17, "pactive_multiclass": 17, "pdecision_scor": 17, "pmulticlass": 17, "pmulticlassprob": 17, "pmultilabel": 17, "pnopr": 17, "ppdf": 17, "pprob": 17, "predict_multi": 17, "run_pars": 17, "extern": [17, 18], "set_weight": 17, "arg4": 17, "prepar": 17, "taction": 17, "tshare": 17, "tslot": 17, "tunset": 17, "erase_namespac": 17, "ith": 17, "ord": 17, "get_action_pdf_valu": 17, "get_action_scor": 17, "get_active_multiclass": 17, "activ": [17, 22, 24], "get_cb_continuous_class": 17, "get_cb_continuous_num_cost": 17, "get_cb_continuous_cost": 17, "get_cb_continuous_pdf_valu": 17, "get_cb_eval_act": 17, "cb_eval": 17, "get_cb_eval_class": 17, "get_cb_eval_num_cost": 17, "get_cb_eval_cost": 17, "get_cb_eval_partial_predict": 17, "get_cb_eval_prob": 17, "get_cb_eval_weight": 17, "get_cbandits_class": 17, "get_cbandits_num_cost": 17, "get_cbandits_cost": 17, "get_cbandits_partial_predict": 17, "get_cbandits_predict": 17, "get_cbandits_prob": 17, "get_cbandits_weight": 17, "get_ccb_act": 17, "get_ccb_cost": 17, "get_ccb_explicitly_included_act": 17, "arrai": [17, 18], "get_ccb_has_outcom": 17, "verifi": 17, "get_ccb_num_explicitly_included_act": 17, "get_ccb_num_prob": 17, "get_ccb_prob": 17, "get_ccb_typ": 17, "get_ccb_weight": 17, "get_costsensitive_class": 17, "get_costsensitive_num_cost": 17, "get_costsensitive_cost": 17, "get_costsensitive_partial_predict": 17, "get_costsensitive_predict": 17, "get_costsensitive_wap_valu": 17, "recomput": 17, "get_decision_scor": 17, "get_example_count": 17, "counter": [17, 18, 20, 21, 22, 24], "seen": [17, 22, 26], "get_feature_numb": 17, "get_ft_offset": 17, "bulk": 17, "get_multiclass_label": 17, "get_multiclass_weight": 17, "get_multilabel_label": 17, "get_multilabel_predict": 17, "get_pdf": 17, "get_prob": 17, "get_scalar": 17, "get_simplelabel_initi": 17, "baselin": [17, 26, 27], "get_simplelabel_label": 17, "get_simplelabel_weight": 17, "get_slates_act": 17, "get_slates_cost": 17, "get_slates_label": 17, "get_slates_num_prob": 17, "get_slates_prob": 17, "get_slates_slot_id": 17, "get_slates_typ": 17, "get_slates_weight": 17, "get_topic_predict": 17, "lda": [17, 18], "topic": [17, 18], "get_total_sum_feat_sq": 17, "num_namespac": 17, "iff": 17, "off": [17, 22, 25], "push_feature_dict": 17, "push_feature_list": 17, "arg5": 17, "set_test_onli": 17, "compat": 18, "sklearn_vw": 18, "model_select": [18, 28], "train_test_split": [18, 28], "vwclassifi": 18, "make_hastie_10_2": 18, "n_sampl": 18, "10000": 18, "random_st": [18, 19], "astyp": [18, 19], "float32": 18, "x_train": 18, "x_test": 18, "y_train": 18, "y_test": 18, "test_siz": [18, 28], "256": [18, 27], "fit": [18, 22, 27], "y_pred": 18, "util": [18, 26, 27], "integr": 18, "vowpal": [18, 20, 24], "wabbit": [18, 20, 24], "scikit": 18, "linearclassifiermixin": 18, "logisticregress": 18, "convert_to_vw": 18, "convert_label": 18, "strict_pars": 18, "learning_r": 18, "power_t": [18, 20, 21, 22, 24, 30], "decay_learning_r": 18, "initial_t": [18, 20, 21, 22, 24], "feature_mask": 18, "initial_weight": 18, "random_weight": 18, "normal_weight": 18, "truncated_normal_weight": 18, "sparse_weight": 18, "input_feature_regular": 18, "random_se": 18, "hash_se": 18, "ignore_linear": 18, "redefin": [18, 19], "bit_precis": 18, "noconst": [18, 22], "ngram": 18, "feature_limit": 18, "affix": 18, "spell": 18, "dictionary_path": 18, "permut": 18, "leave_duplicate_interact": 18, "cubic": [18, 22], "testonli": 18, "holdout_period": [18, 22], "holdout_aft": 18, "early_termin": 18, "initial_pass_length": 18, "min_predict": 18, "max_predict": 18, "sort_featur": 18, "quantile_tau": 18, "l1": [18, 19], "no_bias_regular": 18, "named_label": [18, 20], "final_regressor": [18, 20, 21, 24], "invert_hash": 18, "save_resum": 18, "output_feature_regularizer_binari": 18, "output_feature_regularizer_text": 18, "oaa": [18, 20, 28], "ect": 18, "csoaa": [18, 24], "wap": 18, "nn": 18, "inpass": 18, "multitask": 18, "dropout": 18, "meanfield": 18, "conjugate_gradi": 18, "bfg": 18, "hessian_on": 18, "mem": 18, "termin": 18, "lda_alpha": 18, "lda_rho": 18, "lda_d": 18, "lda_epsilon": 18, "minibatch": 18, "svrg": 18, "stage_s": 18, "ftrl": 18, "coin": [18, 26, 27], "pistol": 18, "ftrl_alpha": 18, "ftrl_beta": 18, "ksvm": 18, "kernel": 18, "bandwidth": [18, 27], "degre": [18, 19, 27], "sgd": 18, "adapt": [18, 22], "invari": [18, 22], "normal": [18, 19, 22, 24, 30], "link": [18, 30], "stage_poli": 18, "sched_expon": 18, "batch_sz": 18, "batch_sz_no_doubl": 18, "lrq": [18, 22], "lrqdropout": 18, "lrqfa": 18, "cach": [18, 20, 21, 24], "cache_fil": [18, 22], "kill_cach": 18, "baseestim": 18, "estim": [18, 24], "happi": 18, "flag": [18, 24], "size": [18, 19], "ring": 18, "throw": 18, "malform": 18, "power": [18, 19, 27], "regressor": [18, 22, 25], "determin": [18, 24], "truncat": 18, "spars": [18, 26], "datastructur": 18, "regular": 18, "disgnost": 18, "progress": [18, 19, 22, 24], "term": [18, 25, 27], "shall": 18, "wildcard": 18, "tabl": [18, 20, 26, 27], "gram": 18, "fn": 18, "conjunct": 18, "limit": [18, 25], "prefix": 18, "suffix": 18, "2a": 18, "3b": 18, "char": 18, "directori": 18, "env": 18, "path": [18, 19], "combin": [18, 19, 24, 27, 30], "ba": 18, "printabl": 18, "period": [18, 22, 24], "toler": 18, "decreas": [18, 19], "earli": 18, "largest": 18, "turn": [18, 22, 25, 26, 27], "disregard": 18, "lead": [18, 24, 25, 27], "smaller": [18, 27], "classic": 18, "hing": 18, "logist": 18, "quantil": [18, 19], "tau": 18, "l_1": 18, "l_2": 18, "comma": [18, 20], "sep": 18, "punc": 18, "human": 18, "computation": 18, "expens": 18, "state": [18, 22], "resum": 18, "reset": 18, "warmstart": 18, "oaa_subsampl": 18, "subsampl": 18, "tournament": 18, "sigmoid": 18, "forward": 18, "neural": 18, "network": 18, "hidden": 18, "unit": 18, "layer": [18, 24], "conjug": 18, "gradient": [18, 22], "optim": [18, 22, 25, 26, 27], "bgf": 18, "memori": [18, 22], "threshold": 18, "prior": [18, 25], "sparsiti": 18, "converg": [18, 22], "stream": 18, "stochast": 18, "varianc": 18, "stage": 18, "proxim": 18, "leader": 18, "bet": 18, "alpha": [18, 19], "beta": 18, "svm": 18, "rbf": 18, "poli": 18, "descent": 18, "adax": 18, "2x": 18, "awar": 18, "glf1": 18, "stagewis": 18, "polynomi": 18, "expon": 18, "quantiti": 18, "multipli": [18, 26, 27], "batch": 18, "doubl": 18, "low": [18, 22], "rank": [18, 22], "sample_weight": 18, "shape": 18, "n_featur": 18, "get_coef": 18, "coeffici": 18, "get_intercept": 18, "intercept": 18, "get_param": 18, "deep": 18, "full": [18, 19, 24], "get_vw": 18, "n_class": 18, "set_coef": 18, "coef": 18, "set_param": 18, "destroi": 18, "recreat": 18, "remain": [18, 25], "vw_": 18, "vwmulticlassifi": 18, "logit": 18, "assumpt": [18, 30], "classes_": 18, "coef_": 18, "decision_funct": 18, "confid": 18, "sign": 18, "hyperplan": 18, "array_lik": 18, "predict_proba": 18, "multiclassifi": 18, "estimator_": 18, "20": [18, 19, 25, 27], "38924146": 18, "30537927": 18, "40661219": 18, "29669389": 18, "52335149": 18, "23832427": 18, "52696788": 18, "23651604": 18, "65430814": 18, "17284594": 18, "61224216": 18, "19387889": 18, "vwregressor": 18, "regressormixin": 18, "tovw": 18, "feature_extract": 18, "hashingvector": 18, "cat": [18, 20, 21, 27], "dog": 18, "catdog": 18, "hv": 18, "fit_transform": 18, "300839": 18, "980517": 18, "thank": [19, 24], "etiennekintzl": 19, "contribut": [19, 24], "vwlogpars": 19, "concentr": 19, "particul": 19, "matter": [19, 20, 24], "pm": 19, "atmospher": 19, "chines": 19, "citi": 19, "19": 19, "datetim": 19, "167": 19, "358": 19, "detail": [19, 20, 21, 24, 25, 29], "uci": 19, "repositori": 19, "archiv": 19, "ic": 19, "edu": 19, "ml": 19, "pm2": 19, "five": [19, 22, 25], "academ": 19, "paper": [19, 25], "liang": 19, "xuan": 19, "et": 19, "al": 19, "reliabl": [19, 22, 24], "air": 19, "qualiti": [19, 25], "assess": 19, "beij": 19, "pollut": 19, "sever": [19, 24], "weather": 19, "apec": 19, "winter": 19, "heat": 19, "download": [19, 20], "url": 19, "databas": 19, "00394": 19, "fivecitiepmdata": 19, "rar": 19, "download_data": 19, "folder": 19, "variabl": [19, 24], "data_fold": 19, "pm_data": 19, "develop": 19, "older": 19, "cell": 19, "section": [19, 20, 22, 25], "seaborn": 19, "sn": 19, "file_path_or_list": 19, "isinst": 19, "fname": 19, "dictionnari": 19, "table_lst": 19, "param": 19, "inside_t": 19, "after_t": 19, "_parse_vw_row": 19, "_make_output_df": 19, "_cast_str": 19, "cast": 19, "is_integ": 19, "lst": 19, "first_row": 19, "second_row": 19, "zip": 19, "appropri": 19, "int_col": 19, "example_count": 19, "current_featur": 19, "float_col": 19, "drop": [19, 22, 28], "param_nam": 19, "maxsplit": 19, "dest_dir": 19, "io": 19, "bytesio": 19, "rarfil": 19, "url_pm_citi": 19, "bcontent": 19, "rf": 19, "repr": 19, "extractal": 19, "import_data": 19, "folder_path": 19, "verbos": 19, "df_lst": 19, "listdir": 19, "fpath": 19, "city_nam": 19, "sub": 19, "repl": 19, "df_citi": 19, "read_csv": 19, "df_city_clean": 19, "No": [19, 20, 25], "pm_u": 19, "post": 19, "dropna": 19, "subset": 19, "concat": 19, "frac": 19, "123": 19, "shuffl": 19, "reset_index": 19, "inspect": 19, "get_feature_nam": 19, "cat_nam": 19, "get_cat_feature_nam": 19, "num_nam": 19, "select_dtyp": 19, "tolist": 19, "unique_values_cat": 19, "unique_valu": 19, "graphic": 19, "suptitle_fonts": 19, "suptitle_fontweight": 19, "bold": 19, "title_fonts": 19, "isdir": 19, "head": [19, 25, 26, 27, 28], "obviou": 19, "ug": 19, "dewp": 19, "dew": 19, "celsiu": [19, 27], "temp": 19, "temperatur": [19, 27], "humi": 19, "humid": 19, "pre": [19, 22], "pressur": 19, "hpa": 19, "cbwd": 19, "wind": 19, "iw": 19, "precipit": 19, "hourli": 19, "mm": 19, "iprec": 19, "dtype": 19, "year": [19, 21, 22, 29], "month": 19, "hour": 19, "season": [19, 27], "to_cat_col": 19, "nan": 19, "standard": [19, 22, 24], "log_pm": 19, "std": 19, "95": 19, "corr": 19, "melt": 19, "id_var": 19, "value_nam": 19, "triangular": 19, "almost": 19, "perfectli": 19, "inplac": 19, "reli": 19, "upon": [19, 30], "illustr": 19, "present": [19, 22], "feature_valu": 19, "wherea": [19, 26], "nice": 19, "behind": [19, 24], "scene": 19, "special": [19, 22], "symbol": 19, "howev": [19, 24, 27], "column_not_in_df": 19, "subsect": 19, "middl": 19, "easili": 19, "log_pars": 19, "df_iter": 19, "summary_metr": 19, "instantan": 19, "scatter_var": 19, "average_loss": 19, "since_last": 19, "relplot": 19, "col_wrap": 19, "facet_kw": 19, "sharei": 19, "sharex": 19, "scatter": 19, "height": [19, 22], "fig": [19, 27], "suptitl": [19, 27], "fontweight": 19, "set_titl": [19, 27], "col_nam": 19, "tight_layout": 19, "50": [19, 20, 22], "000th": 19, "start_idx": 19, "50_000": 19, "distr_var": 19, "current_label": 19, "current_predict": 19, "example_weight": 19, "displot": 19, "dodg": 19, "hue": 19, "60": 19, "common_bin": 19, "05": [19, 21, 22, 29, 30], "substanti": 19, "offer": [19, 25], "ax1": 19, "ax2": 19, "ncol": 19, "scatterplot": 19, "ax": [19, 27], "max_rang": 19, "99": 19, "set_xlim": 19, "set_ylim": [19, 27], "range_x": 19, "min": [19, 27], "linestyl": 19, "color": [19, 22], "red": [19, 22], "linewidth": 19, "histogram": 19, "histplot": 19, "tend": 19, "undervalu": 19, "skew": 19, "weights_df": 19, "vw_feature_nam": 19, "is_cat": 19, "zfill": 19, "sort_valu": 19, "catplot": 19, "bar": [19, 22], "horizont": 19, "flat": [19, 27], "axhlin": 19, "grai": 19, "higher": [19, 22, 26, 27], "orient": 19, "calm": 19, "cv": 19, "chengdu": 19, "21": [19, 24], "23": [19, 21, 22, 24, 29], "oddli": 19, "north": 19, "2015": 19, "noon": 19, "guangzhou": 19, "shanghai": 19, "barplot": 19, "set_xticklabel": 19, "get_xticklabel": 19, "explain": [19, 20, 22, 24], "hist": 19, "40": 19, "decid": [19, 26, 27, 30], "datetime_featur": 19, "ns_datetim": 19, "datetime_n": 19, "ns_citi": 19, "city_n": 19, "weather_featur": 19, "ns_weather": 19, "weather_n": 19, "converter_advanc": 19, "tfeatur": 19, "examples_advanc": 19, "model_advanc": 19, "exponenti": [19, 22], "params_advanc": 19, "df_iter_advanc": 19, "metrics_advanc": 19, "error_advanc": 19, "ax3": 19, "ax4": 19, "nrow": 19, "iloc": 19, "orang": 19, "loss_typ": 19, "n_iter": 19, "10_000": 19, "df_loss": 19, "roll": 19, "loss_last_it": 19, "tail": [19, 26, 27], "pct_diff_loss": 19, "025": 19, "\u03b4": 19, "2f": [19, 27], "13": 19, "rotat": [19, 27], "improv": [19, 26, 27], "000": 19, "iri": 20, "overview": [20, 22], "introduc": [20, 21, 22, 25], "understand": [20, 21, 22, 24, 25, 27, 29], "instal": [20, 21, 22, 29], "plant": 20, "speci": 20, "internet": 20, "wget": 20, "9203605": 20, "sepal": 20, "width": 20, "petal": 20, "setosa": 20, "deeper": 20, "wikipedia": 20, "csv_separ": 20, "csv_header": 20, "_tag": 20, "_label": 20, "csv_ns_valu": 20, "versicolor": 20, "virginica": 20, "header": 20, "ratio": 20, "namespace1": 20, "ratio1": 20, "namespace2": 20, "ratio2": 20, "status": [20, 21], "reinforc": [20, 21, 22, 24, 25, 29], "datafil": [20, 21, 22, 24], "num": [20, 21, 22, 24], "sourc": [20, 21, 24], "gd": [20, 24], "scorer": [20, 24], "averag": [20, 21, 22, 24, 25, 30], "000000": [20, 21, 22, 24], "16": [20, 24, 27], "031250": 20, "062500": 20, "64": [20, 27], "info": 20, "039062": 20, "046875": 20, "128": [20, 27], "150": 20, "033333": 20, "750": 20, "Then": [20, 22, 24], "shorter": 20, "copi": [20, 21, 22], "csv_no_file_head": 20, "txt": [20, 21], "asid": 20, "unknown": [20, 21], "kindli": 20, "quick": [21, 22, 29], "introduct": [21, 22, 26, 29], "roof": [21, 22, 29], "price": [21, 22, 29], "sqft": [21, 22, 29], "25": [21, 22, 24, 27, 29], "ag": [21, 22, 29], "2006": [21, 22, 29], "35": [21, 22, 29, 30], "1976": [21, 22, 29], "53": [21, 22, 29], "87": [21, 22, 29], "1924": [21, 22, 29], "unfamiliar": 21, "techniqu": [21, 29], "With": [21, 30], "0000": [21, 22], "500000": [21, 22, 24], "666667": [21, 22], "333333": 21, "222222": 21, "46": [21, 29], "tvowpal": 21, "workflow": 22, "manag": 22, "house_dataset": 22, "second_hous": 22, "third_hous": 22, "unless": 22, "respect": 22, "implicit": 22, "relat": [22, 30], "numeric_valu": 22, "impli": 22, "twice": 22, "come": [22, 24], "straightforward": 22, "sometim": 22, "absolut": [22, 27], "750000": [22, 24], "variou": [22, 25], "ouput": 22, "adjust": [22, 27], "noisi": 22, "massiv": 22, "down": 22, "too": [22, 24, 27], "high": [22, 26, 27], "risk": 22, "wors": 22, "often": [22, 30], "minimax": 22, "fundament": 22, "benefit": 22, "adversari": 22, "who": 22, "rule": 22, "game": 22, "react": [22, 24], "quickli": 22, "typic": [22, 24, 25], "veri": 22, "aggress": 22, "plausibli": 22, "iid": 22, "handl": [22, 26], "greatli": 22, "experi": [22, 25], "overrid": 22, "newer": 22, "highli": 22, "Or": 22, "wish": [22, 24], "altern": 22, "stdin": 22, "tcp": 22, "socket": 22, "critic": 22, "deviat": [22, 24], "success": 22, "printout": 22, "amount": [22, 30], "great": 22, "debug": 22, "backoff": 22, "handi": 22, "wrong": 22, "overfit": 22, "589385": 22, "531424": 22, "2508": 22, "378923": 22, "194769": 22, "8308": 22, "184476": 22, "002182": 22, "31": 22, "9975": 22, "090774": 22, "47": 22, "63": 22, "reach": 22, "unsurpris": 22, "reason": 22, "held": 22, "stdout": [22, 29], "dev": 22, "appear": 22, "primari": 22, "increment": [22, 27], "went": 22, "common": [22, 30], "obvious": 22, "229902": 22, "162853": 22, "165201": 22, "116060": 22, "882655": 22, "2592": 22, "453833": 22, "98": 22, "05905": 22, "15882": 22, "entri": 22, "fly": 22, "xy": 22, "cross": 22, "xyz": 22, "xyn": 22, "belong": 22, "again": [22, 24, 26], "advantag": 22, "collid": 22, "easi": [22, 24, 26, 27], "value_in_rang": 22, "digit": 22, "1st": 22, "guess": 22, "2nd": 22, "fraction": 22, "ridicul": 22, "cluster": 22, "thousand": 22, "resourc": 22, "scenario": 22, "brows": [22, 24, 25], "maxpagel": 24, "op": 24, "area": 24, "research": [24, 25], "aim": [24, 26], "candid": 24, "deploi": 24, "varieti": [24, 26], "stai": [24, 25, 27], "plan": 24, "heavi": 24, "encourag": 24, "carefulli": 24, "generalis": 24, "neither": 24, "didn": [24, 26], "fill": 24, "fake": 24, "weren": 24, "therebi": 24, "simplest": 24, "dm": [24, 25], "suspect": 24, "bias": 24, "provabl": 24, "invers": [24, 25, 30], "propens": [24, 25, 30], "ip": [24, 25, 30], "doubli": [24, 25], "robust": [24, 25], "dr": [24, 25], "greedi": [24, 25], "tackl": 24, "tradeoff": 24, "explore_ev": 24, "oldest": 24, "worri": 24, "toi": 24, "user_ag": 24, "55": 24, "56": 24, "27": 24, "36": 24, "think": [24, 26, 27], "unseen": 24, "fresher": 24, "70": [24, 26], "30": [24, 27], "dat": [24, 25], "worth": 24, "aren": 24, "untaken": 24, "round": 24, "known": [24, 25], "arm": [24, 30], "fact": 24, "serv": [24, 27], "dual": 24, "optimis": 24, "cb_type": [24, 25], "feel": 24, "disabl": 24, "report": 24, "calcul": 24, "discourag": 24, "unsur": 24, "suggest": 24, "complain": 24, "mix": 24, "ground": 24, "divid": 24, "625": 24, "littl": [24, 26, 27], "principl": 24, "gridsearch": 24, "hyperparamet": 24, "beforehand": 24, "rich": [24, 25], "adf": 24, "endpoint": 24, "particularli": 24, "slightli": [24, 27], "constantli": 24, "evolv": 24, "find": [24, 25], "fashion": 24, "leverag": 24, "pv": 24, "elsewher": 24, "john": 24, "langford": 24, "talk": 24, "obtain": 24, "416667": 24, "48": 24, "omit": 24, "altogeth": 24, "realis": 24, "6667": 24, "outsid": 24, "chosen": [24, 25, 26, 27], "feature_a": 24, "feature_b": 24, "written": 24, "feature_c": 24, "agre": 24, "disagre": 24, "number_of_arm": 24, "501957": 24, "prevent": 24, "mistak": 24, "cb_alg": 24, "cc": 24, "161": 24, "knowledg": 25, "repeatedli": [25, 27], "aid": 25, "dynam": 25, "environ": 25, "rapidli": [25, 26], "hypothet": [25, 26, 27], "app": 25, "visit": [25, 26, 30], "geoloc": 25, "websit": [25, 26], "cloud": 25, "mab": 25, "arriv": [25, 26], "locat": [25, 29], "devic": 25, "engag": [25, 26], "wait": 25, "reboot": 25, "unrespons": 25, "hardwar": 25, "spec": 25, "sku": 25, "failur": 25, "downtim": 25, "highest": 25, "parlanc": 25, "someon": 25, "act": 25, "\u03c0": 25, "mtr": 25, "focal": 25, "effici": 25, "bake": 25, "bag": 25, "softmax": 25, "compon": [25, 26, 27], "receiv": [25, 26, 27, 30], "ahead": 25, "semant": 25, "number_of_act": 25, "uniformli": [25, 26, 27], "theoret": 25, "unlik": 25, "divers": 25, "precis": 25, "signal": [25, 30], "s_1": 25, "s_2": 25, "proport": 25, "train_adf": 25, "uniform": [25, 27], "infin": 25, "excel": 25, "knob": 25, "uncertainti": 25, "frame": 25, "diagnost": [25, 29], "learn_exampl": 25, "review": 25, "learnt": 26, "site": 26, "quantifi": [26, 27], "visitor": 26, "therefor": [26, 27], "chees": 26, "profil": [26, 27], "tri": 26, "dens": [26, 27], "feedback": [26, 27], "align": [26, 27], "mass": 26, "incorpor": [26, 27], "strategi": [26, 27], "likelihood": 26, "chanc": 26, "shown": 26, "reaction": [26, 27], "toss": [26, 27], "visual": [26, 27], "5000": [26, 27], "ser": 26, "ction": 26, "wouldn": 26, "effect": [26, 27, 30], "hover": [26, 27], "peopl": [26, 27], "swap": [26, 27], "halfwai": [26, 27], "get_cost_1": [26, 27], "get_cost_new1": 26, "previous": 26, "run_simulation_multiple_cost_funct": [26, 27], "start_count": [26, 27], "end_count": [26, 27], "web": [26, 30], "num_iterations_per_cost_func": [26, 27], "total_iter": [26, 27], "spike": 26, "get_cost_new2": 26, "showcas": [26, 27], "saw": 26, "respond": 26, "simplist": [26, 27], "dimension": 26, "thermostat": 27, "household": 27, "satisfact": 27, "tr": 27, "propos": 27, "agent": 27, "infinit": 27, "minimum": 27, "33": 27, "math": 27, "user_liked_temperatur": 27, "user_disliked_temperatur": 27, "cold": 27, "warm": 27, "steep": 27, "harsh": 27, "min_valu": 27, "max_valu": 27, "randomli": 27, "selected_temperatur": 27, "fab": 27, "29": 27, "22": 27, "cats_label": 27, "example_dict": 27, "chosen_temp": 27, "_label_ca": 27, "dump": 27, "densiti": 27, "predict_temperatur": 27, "choose_room": 27, "reward_r": 27, "hit": 27, "txt_ex": 27, "plot_reward_r": 27, "smart": 27, "smooth": 27, "That": 27, "bucket": 27, "leav": 27, "discret": 27, "radiu": 27, "discreet": 27, "centr": 27, "28": 27, "goe": 27, "center": [27, 30], "bucket_centr": 27, "bigger": 27, "chain_hash": 27, "plot_reward_sweep": 27, "n_action": 27, "n_bandwidth": 27, "na": 27, "hits_percentag": 27, "set_xlabel": 27, "set_ylabel": 27, "04": 27, "va": 27, "vertic": 27, "set_figheight": 27, "set_figwidth": 27, "hide": 27, "tick": 27, "label_out": 27, "2048": 27, "grow": 27, "coarser": 27, "discretizaton": 27, "On": 27, "combinaiton": 27, "512": 27, "1024": 27, "bd": 27, "rr": 27, "callback": 27, "flush_figur": 27, "0x7f7b77cd3490": 27, "post_execut": 27, "hot": 27, "pickup": 27, "predicted_temeratur": 27, "get_smooth_cost": 27, "paramt": 27, "iris_dataset": 28, "load_iri": 28, "iris_datafram": 28, "training_data": 28, "testing_data": 28, "to_vw_format": 28, "idx": 28, "sepal_length_cm": 28, "sepal_width_cm": 28, "petal_length_cm": 28, "petal_width_cm": 28, "predicted_class": 28, "8333333333333334": 28, "train_exampl": 29, "least": 29, "jointli": 30, "layout": 30, "box": 30, "whole": 30, "cant": 30, "address": 30, "explos": 30, "tradit": 30, "untract": 30, "extens": 30, "akin": 30, "global": 30, "occas": 30, "job": 30, "interview": 30, "corpor": 30, "trade": 30, "cloth": 30, "torso": 30, "footwear": 30, "ocas": 30, "2500": 30, "shared_context": 30, "torso_item": 30, "tshirt": 30, "buttonupshirt": 30, "highvi": 30, "legs_item": 30, "workpant": 30, "formalp": 30, "short": 30, "feet_item": 30, "formalsho": 30, "runner": 30, "flipflop": 30, "boot": 30, "reflect": 30, "dificult": 30, "inject": 30, "nois": 30, "stddev": 30, "075": 30, "reward_funct": 30, "torso_index": 30, "legs_index": 30, "feet_index": 30, "torso_valu": 30, "legs_val": 30, "feet_valu": 30, "piec": 30, "generate_slates_text_format": 30, "feet": 30, "generate_slates_text_format_with_label": 30, "chosen_torso_index": 30, "chosen_torso_prob": 30, "chosen_legs_index": 30, "chosen_legs_prob": 30, "chosen_feet_index": 30, "chosen_feet_prob": 30, "slates_vw": 30, "sa": 30, "explan": 30, "slates_reward": 30, "slates_predict": 30, "torso_prob": 30, "legs_prob": 30, "feet_prob": 30, "generate_combin": 30, "cb_vw": 30, "aa": 30, "au": 30, "aau": 30, "cb_reward": 30, "cb_predict": 30, "chosen_index": 30, "expand": 30, "regret": 30, "further": 30, "public": 30}, "objects": {"": [[14, 0, 0, "-", "vowpalwabbit"]], "vowpalwabbit": [[14, 1, 1, "", "AbstractLabel"], [14, 1, 1, "", "ActionScore"], [14, 1, 1, "", "CBContinuousLabel"], [14, 1, 1, "", "CBContinuousLabelElement"], [14, 1, 1, "", "CBEvalLabel"], [14, 1, 1, "", "CBLabel"], [14, 1, 1, "", "CBLabelElement"], [14, 1, 1, "", "CCBLabel"], [14, 1, 1, "", "CCBLabelType"], [14, 1, 1, "", "CCBSlotOutcome"], [14, 1, 1, "", "CostSensitiveElement"], [14, 1, 1, "", "CostSensitiveLabel"], [14, 1, 1, "", "Example"], [14, 1, 1, "", "ExampleNamespace"], [14, 1, 1, "", "LabelType"], [14, 1, 1, "", "MulticlassLabel"], [14, 1, 1, "", "MulticlassProbabilitiesLabel"], [14, 1, 1, "", "MultilabelLabel"], [14, 1, 1, "", "NamespaceId"], [14, 1, 1, "", "PredictionType"], [14, 1, 1, "", "SimpleLabel"], [14, 1, 1, "", "SlatesLabel"], [14, 1, 1, "", "SlatesLabelType"], [14, 1, 1, "", "Workspace"], [15, 0, 0, "-", "dftovw"], [16, 0, 0, "-", "pyvw"], [18, 0, 0, "-", "sklearn"]], "vowpalwabbit.AbstractLabel": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "from_example"]], "vowpalwabbit.ActionScore": [[14, 2, 1, "", "__init__"]], "vowpalwabbit.CBContinuousLabel": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "from_example"]], "vowpalwabbit.CBContinuousLabelElement": [[14, 2, 1, "", "__init__"]], "vowpalwabbit.CBEvalLabel": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "from_example"]], "vowpalwabbit.CBLabel": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "from_example"]], "vowpalwabbit.CBLabelElement": [[14, 2, 1, "", "__init__"]], "vowpalwabbit.CCBLabel": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "from_example"]], "vowpalwabbit.CCBLabelType": [[14, 3, 1, "", "ACTION"], [14, 3, 1, "", "SHARED"], [14, 3, 1, "", "SLOT"], [14, 3, 1, "", "UNSET"]], "vowpalwabbit.CCBSlotOutcome": [[14, 2, 1, "", "__init__"]], "vowpalwabbit.CostSensitiveElement": [[14, 2, 1, "", "__init__"]], "vowpalwabbit.CostSensitiveLabel": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "from_example"]], "vowpalwabbit.Example": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "ensure_namespace_exists"], [14, 2, 1, "", "feature"], [14, 2, 1, "", "feature_weight"], [14, 3, 1, "", "finished"], [14, 2, 1, "", "get_feature_id"], [14, 2, 1, "", "get_label"], [14, 2, 1, "", "get_ns"], [14, 2, 1, "", "get_prediction"], [14, 2, 1, "", "iter_features"], [14, 3, 1, "", "labelType"], [14, 2, 1, "", "learn"], [14, 2, 1, "", "num_features_in"], [14, 2, 1, "", "pop_feature"], [14, 2, 1, "", "pop_namespace"], [14, 2, 1, "", "push_feature"], [14, 2, 1, "", "push_features"], [14, 2, 1, "", "push_hashed_feature"], [14, 2, 1, "", "push_namespace"], [14, 2, 1, "", "set_label_string"], [14, 3, 1, "", "setup_done"], [14, 2, 1, "", "setup_example"], [14, 3, 1, "", "stride"], [14, 2, 1, "", "sum_feat_sq"], [14, 2, 1, "", "unsetup_example"], [14, 3, 1, "", "vw"]], "vowpalwabbit.ExampleNamespace": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "iter_features"], [14, 2, 1, "", "num_features_in"], [14, 2, 1, "", "pop_feature"], [14, 2, 1, "", "push_feature"], [14, 2, 1, "", "push_features"]], "vowpalwabbit.LabelType": [[14, 3, 1, "", "CONDITIONAL_CONTEXTUAL_BANDIT"], [14, 3, 1, "", "CONTEXTUAL_BANDIT"], [14, 3, 1, "", "CONTEXTUAL_BANDIT_EVAL"], [14, 3, 1, "", "CONTINUOUS"], [14, 3, 1, "", "COST_SENSITIVE"], [14, 3, 1, "", "MULTICLASS"], [14, 3, 1, "", "MULTILABEL"], [14, 3, 1, "", "SIMPLE"], [14, 3, 1, "", "SLATES"]], "vowpalwabbit.MulticlassLabel": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "from_example"]], "vowpalwabbit.MulticlassProbabilitiesLabel": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "from_example"]], "vowpalwabbit.MultilabelLabel": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "from_example"]], "vowpalwabbit.NamespaceId": [[14, 2, 1, "", "__init__"], [14, 3, 1, "", "id"], [14, 3, 1, "", "ns"], [14, 3, 1, "", "ord_ns"]], "vowpalwabbit.PredictionType": [[14, 3, 1, "", "ACTION_PDF_VALUE"], [14, 3, 1, "", "ACTION_PROBS"], [14, 3, 1, "", "ACTION_SCORES"], [14, 3, 1, "", "ACTIVE_MULTICLASS"], [14, 3, 1, "", "DECISION_SCORES"], [14, 3, 1, "", "MULTICLASS"], [14, 3, 1, "", "MULTICLASSPROBS"], [14, 3, 1, "", "MULTILABELS"], [14, 3, 1, "", "NOPRED"], [14, 3, 1, "", "PDF"], [14, 3, 1, "", "PROB"], [14, 3, 1, "", "SCALAR"], [14, 3, 1, "", "SCALARS"]], "vowpalwabbit.SimpleLabel": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "from_example"]], "vowpalwabbit.SlatesLabel": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "from_example"]], "vowpalwabbit.SlatesLabelType": [[14, 3, 1, "", "ACTION"], [14, 3, 1, "", "SHARED"], [14, 3, 1, "", "SLOT"], [14, 3, 1, "", "UNSET"]], "vowpalwabbit.Workspace": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "example"], [14, 2, 1, "", "finish"], [14, 2, 1, "", "finish_example"], [14, 3, 1, "", "finished"], [14, 2, 1, "", "get_config"], [14, 2, 1, "", "get_label_type"], [14, 2, 1, "", "get_log"], [14, 2, 1, "", "get_prediction_type"], [14, 2, 1, "", "get_weight"], [14, 2, 1, "", "get_weight_from_name"], [14, 3, 1, "", "init"], [14, 2, 1, "", "init_search_task"], [14, 2, 1, "", "learn"], [14, 2, 1, "", "num_weights"], [14, 2, 1, "", "parse"], [14, 3, 1, "", "parser_ran"], [14, 2, 1, "", "predict"], [14, 2, 1, "", "save"]], "vowpalwabbit.dftovw": [[15, 1, 1, "", "ContextualbanditLabel"], [15, 1, 1, "", "DFtoVW"], [15, 1, 1, "", "Feature"], [15, 1, 1, "", "MultiLabel"], [15, 1, 1, "", "MulticlassLabel"], [15, 1, 1, "", "Namespace"], [15, 1, 1, "", "SimpleLabel"]], "vowpalwabbit.dftovw.ContextualbanditLabel": [[15, 2, 1, "", "__init__"], [15, 3, 1, "", "action"], [15, 3, 1, "", "cost"], [15, 3, 1, "", "probability"], [15, 2, 1, "", "process"]], "vowpalwabbit.dftovw.DFtoVW": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "check_columns_type_and_values"], [15, 2, 1, "", "check_features_type"], [15, 2, 1, "", "check_instance_columns"], [15, 2, 1, "", "check_label_type"], [15, 2, 1, "", "check_missing_columns_df"], [15, 2, 1, "", "check_namespaces_type"], [15, 2, 1, "", "convert_df"], [15, 2, 1, "", "empty_col"], [15, 2, 1, "", "from_colnames"], [15, 2, 1, "", "from_column_names"], [15, 2, 1, "", "process_features"], [15, 2, 1, "", "process_label_and_tag"], [15, 2, 1, "", "raise_missing_col_error"], [15, 2, 1, "", "set_namespaces"]], "vowpalwabbit.dftovw.Feature": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "process"], [15, 3, 1, "", "value"]], "vowpalwabbit.dftovw.MultiLabel": [[15, 2, 1, "", "__init__"], [15, 3, 1, "", "label"], [15, 2, 1, "", "process"]], "vowpalwabbit.dftovw.MulticlassLabel": [[15, 2, 1, "", "__init__"], [15, 3, 1, "", "label"], [15, 2, 1, "", "process"], [15, 3, 1, "", "weight"]], "vowpalwabbit.dftovw.Namespace": [[15, 2, 1, "", "__init__"], [15, 2, 1, "", "check_attributes_type"], [15, 3, 1, "", "expected_type"], [15, 2, 1, "", "process"]], "vowpalwabbit.dftovw.SimpleLabel": [[15, 2, 1, "", "__init__"], [15, 3, 1, "", "label"], [15, 2, 1, "", "process"], [15, 3, 1, "", "weight"]], "vowpalwabbit.pyvw": [[16, 1, 1, "", "AbstractLabel"], [16, 1, 1, "", "ActionScore"], [16, 1, 1, "", "CBContinuousLabel"], [16, 1, 1, "", "CBContinuousLabelElement"], [16, 1, 1, "", "CBEvalLabel"], [16, 1, 1, "", "CBLabel"], [16, 1, 1, "", "CBLabelElement"], [16, 1, 1, "", "CCBLabel"], [16, 1, 1, "", "CCBLabelType"], [16, 1, 1, "", "CCBSlotOutcome"], [16, 1, 1, "", "CostSensitiveElement"], [16, 1, 1, "", "CostSensitiveLabel"], [16, 1, 1, "", "Example"], [16, 1, 1, "", "ExampleNamespace"], [16, 1, 1, "", "LabelType"], [16, 1, 1, "", "MulticlassLabel"], [16, 1, 1, "", "MulticlassProbabilitiesLabel"], [16, 1, 1, "", "MultilabelLabel"], [16, 1, 1, "", "NamespaceId"], [16, 1, 1, "", "PredictionType"], [16, 1, 1, "", "SearchTask"], [16, 1, 1, "", "SimpleLabel"], [16, 1, 1, "", "SlatesLabel"], [16, 1, 1, "", "SlatesLabelType"], [16, 1, 1, "", "VWOption"], [16, 1, 1, "", "Workspace"], [16, 1, 1, "", "abstract_label"], [16, 1, 1, "", "cbandits_label"], [16, 1, 1, "", "cost_sensitive_label"], [16, 1, 1, "", "example"], [16, 1, 1, "", "example_namespace"], [16, 5, 1, "", "get_all_vw_options"], [16, 5, 1, "", "get_label_class_from_enum"], [16, 5, 1, "", "get_prediction"], [16, 5, 1, "", "merge_models"], [16, 1, 1, "", "multiclass_label"], [16, 1, 1, "", "multiclass_probabilities_label"], [16, 1, 1, "", "namespace_id"], [16, 1, 1, "", "simple_label"], [16, 1, 1, "", "vw"]], "vowpalwabbit.pyvw.AbstractLabel": [[16, 2, 1, "", "__init__"], [16, 2, 1, "", "from_example"]], "vowpalwabbit.pyvw.ActionScore": [[16, 2, 1, "", "__init__"]], "vowpalwabbit.pyvw.CBContinuousLabel": [[16, 2, 1, "", "__init__"], [16, 2, 1, "", "from_example"]], "vowpalwabbit.pyvw.CBContinuousLabelElement": [[16, 2, 1, "", "__init__"]], "vowpalwabbit.pyvw.CBEvalLabel": [[16, 2, 1, "", "__init__"], [16, 2, 1, "", "from_example"]], "vowpalwabbit.pyvw.CBLabel": [[16, 2, 1, "", "__init__"], [16, 2, 1, "", "from_example"]], "vowpalwabbit.pyvw.CBLabelElement": [[16, 2, 1, "", "__init__"]], "vowpalwabbit.pyvw.CCBLabel": [[16, 2, 1, "", "__init__"], [16, 2, 1, "", "from_example"]], "vowpalwabbit.pyvw.CCBLabelType": [[16, 3, 1, "", "ACTION"], [16, 3, 1, "", "SHARED"], [16, 3, 1, "", "SLOT"], [16, 3, 1, "", "UNSET"]], "vowpalwabbit.pyvw.CCBSlotOutcome": [[16, 2, 1, "", "__init__"]], "vowpalwabbit.pyvw.CostSensitiveElement": [[16, 2, 1, "", "__init__"]], "vowpalwabbit.pyvw.CostSensitiveLabel": [[16, 2, 1, "", "__init__"], [16, 2, 1, "", "from_example"]], "vowpalwabbit.pyvw.Example": [[16, 2, 1, "", "__init__"], [16, 2, 1, "", "ensure_namespace_exists"], [16, 2, 1, "", "feature"], [16, 2, 1, "", "feature_weight"], [16, 3, 1, "", "finished"], [16, 2, 1, "", "get_feature_id"], [16, 2, 1, "", "get_label"], [16, 2, 1, "", "get_ns"], [16, 2, 1, "", "get_prediction"], [16, 2, 1, "", "iter_features"], [16, 3, 1, "", "labelType"], [16, 2, 1, "", "learn"], [16, 2, 1, "", "num_features_in"], [16, 2, 1, "", "pop_feature"], [16, 2, 1, "", "pop_namespace"], [16, 2, 1, "", "push_feature"], [16, 2, 1, "", "push_features"], [16, 2, 1, "", "push_hashed_feature"], [16, 2, 1, "", "push_namespace"], [16, 2, 1, "", "set_label_string"], [16, 3, 1, "", "setup_done"], [16, 2, 1, "", "setup_example"], [16, 3, 1, "", "stride"], [16, 2, 1, "", "sum_feat_sq"], [16, 2, 1, "", "unsetup_example"], [16, 3, 1, "", "vw"]], "vowpalwabbit.pyvw.ExampleNamespace": [[16, 2, 1, "", "__init__"], [16, 2, 1, "", "iter_features"], [16, 2, 1, "", "num_features_in"], [16, 2, 1, "", "pop_feature"], [16, 2, 1, "", "push_feature"], [16, 2, 1, "", "push_features"]], "vowpalwabbit.pyvw.LabelType": [[16, 3, 1, "", "CONDITIONAL_CONTEXTUAL_BANDIT"], [16, 3, 1, "", "CONTEXTUAL_BANDIT"], [16, 3, 1, "", "CONTEXTUAL_BANDIT_EVAL"], [16, 3, 1, "", "CONTINUOUS"], [16, 3, 1, "", "COST_SENSITIVE"], [16, 3, 1, "", "MULTICLASS"], [16, 3, 1, "", "MULTILABEL"], [16, 3, 1, "", "SIMPLE"], [16, 3, 1, "", "SLATES"]], "vowpalwabbit.pyvw.MulticlassLabel": [[16, 2, 1, "", "__init__"], [16, 2, 1, "", "from_example"]], "vowpalwabbit.pyvw.MulticlassProbabilitiesLabel": [[16, 2, 1, "", "__init__"], [16, 2, 1, "", "from_example"]], "vowpalwabbit.pyvw.MultilabelLabel": [[16, 2, 1, "", "__init__"], [16, 2, 1, "", "from_example"]], "vowpalwabbit.pyvw.NamespaceId": [[16, 2, 1, "", "__init__"], [16, 3, 1, "", "id"], [16, 3, 1, "", "ns"], [16, 3, 1, "", "ord_ns"]], "vowpalwabbit.pyvw.PredictionType": [[16, 3, 1, "", "ACTION_PDF_VALUE"], [16, 3, 1, "", "ACTION_PROBS"], [16, 3, 1, "", "ACTION_SCORES"], [16, 3, 1, "", "ACTIVE_MULTICLASS"], [16, 3, 1, "", "DECISION_SCORES"], [16, 3, 1, "", "MULTICLASS"], [16, 3, 1, "", "MULTICLASSPROBS"], [16, 3, 1, "", "MULTILABELS"], [16, 3, 1, "", "NOPRED"], [16, 3, 1, "", "PDF"], [16, 3, 1, "", "PROB"], [16, 3, 1, "", "SCALAR"], [16, 3, 1, "", "SCALARS"]], "vowpalwabbit.pyvw.SearchTask": [[16, 2, 1, "", "__init__"], [16, 2, 1, "", "example"], [16, 2, 1, "", "learn"], [16, 2, 1, "", "predict"]], "vowpalwabbit.pyvw.SimpleLabel": [[16, 2, 1, "", "__init__"], [16, 2, 1, "", "from_example"]], "vowpalwabbit.pyvw.SlatesLabel": [[16, 2, 1, "", "__init__"], [16, 2, 1, "", "from_example"]], "vowpalwabbit.pyvw.SlatesLabelType": [[16, 3, 1, "", "ACTION"], [16, 3, 1, "", "SHARED"], [16, 3, 1, "", "SLOT"], [16, 3, 1, "", "UNSET"]], "vowpalwabbit.pyvw.VWOption": [[16, 2, 1, "", "__init__"], [16, 4, 1, "", "allow_override"], [16, 4, 1, "", "default_value"], [16, 4, 1, "", "default_value_supplied"], [16, 4, 1, "", "experimental"], [16, 4, 1, "", "help_str"], [16, 2, 1, "", "is_flag"], [16, 4, 1, "", "keep"], [16, 4, 1, "", "name"], [16, 4, 1, "", "necessary"], [16, 4, 1, "", "short_name"], [16, 4, 1, "", "value"], [16, 4, 1, "", "value_supplied"]], "vowpalwabbit.pyvw.Workspace": [[16, 2, 1, "", "__init__"], [16, 2, 1, "", "example"], [16, 2, 1, "", "finish"], [16, 2, 1, "", "finish_example"], [16, 3, 1, "", "finished"], [16, 2, 1, "", "get_config"], [16, 2, 1, "", "get_label_type"], [16, 2, 1, "", "get_log"], [16, 2, 1, "", "get_prediction_type"], [16, 2, 1, "", "get_weight"], [16, 2, 1, "", "get_weight_from_name"], [16, 3, 1, "", "init"], [16, 2, 1, "", "init_search_task"], [16, 2, 1, "", "learn"], [16, 2, 1, "", "num_weights"], [16, 2, 1, "", "parse"], [16, 3, 1, "", "parser_ran"], [16, 2, 1, "", "predict"], [16, 2, 1, "", "save"]], "vowpalwabbit.pyvw.pylibvw": [[17, 1, 1, "", "example"], [17, 1, 1, "", "vw"]], "vowpalwabbit.pyvw.pylibvw.example": [[17, 2, 1, "", "__init__"], [17, 2, 1, "", "ensure_namespace_exists"], [17, 2, 1, "", "erase_namespace"], [17, 2, 1, "", "feature"], [17, 2, 1, "", "feature_weight"], [17, 2, 1, "", "get_action_pdf_value"], [17, 2, 1, "", "get_action_scores"], [17, 2, 1, "", "get_active_multiclass"], [17, 2, 1, "", "get_cb_continuous_class"], [17, 2, 1, "", "get_cb_continuous_cost"], [17, 2, 1, "", "get_cb_continuous_num_costs"], [17, 2, 1, "", "get_cb_continuous_pdf_value"], [17, 2, 1, "", "get_cb_eval_action"], [17, 2, 1, "", "get_cb_eval_class"], [17, 2, 1, "", "get_cb_eval_cost"], [17, 2, 1, "", "get_cb_eval_num_costs"], [17, 2, 1, "", "get_cb_eval_partial_prediction"], [17, 2, 1, "", "get_cb_eval_probability"], [17, 2, 1, "", "get_cb_eval_weight"], [17, 2, 1, "", "get_cbandits_class"], [17, 2, 1, "", "get_cbandits_cost"], [17, 2, 1, "", "get_cbandits_num_costs"], [17, 2, 1, "", "get_cbandits_partial_prediction"], [17, 2, 1, "", "get_cbandits_prediction"], [17, 2, 1, "", "get_cbandits_probability"], [17, 2, 1, "", "get_cbandits_weight"], [17, 2, 1, "", "get_ccb_action"], [17, 2, 1, "", "get_ccb_cost"], [17, 2, 1, "", "get_ccb_explicitly_included_actions"], [17, 2, 1, "", "get_ccb_has_outcome"], [17, 2, 1, "", "get_ccb_num_explicitly_included_actions"], [17, 2, 1, "", "get_ccb_num_probabilities"], [17, 2, 1, "", "get_ccb_probability"], [17, 2, 1, "", "get_ccb_type"], [17, 2, 1, "", "get_ccb_weight"], [17, 2, 1, "", "get_costsensitive_class"], [17, 2, 1, "", "get_costsensitive_cost"], [17, 2, 1, "", "get_costsensitive_num_costs"], [17, 2, 1, "", "get_costsensitive_partial_prediction"], [17, 2, 1, "", "get_costsensitive_prediction"], [17, 2, 1, "", "get_costsensitive_wap_value"], [17, 2, 1, "", "get_decision_scores"], [17, 2, 1, "", "get_example_counter"], [17, 2, 1, "", "get_feature_number"], [17, 2, 1, "", "get_ft_offset"], [17, 2, 1, "", "get_loss"], [17, 2, 1, "", "get_multiclass_label"], [17, 2, 1, "", "get_multiclass_prediction"], [17, 2, 1, "", "get_multiclass_weight"], [17, 2, 1, "", "get_multilabel_labels"], [17, 2, 1, "", "get_multilabel_predictions"], [17, 2, 1, "", "get_partial_prediction"], [17, 2, 1, "", "get_pdf"], [17, 2, 1, "", "get_prob"], [17, 2, 1, "", "get_scalars"], [17, 2, 1, "", "get_simplelabel_initial"], [17, 2, 1, "", "get_simplelabel_label"], [17, 2, 1, "", "get_simplelabel_prediction"], [17, 2, 1, "", "get_simplelabel_weight"], [17, 2, 1, "", "get_slates_action"], [17, 2, 1, "", "get_slates_cost"], [17, 2, 1, "", "get_slates_labeled"], [17, 2, 1, "", "get_slates_num_probabilities"], [17, 2, 1, "", "get_slates_probability"], [17, 2, 1, "", "get_slates_slot_id"], [17, 2, 1, "", "get_slates_type"], [17, 2, 1, "", "get_slates_weight"], [17, 2, 1, "", "get_tag"], [17, 2, 1, "", "get_topic_prediction"], [17, 2, 1, "", "get_total_sum_feat_sq"], [17, 2, 1, "", "get_updated_prediction"], [17, 2, 1, "", "namespace"], [17, 2, 1, "", "num_features_in"], [17, 2, 1, "", "num_namespaces"], [17, 2, 1, "", "pop_feature"], [17, 2, 1, "", "pop_namespace"], [17, 2, 1, "", "push_feature_dict"], [17, 2, 1, "", "push_feature_list"], [17, 2, 1, "", "push_hashed_feature"], [17, 2, 1, "", "push_namespace"], [17, 2, 1, "", "set_label_string"], [17, 2, 1, "", "set_test_only"], [17, 2, 1, "", "sum_feat_sq"]], "vowpalwabbit.pyvw.pylibvw.vw": [[17, 2, 1, "", "__init__"], [17, 2, 1, "", "audit_example"], [17, 2, 1, "", "finish"], [17, 2, 1, "", "get_arguments"], [17, 2, 1, "", "get_enabled_learners"], [17, 2, 1, "", "get_enabled_reductions"], [17, 2, 1, "", "get_holdout_sum_loss"], [17, 2, 1, "", "get_id"], [17, 2, 1, "", "get_learner_metrics"], [17, 2, 1, "", "get_options"], [17, 2, 1, "", "get_search_ptr"], [17, 2, 1, "", "get_stride"], [17, 2, 1, "", "get_sum_loss"], [17, 2, 1, "", "get_weight"], [17, 2, 1, "", "get_weighted_examples"], [17, 2, 1, "", "hash_feature"], [17, 2, 1, "", "hash_space"], [17, 2, 1, "", "json_weights"], [17, 3, 1, "", "lBinary"], [17, 3, 1, "", "lConditionalContextualBandit"], [17, 3, 1, "", "lContextualBandit"], [17, 3, 1, "", "lContextualBanditEval"], [17, 3, 1, "", "lContinuous"], [17, 3, 1, "", "lCostSensitive"], [17, 3, 1, "", "lDefault"], [17, 3, 1, "", "lMax"], [17, 3, 1, "", "lMulticlass"], [17, 3, 1, "", "lMultilabel"], [17, 3, 1, "", "lSimple"], [17, 3, 1, "", "lSlates"], [17, 2, 1, "", "learn"], [17, 2, 1, "", "learn_multi"], [17, 2, 1, "", "num_weights"], [17, 3, 1, "", "pACTION_PDF_VALUE"], [17, 3, 1, "", "pACTION_PROBS"], [17, 3, 1, "", "pACTION_SCORES"], [17, 3, 1, "", "pACTIVE_MULTICLASS"], [17, 3, 1, "", "pDECISION_SCORES"], [17, 3, 1, "", "pMULTICLASS"], [17, 3, 1, "", "pMULTICLASSPROBS"], [17, 3, 1, "", "pMULTILABELS"], [17, 3, 1, "", "pNOPRED"], [17, 3, 1, "", "pPDF"], [17, 3, 1, "", "pPROB"], [17, 3, 1, "", "pSCALAR"], [17, 3, 1, "", "pSCALARS"], [17, 2, 1, "", "predict"], [17, 2, 1, "", "predict_multi"], [17, 2, 1, "", "run_parser"], [17, 2, 1, "", "save"], [17, 2, 1, "", "set_weight"], [17, 2, 1, "", "setup_example"], [17, 3, 1, "", "tACTION"], [17, 3, 1, "", "tSHARED"], [17, 3, 1, "", "tSLOT"], [17, 3, 1, "", "tUNSET"], [17, 2, 1, "", "unsetup_example"]], "vowpalwabbit.sklearn": [[18, 1, 1, "", "LinearClassifierMixin"], [18, 1, 1, "", "VW"], [18, 1, 1, "", "VWClassifier"], [18, 1, 1, "", "VWMultiClassifier"], [18, 1, 1, "", "VWRegressor"], [18, 5, 1, "", "tovw"]], "vowpalwabbit.sklearn.LinearClassifierMixin": [[18, 2, 1, "", "__init__"]], "vowpalwabbit.sklearn.VW": [[18, 2, 1, "", "__init__"], [18, 3, 1, "", "convert_labels"], [18, 3, 1, "", "convert_to_vw"], [18, 2, 1, "", "fit"], [18, 2, 1, "", "get_coefs"], [18, 2, 1, "", "get_intercept"], [18, 2, 1, "", "get_params"], [18, 2, 1, "", "get_vw"], [18, 2, 1, "", "load"], [18, 2, 1, "", "predict"], [18, 2, 1, "", "save"], [18, 2, 1, "", "set_coefs"], [18, 2, 1, "", "set_params"], [18, 3, 1, "", "vw_"]], "vowpalwabbit.sklearn.VWClassifier": [[18, 2, 1, "", "__init__"], [18, 3, 1, "", "classes_"], [18, 3, 1, "", "coef_"], [18, 2, 1, "", "decision_function"], [18, 2, 1, "", "fit"], [18, 2, 1, "", "predict"], [18, 2, 1, "", "predict_proba"]], "vowpalwabbit.sklearn.VWMultiClassifier": [[18, 2, 1, "", "__init__"], [18, 3, 1, "", "classes_"], [18, 2, 1, "", "decision_function"], [18, 3, 1, "", "estimator_"], [18, 2, 1, "", "fit"], [18, 2, 1, "", "predict_proba"]], "vowpalwabbit.sklearn.VWRegressor": [[18, 2, 1, "", "__init__"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:property", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "titleterms": {"python": [0, 13, 25, 29], "basic": [0, 2, 21, 29], "contextu": [1, 25, 26, 27, 30], "bandit": [1, 25, 26, 27, 30], "experiment": 2, "test": [2, 20, 21], "model": [2, 10, 19, 20, 21, 22, 25], "vari": 2, "epsilon": 2, "valu": 2, "count": 2, "non": 2, "stationari": 2, "decai": [2, 22], "exampl": [3, 13, 14, 18, 30], "mini": 4, "vw": [4, 19, 24, 26], "poisson": 5, "regress": [5, 22], "predict": [6, 13, 19, 22], "comparison": [6, 30], "search": [7, 8, 9, 10], "covington": [7, 10], "sequenc": [8, 9], "ldf": [9, 10], "speech": 10, "tagger": 10, "remov": 10, "auto": 10, "featur": [10, 19, 25], "veri": 10, "silli": 10, "esqu": 10, "depend": 10, "pars": 10, "base": 10, "style": 10, "parser": 10, "A": 10, "simpl": 10, "word": 10, "align": 10, "vowpal": [11, 19, 21, 22, 25, 28, 29, 30], "wabbit": [11, 19, 21, 22, 25, 28, 29, 30], "api": 12, "refer": 12, "core": 12, "modul": [12, 14, 15, 18], "option": 12, "implement": 12, "intern": 12, "migrat": [12, 13], "guid": 12, "8": 13, "11": 13, "9": 13, "import": [13, 19], "pyvw": [13, 16, 17], "except": 13, "dftovw": [13, 15], "sklearn_vw": 13, "class": [13, 19], "name": 13, "get_predict": 13, "label": 13, "type": [13, 19], "get": [13, 26, 27, 29], "from": [13, 19], "an": [13, 24], "examplenamespac": 13, "push_featur": 13, "vowpalwabbit": [14, 15, 16, 17, 18, 19], "usag": [14, 18, 25], "content": [14, 15, 18, 26], "deprec": [15, 18], "alia": [15, 18], "pylibvw": 17, "sklearn": 18, "todo": 18, "panda": 19, "datafram": 19, "format": [19, 24, 25, 26, 28, 30], "convers": 19, "credit": [19, 24], "tutori": [19, 23, 25], "outlin": 19, "requir": 19, "packag": 19, "function": [19, 22, 27, 30], "definit": 19, "constant": 19, "1": [19, 26, 27], "data": [19, 22, 24, 25], "2": [19, 26, 27], "3": [19, 26, 27], "highli": 19, "correl": 19, "train": [19, 20, 21, 24, 29], "first": 19, "convert": 19, "input": [19, 25, 28], "defin": 19, "visual": 19, "": 19, "output": [19, 22], "retriev": 19, "paramet": [19, 20, 27], "loss": 19, "summari": [19, 26, 30], "metric": 19, "log": 19, "averag": 19, "distribut": 19, "select": 19, "4": 19, "learnt": 19, "weight": 19, "more": [19, 21, 22, 24, 25, 29], "complex": 19, "us": [19, 24], "transform": 19, "target": 19, "namespac": 19, "interact": [19, 26], "appli": 19, "logarithm": 19, "5": 19, "compar": 19, "perform": 19, "command": [20, 21, 22, 24], "line": [20, 21, 22, 24], "csv": 20, "dataset": [20, 21, 22, 29], "prerequisit": [20, 21, 22, 29], "scenario": [20, 21, 24, 26, 27, 29, 30], "With": [20, 26, 27], "full": 20, "fewer": 20, "result": [21, 29], "explor": [21, 22, 24, 25, 29], "linear": 22, "creat": [22, 25], "hash": 22, "techniqu": 22, "bit": 22, "learn": [22, 26, 27], "rate": 22, "initi": 22, "time": 22, "power": 22, "cach": 22, "file": 22, "sourc": 22, "number": 22, "diagnost": 22, "header": 22, "save": 22, "your": 22, "audit": 22, "offlin": 24, "polici": [24, 25], "evalu": 24, "introduct": 24, "motiv": 24, "batch": 24, "pre": 24, "cb": [24, 25], "cb_adf": 24, "onlin": 24, "increment": 24, "legaci": 24, "overview": 25, "The": [25, 30], "problem": [25, 30], "work": 25, "v": 25, "specifi": 25, "approach": 25, "algorithm": 25, "cb_explor": 25, "cb_explore_adf": 25, "share": 25, "person": 26, "simul": [26, 27, 30], "reward": [26, 27, 30], "understand": 26, "decis": [26, 27], "set": [26, 27, 30], "up": [26, 27], "asid": 26, "without": [26, 27], "tom": 26, "anna": 26, "continu": 27, "action": 27, "sweep": 27, "live": 27, "room": 27, "bedroom": 27, "better": 27, "cost": 27, "classif": 28, "start": 29, "slate": 30, "combinatori": 30, "outfit": 30, "optim": 30, "part": 30, "One": 30, "setup": 30}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx": 57}, "alltitles": {"Python Basics": [[0, "python-basics"], [29, "python-basics"]], "Contextual Bandits": [[1, "contextual-bandits"], [25, "contextual-bandits"]], "[Experimental] Testing Basic Models with Varying Epsilon Values and Model Counts for Non-Stationary Epsilon Decay": [[2, "experimental-testing-basic-models-with-varying-epsilon-values-and-model-counts-for-non-stationary-epsilon-decay"]], "Examples": [[3, "examples"]], "Mini VW": [[4, "mini-vw"]], "Poisson Regression": [[5, "poisson-regression"]], "Predict comparison": [[6, "predict-comparison"]], "Search - Covington": [[7, "search-covington"]], "Search - Sequence": [[8, "search-sequence"]], "Search - Sequence LDF": [[9, "search-sequence-ldf"]], "Search - Speech Tagger": [[10, "search-speech-tagger"]], "Removing the AUTO features": [[10, "removing-the-auto-features"]], "Very silly Covington-esqu dependency parsing": [[10, "very-silly-covington-esqu-dependency-parsing"]], "LDF-based Covington-style dependency parser": [[10, "ldf-based-covington-style-dependency-parser"]], "A simple word-alignment model": [[10, "a-simple-word-alignment-model"]], "Vowpal Wabbit": [[11, "vowpal-wabbit"]], "API Reference": [[12, "api-reference"]], "Core module": [[12, "core-module"]], "Optional modules": [[12, "optional-modules"]], "Implementation/internal modules": [[12, "implementation-internal-modules"]], "Migration guides": [[12, "migration-guides"]], "Python 8.11 to 9 migration": [[13, "python-8-11-to-9-migration"]], "Imports": [[13, "imports"]], "pyvw": [[13, "pyvw"]], "Exception": [[13, null]], "DFtoVW": [[13, "dftovw"]], "sklearn_vw": [[13, "sklearn-vw"]], "Class names": [[13, "class-names"]], "get_prediction": [[13, "get-prediction"]], "Label types and prediction types": [[13, "label-types-and-prediction-types"]], "Getting a label from an Example": [[13, "getting-a-label-from-an-example"]], "ExampleNamespace.push_features": [[13, "examplenamespace-push-features"]], "vowpalwabbit": [[14, "vowpalwabbit"]], "Example usage": [[14, "example-usage"], [18, "example-usage"]], "Module contents": [[14, "module-vowpalwabbit"], [15, "module-vowpalwabbit.dftovw"], [18, "module-vowpalwabbit.sklearn"]], "vowpalwabbit.dftovw": [[15, "vowpalwabbit-dftovw"]], "Deprecated alias": [[15, "deprecated-alias"], [18, "deprecated-alias"]], "vowpalwabbit.pyvw": [[16, "vowpalwabbit-pyvw"]], "vowpalwabbit.pyvw.pylibvw": [[17, "vowpalwabbit-pyvw-pylibvw"]], "vowpalwabbit.sklearn": [[18, "vowpalwabbit-sklearn"]], "Todo": [[18, "id1"]], "Pandas DataFrame to VowpalWabbit Format Conversion": [[19, "pandas-dataframe-to-vowpalwabbit-format-conversion"]], "Credit": [[19, null], [24, null]], "Tutorial outline": [[19, "tutorial-outline"]], "Requirements": [[19, "requirements"]], "Importing packages": [[19, "importing-packages"]], "Function and class definition": [[19, "function-and-class-definition"]], "Constants": [[19, "constants"]], "1. Data": [[19, "data"]], "1.1. Import": [[19, "import"]], "1.2. Types": [[19, "types"]], "1.3. Highly correlated features": [[19, "highly-correlated-features"]], "2. Train a first model": [[19, "train-a-first-model"]], "2.1. Converting DataFrame to Vowpal Wabbit input format.": [[19, "converting-dataframe-to-vowpal-wabbit-input-format"]], "2.2. Define and train model": [[19, "define-and-train-model"]], "3. Visualizing model\u2019s outputs": [[19, "visualizing-model-s-outputs"]], "3.1. Retrieving model\u2019s parameters, losses/predictions and summary metrics from the log": [[19, "retrieving-model-s-parameters-losses-predictions-and-summary-metrics-from-the-log"]], "3.2. Visualizing the average loss and the distribution of selected metrics": [[19, "visualizing-the-average-loss-and-the-distribution-of-selected-metrics"]], "3.3. Visualizing the predictions of the model": [[19, "visualizing-the-predictions-of-the-model"]], "3.4. Visualizing learnt weights": [[19, "visualizing-learnt-weights"]], "4. Train a more complex model: using log transformed target and namespace interactions": [[19, "train-a-more-complex-model-using-log-transformed-target-and-namespace-interactions"]], "4.1. Applying logarithm transformation to the target": [[19, "applying-logarithm-transformation-to-the-target"]], "4.2. Defining namespaces": [[19, "defining-namespaces"]], "4.3. Converting to VW format and training model": [[19, "converting-to-vw-format-and-training-model"]], "4.4. Visualizing model\u2019s outputs": [[19, "id1"]], "4.5. Comparing models\u2019 performance": [[19, "comparing-models-performance"]], "Command Line for CSV Dataset": [[20, "command-line-for-csv-dataset"]], "Prerequisites": [[20, null], [21, null], [22, null], [29, null]], "Training scenario and dataset": [[20, "training-scenario-and-dataset"], [21, "training-scenario-and-dataset"], [29, "training-scenario-and-dataset"]], "Train a model": [[20, "train-a-model"], [21, "train-a-model"]], "With full parameters": [[20, "with-full-parameters"]], "Fewer parameters": [[20, "fewer-parameters"]], "Test a model": [[20, "test-a-model"], [21, "test-a-model"]], "Command Line Basics": [[21, "command-line-basics"]], "Vowpal Wabbit results": [[21, "vowpal-wabbit-results"], [29, "vowpal-wabbit-results"]], "More to explore": [[21, "more-to-explore"], [22, "more-to-explore"], [24, "more-to-explore"], [25, "more-to-explore"], [29, "more-to-explore"]], "Command Line Linear Regression": [[22, "command-line-linear-regression"]], "Create a dataset": [[22, "create-a-dataset"]], "Vowpal Wabbit hashing techniques": [[22, "vowpal-wabbit-hashing-techniques"]], "Vowpal Wabbit output": [[22, "vowpal-wabbit-output"]], "Hash function bits": [[22, "hash-function-bits"]], "Learning rate": [[22, "learning-rate"]], "Initial time": [[22, "initial-time"]], "Power on learning rate decay": [[22, "power-on-learning-rate-decay"]], "Cache files": [[22, "cache-files"]], "Data sources": [[22, "data-sources"]], "Number of data sources": [[22, "number-of-data-sources"]], "Vowpal Wabbit diagnostic header": [[22, "vowpal-wabbit-diagnostic-header"]], "Saving your model into a file": [[22, "saving-your-model-into-a-file"]], "Vowpal Wabbit predictions": [[22, "vowpal-wabbit-predictions"]], "Auditing": [[22, "auditing"]], "Tutorials": [[23, "tutorials"]], "Offline Policy Evaluation Using the Command Line": [[24, "offline-policy-evaluation-using-the-command-line"]], "Introduction & Motivation": [[24, "introduction-motivation"]], "Batch scenario: policy evaluation with a pre-trained VW policy, cb-format data": [[24, "batch-scenario-policy-evaluation-with-a-pre-trained-vw-policy-cb-format-data"]], "Batch scenario: policy evaluation with a pre-trained VW policy, cb_adf-format data": [[24, "batch-scenario-policy-evaluation-with-a-pre-trained-vw-policy-cb-adf-format-data"]], "Online scenario: policy evaluation with an incrementally trained VW policy, cb-format data": [[24, "online-scenario-policy-evaluation-with-an-incrementally-trained-vw-policy-cb-format-data"]], "Online scenario: policy evaluation with an incrementally trained VW policy, cb_adf-format data": [[24, "online-scenario-policy-evaluation-with-an-incrementally-trained-vw-policy-cb-adf-format-data"]], "Legacy: policy evaluation with cb-format data, using a pre-trained policy": [[24, "legacy-policy-evaluation-with-cb-format-data-using-a-pre-trained-policy"]], "Overview": [[25, "overview"]], "The contextual bandit problem": [[25, "the-contextual-bandit-problem"]], "Working with contextual bandits in Vowpal Wabbit": [[25, "working-with-contextual-bandits-in-vowpal-wabbit"]], "Policy vs. model": [[25, "policy-vs-model"]], "Specifying the contextual bandit approach": [[25, "specifying-the-contextual-bandit-approach"]], "Specifying exploration algorithms": [[25, "specifying-exploration-algorithms"]], "Contextual bandit algorithms and input formats": [[25, "contextual-bandit-algorithms-and-input-formats"]], "Input format for --cb": [[25, "input-format-for-cb"]], "Input format for --cb_explore": [[25, "input-format-for-cb-explore"]], "Usage": [[25, "usage"], [25, "id1"]], "Input format for --cb_explore_adf": [[25, "input-format-for-cb-explore-adf"]], "Shared contextual features": [[25, "shared-contextual-features"]], "Create contextual bandit data": [[25, "create-contextual-bandit-data"]], "Contextual bandits Python tutorial": [[25, "contextual-bandits-python-tutorial"]], "Contextual Bandit Content Personalization": [[26, "contextual-bandit-content-personalization"]], "Simulate reward": [[26, "simulate-reward"], [27, "simulate-reward"]], "Understanding VW format": [[26, "understanding-vw-format"]], "Getting a decision": [[26, "getting-a-decision"], [27, "getting-a-decision"]], "Simulation set up": [[26, "simulation-set-up"], [27, "simulation-set-up"]], "Scenario 1": [[26, "scenario-1"], [27, "scenario-1"]], "With learning": [[26, "with-learning"], [26, "id1"], [26, "id5"]], "Aside: interactions": [[26, "aside-interactions"]], "Without learning": [[26, "without-learning"], [26, "id2"]], "Scenario 2": [[26, "scenario-2"], [27, "scenario-2"]], "Tom": [[26, "tom"], [26, "id3"]], "Anna": [[26, "anna"], [26, "id4"]], "Scenario 3": [[26, "scenario-3"], [27, "scenario-3"]], "Without Learning": [[26, "id6"], [27, "without-learning"], [27, "id2"], [27, "id4"]], "Summary": [[26, "summary"], [30, "summary"]], "Contextual Bandits with Continuous Actions": [[27, "contextual-bandits-with-continuous-actions"]], "With Learning": [[27, "with-learning"], [27, "id1"], [27, "id3"]], "Parameter sweep": [[27, "parameter-sweep"]], "Living Room": [[27, "living-room"]], "Bedroom": [[27, "bedroom"]], "Better cost function": [[27, "better-cost-function"]], "Classification": [[28, "classification"]], "Vowpal Wabbit input format": [[28, "vowpal-wabbit-input-format"]], "Getting started": [[29, "getting-started"]], "Slates": [[30, "slates"], [30, "id1"]], "Combinatorial bandits": [[30, "combinatorial-bandits"]], "The Slates problem setting": [[30, "the-slates-problem-setting"]], "Vowpal Wabbit Slates example format": [[30, "vowpal-wabbit-slates-example-format"]], "Scenario: Outfit optimization": [[30, "scenario-outfit-optimization"]], "Part One - setup": [[30, "part-one-setup"]], "Reward function": [[30, "reward-function"]], "Slates simulation": [[30, "slates-simulation"]], "Contextual Bandit": [[30, "contextual-bandit"]], "Comparison": [[30, "comparison"]]}, "indexentries": {"action (vowpalwabbit.ccblabeltype attribute)": [[14, "vowpalwabbit.CCBLabelType.ACTION"]], "action (vowpalwabbit.slateslabeltype attribute)": [[14, "vowpalwabbit.SlatesLabelType.ACTION"]], "action_pdf_value (vowpalwabbit.predictiontype attribute)": [[14, "vowpalwabbit.PredictionType.ACTION_PDF_VALUE"]], "action_probs (vowpalwabbit.predictiontype attribute)": [[14, "vowpalwabbit.PredictionType.ACTION_PROBS"]], "action_scores (vowpalwabbit.predictiontype attribute)": [[14, "vowpalwabbit.PredictionType.ACTION_SCORES"]], "active_multiclass (vowpalwabbit.predictiontype attribute)": [[14, "vowpalwabbit.PredictionType.ACTIVE_MULTICLASS"]], "abstractlabel (class in vowpalwabbit)": [[14, "vowpalwabbit.AbstractLabel"]], "actionscore (class in vowpalwabbit)": [[14, "vowpalwabbit.ActionScore"]], "cbcontinuouslabel (class in vowpalwabbit)": [[14, "vowpalwabbit.CBContinuousLabel"]], "cbcontinuouslabelelement (class in vowpalwabbit)": [[14, "vowpalwabbit.CBContinuousLabelElement"]], "cbevallabel (class in vowpalwabbit)": [[14, "vowpalwabbit.CBEvalLabel"]], "cblabel (class in vowpalwabbit)": [[14, "vowpalwabbit.CBLabel"]], "cblabelelement (class in vowpalwabbit)": [[14, "vowpalwabbit.CBLabelElement"]], "ccblabel (class in vowpalwabbit)": [[14, "vowpalwabbit.CCBLabel"]], "ccblabeltype (class in vowpalwabbit)": [[14, "vowpalwabbit.CCBLabelType"]], "ccbslotoutcome (class in vowpalwabbit)": [[14, "vowpalwabbit.CCBSlotOutcome"]], "conditional_contextual_bandit (vowpalwabbit.labeltype attribute)": [[14, "vowpalwabbit.LabelType.CONDITIONAL_CONTEXTUAL_BANDIT"]], "contextual_bandit (vowpalwabbit.labeltype attribute)": [[14, "vowpalwabbit.LabelType.CONTEXTUAL_BANDIT"]], "contextual_bandit_eval (vowpalwabbit.labeltype attribute)": [[14, "vowpalwabbit.LabelType.CONTEXTUAL_BANDIT_EVAL"]], "continuous (vowpalwabbit.labeltype attribute)": [[14, "vowpalwabbit.LabelType.CONTINUOUS"]], "cost_sensitive (vowpalwabbit.labeltype attribute)": [[14, "vowpalwabbit.LabelType.COST_SENSITIVE"]], "costsensitiveelement (class in vowpalwabbit)": [[14, "vowpalwabbit.CostSensitiveElement"]], "costsensitivelabel (class in vowpalwabbit)": [[14, "vowpalwabbit.CostSensitiveLabel"]], "decision_scores (vowpalwabbit.predictiontype attribute)": [[14, "vowpalwabbit.PredictionType.DECISION_SCORES"]], "example (class in vowpalwabbit)": [[14, "vowpalwabbit.Example"]], "examplenamespace (class in vowpalwabbit)": [[14, "vowpalwabbit.ExampleNamespace"]], "labeltype (class in vowpalwabbit)": [[14, "vowpalwabbit.LabelType"]], "multiclass (vowpalwabbit.labeltype attribute)": [[14, "vowpalwabbit.LabelType.MULTICLASS"]], "multiclass (vowpalwabbit.predictiontype attribute)": [[14, "vowpalwabbit.PredictionType.MULTICLASS"]], "multiclassprobs (vowpalwabbit.predictiontype attribute)": [[14, "vowpalwabbit.PredictionType.MULTICLASSPROBS"]], "multilabel (vowpalwabbit.labeltype attribute)": [[14, "vowpalwabbit.LabelType.MULTILABEL"]], "multilabels (vowpalwabbit.predictiontype attribute)": [[14, "vowpalwabbit.PredictionType.MULTILABELS"]], "multiclasslabel (class in vowpalwabbit)": [[14, "vowpalwabbit.MulticlassLabel"]], "multiclassprobabilitieslabel (class in vowpalwabbit)": [[14, "vowpalwabbit.MulticlassProbabilitiesLabel"]], "multilabellabel (class in vowpalwabbit)": [[14, "vowpalwabbit.MultilabelLabel"]], "nopred (vowpalwabbit.predictiontype attribute)": [[14, "vowpalwabbit.PredictionType.NOPRED"]], "namespaceid (class in vowpalwabbit)": [[14, "vowpalwabbit.NamespaceId"]], "pdf (vowpalwabbit.predictiontype attribute)": [[14, "vowpalwabbit.PredictionType.PDF"]], "prob (vowpalwabbit.predictiontype attribute)": [[14, "vowpalwabbit.PredictionType.PROB"]], "predictiontype (class in vowpalwabbit)": [[14, "vowpalwabbit.PredictionType"]], "scalar (vowpalwabbit.predictiontype attribute)": [[14, "vowpalwabbit.PredictionType.SCALAR"]], "scalars (vowpalwabbit.predictiontype attribute)": [[14, "vowpalwabbit.PredictionType.SCALARS"]], "shared (vowpalwabbit.ccblabeltype attribute)": [[14, "vowpalwabbit.CCBLabelType.SHARED"]], "shared (vowpalwabbit.slateslabeltype attribute)": [[14, "vowpalwabbit.SlatesLabelType.SHARED"]], "simple (vowpalwabbit.labeltype attribute)": [[14, "vowpalwabbit.LabelType.SIMPLE"]], "slates (vowpalwabbit.labeltype attribute)": [[14, "vowpalwabbit.LabelType.SLATES"]], "slot (vowpalwabbit.ccblabeltype attribute)": [[14, "vowpalwabbit.CCBLabelType.SLOT"]], "slot (vowpalwabbit.slateslabeltype attribute)": [[14, "vowpalwabbit.SlatesLabelType.SLOT"]], "simplelabel (class in vowpalwabbit)": [[14, "vowpalwabbit.SimpleLabel"]], "slateslabel (class in vowpalwabbit)": [[14, "vowpalwabbit.SlatesLabel"]], "slateslabeltype (class in vowpalwabbit)": [[14, "vowpalwabbit.SlatesLabelType"]], "unset (vowpalwabbit.ccblabeltype attribute)": [[14, "vowpalwabbit.CCBLabelType.UNSET"]], "unset (vowpalwabbit.slateslabeltype attribute)": [[14, "vowpalwabbit.SlatesLabelType.UNSET"]], "workspace (class in vowpalwabbit)": [[14, "vowpalwabbit.Workspace"]], "__init__() (vowpalwabbit.abstractlabel method)": [[14, "vowpalwabbit.AbstractLabel.__init__"]], "__init__() (vowpalwabbit.actionscore method)": [[14, "vowpalwabbit.ActionScore.__init__"]], "__init__() (vowpalwabbit.cbcontinuouslabel method)": [[14, "vowpalwabbit.CBContinuousLabel.__init__"]], "__init__() (vowpalwabbit.cbcontinuouslabelelement method)": [[14, "vowpalwabbit.CBContinuousLabelElement.__init__"]], "__init__() (vowpalwabbit.cbevallabel method)": [[14, "vowpalwabbit.CBEvalLabel.__init__"]], "__init__() (vowpalwabbit.cblabel method)": [[14, "vowpalwabbit.CBLabel.__init__"]], "__init__() (vowpalwabbit.cblabelelement method)": [[14, "vowpalwabbit.CBLabelElement.__init__"]], "__init__() (vowpalwabbit.ccblabel method)": [[14, "vowpalwabbit.CCBLabel.__init__"]], "__init__() (vowpalwabbit.ccbslotoutcome method)": [[14, "vowpalwabbit.CCBSlotOutcome.__init__"]], "__init__() (vowpalwabbit.costsensitiveelement method)": [[14, "vowpalwabbit.CostSensitiveElement.__init__"]], "__init__() (vowpalwabbit.costsensitivelabel method)": [[14, "vowpalwabbit.CostSensitiveLabel.__init__"]], "__init__() (vowpalwabbit.example method)": [[14, "vowpalwabbit.Example.__init__"]], "__init__() (vowpalwabbit.examplenamespace method)": [[14, "vowpalwabbit.ExampleNamespace.__init__"]], "__init__() (vowpalwabbit.multiclasslabel method)": [[14, "vowpalwabbit.MulticlassLabel.__init__"]], "__init__() (vowpalwabbit.multiclassprobabilitieslabel method)": [[14, "vowpalwabbit.MulticlassProbabilitiesLabel.__init__"]], "__init__() (vowpalwabbit.multilabellabel method)": [[14, "vowpalwabbit.MultilabelLabel.__init__"]], "__init__() (vowpalwabbit.namespaceid method)": [[14, "vowpalwabbit.NamespaceId.__init__"]], "__init__() (vowpalwabbit.simplelabel method)": [[14, "vowpalwabbit.SimpleLabel.__init__"]], "__init__() (vowpalwabbit.slateslabel method)": [[14, "vowpalwabbit.SlatesLabel.__init__"]], "__init__() (vowpalwabbit.workspace method)": [[14, "vowpalwabbit.Workspace.__init__"]], "ensure_namespace_exists() (vowpalwabbit.example method)": [[14, "vowpalwabbit.Example.ensure_namespace_exists"]], "example() (vowpalwabbit.workspace method)": [[14, "vowpalwabbit.Workspace.example"]], "feature() (vowpalwabbit.example method)": [[14, "vowpalwabbit.Example.feature"]], "feature_weight() (vowpalwabbit.example method)": [[14, "vowpalwabbit.Example.feature_weight"]], "finish() (vowpalwabbit.workspace method)": [[14, "vowpalwabbit.Workspace.finish"]], "finish_example() (vowpalwabbit.workspace method)": [[14, "vowpalwabbit.Workspace.finish_example"]], "finished (vowpalwabbit.example attribute)": [[14, "vowpalwabbit.Example.finished"]], "finished (vowpalwabbit.workspace attribute)": [[14, "vowpalwabbit.Workspace.finished"]], "from_example() (vowpalwabbit.abstractlabel static method)": [[14, "vowpalwabbit.AbstractLabel.from_example"]], "from_example() (vowpalwabbit.cbcontinuouslabel static method)": [[14, "vowpalwabbit.CBContinuousLabel.from_example"]], "from_example() (vowpalwabbit.cbevallabel static method)": [[14, "vowpalwabbit.CBEvalLabel.from_example"]], "from_example() (vowpalwabbit.cblabel static method)": [[14, "vowpalwabbit.CBLabel.from_example"]], "from_example() (vowpalwabbit.ccblabel static method)": [[14, "vowpalwabbit.CCBLabel.from_example"]], "from_example() (vowpalwabbit.costsensitivelabel static method)": [[14, "vowpalwabbit.CostSensitiveLabel.from_example"]], "from_example() (vowpalwabbit.multiclasslabel static method)": [[14, "vowpalwabbit.MulticlassLabel.from_example"]], "from_example() (vowpalwabbit.multiclassprobabilitieslabel static method)": [[14, "vowpalwabbit.MulticlassProbabilitiesLabel.from_example"]], "from_example() (vowpalwabbit.multilabellabel static method)": [[14, "vowpalwabbit.MultilabelLabel.from_example"]], "from_example() (vowpalwabbit.simplelabel static method)": [[14, "vowpalwabbit.SimpleLabel.from_example"]], "from_example() (vowpalwabbit.slateslabel static method)": [[14, "vowpalwabbit.SlatesLabel.from_example"]], "get_config() (vowpalwabbit.workspace method)": [[14, "vowpalwabbit.Workspace.get_config"]], "get_feature_id() (vowpalwabbit.example method)": [[14, "vowpalwabbit.Example.get_feature_id"]], "get_label() (vowpalwabbit.example method)": [[14, "vowpalwabbit.Example.get_label"]], "get_label_type() (vowpalwabbit.workspace method)": [[14, "vowpalwabbit.Workspace.get_label_type"]], "get_log() (vowpalwabbit.workspace method)": [[14, "vowpalwabbit.Workspace.get_log"]], "get_ns() (vowpalwabbit.example method)": [[14, "vowpalwabbit.Example.get_ns"]], "get_prediction() (vowpalwabbit.example method)": [[14, "vowpalwabbit.Example.get_prediction"]], "get_prediction_type() (vowpalwabbit.workspace method)": [[14, "vowpalwabbit.Workspace.get_prediction_type"]], "get_weight() (vowpalwabbit.workspace method)": [[14, "vowpalwabbit.Workspace.get_weight"]], "get_weight_from_name() (vowpalwabbit.workspace method)": [[14, "vowpalwabbit.Workspace.get_weight_from_name"]], "id (vowpalwabbit.namespaceid attribute)": [[14, "vowpalwabbit.NamespaceId.id"]], "init (vowpalwabbit.workspace attribute)": [[14, "vowpalwabbit.Workspace.init"]], "init_search_task() (vowpalwabbit.workspace method)": [[14, "vowpalwabbit.Workspace.init_search_task"]], "iter_features() (vowpalwabbit.example method)": [[14, "vowpalwabbit.Example.iter_features"]], "iter_features() (vowpalwabbit.examplenamespace method)": [[14, "vowpalwabbit.ExampleNamespace.iter_features"]], "labeltype (vowpalwabbit.example attribute)": [[14, "vowpalwabbit.Example.labelType"]], "learn() (vowpalwabbit.example method)": [[14, "vowpalwabbit.Example.learn"]], "learn() (vowpalwabbit.workspace method)": [[14, "vowpalwabbit.Workspace.learn"]], "module": [[14, "module-vowpalwabbit"], [15, "module-vowpalwabbit.dftovw"], [16, "module-vowpalwabbit.pyvw"], [18, "module-vowpalwabbit.sklearn"]], "ns (vowpalwabbit.namespaceid attribute)": [[14, "vowpalwabbit.NamespaceId.ns"]], "num_features_in() (vowpalwabbit.example method)": [[14, "vowpalwabbit.Example.num_features_in"]], "num_features_in() (vowpalwabbit.examplenamespace method)": [[14, "vowpalwabbit.ExampleNamespace.num_features_in"]], "num_weights() (vowpalwabbit.workspace method)": [[14, "vowpalwabbit.Workspace.num_weights"]], "ord_ns (vowpalwabbit.namespaceid attribute)": [[14, "vowpalwabbit.NamespaceId.ord_ns"]], "parse() (vowpalwabbit.workspace method)": [[14, "vowpalwabbit.Workspace.parse"]], "parser_ran (vowpalwabbit.workspace attribute)": [[14, "vowpalwabbit.Workspace.parser_ran"]], "pop_feature() (vowpalwabbit.example method)": [[14, "vowpalwabbit.Example.pop_feature"]], "pop_feature() (vowpalwabbit.examplenamespace method)": [[14, "vowpalwabbit.ExampleNamespace.pop_feature"]], "pop_namespace() (vowpalwabbit.example method)": [[14, "vowpalwabbit.Example.pop_namespace"]], "predict() (vowpalwabbit.workspace method)": [[14, "vowpalwabbit.Workspace.predict"]], "push_feature() (vowpalwabbit.example method)": [[14, "vowpalwabbit.Example.push_feature"]], "push_feature() (vowpalwabbit.examplenamespace method)": [[14, "vowpalwabbit.ExampleNamespace.push_feature"]], "push_features() (vowpalwabbit.example method)": [[14, "vowpalwabbit.Example.push_features"]], "push_features() (vowpalwabbit.examplenamespace method)": [[14, "vowpalwabbit.ExampleNamespace.push_features"]], "push_hashed_feature() (vowpalwabbit.example method)": [[14, "vowpalwabbit.Example.push_hashed_feature"]], "push_namespace() (vowpalwabbit.example method)": [[14, "vowpalwabbit.Example.push_namespace"]], "save() (vowpalwabbit.workspace method)": [[14, "vowpalwabbit.Workspace.save"]], "set_label_string() (vowpalwabbit.example method)": [[14, "vowpalwabbit.Example.set_label_string"]], "setup_done (vowpalwabbit.example attribute)": [[14, "vowpalwabbit.Example.setup_done"]], "setup_example() (vowpalwabbit.example method)": [[14, "vowpalwabbit.Example.setup_example"]], "stride (vowpalwabbit.example attribute)": [[14, "vowpalwabbit.Example.stride"]], "sum_feat_sq() (vowpalwabbit.example method)": [[14, "vowpalwabbit.Example.sum_feat_sq"]], "unsetup_example() (vowpalwabbit.example method)": [[14, "vowpalwabbit.Example.unsetup_example"]], "vowpalwabbit": [[14, "module-vowpalwabbit"]], "vw (vowpalwabbit.example attribute)": [[14, "vowpalwabbit.Example.vw"]], "contextualbanditlabel (class in vowpalwabbit.dftovw)": [[15, "vowpalwabbit.dftovw.ContextualbanditLabel"]], "dftovw (class in vowpalwabbit.dftovw)": [[15, "vowpalwabbit.dftovw.DFtoVW"]], "feature (class in vowpalwabbit.dftovw)": [[15, "vowpalwabbit.dftovw.Feature"]], "multilabel (class in vowpalwabbit.dftovw)": [[15, "vowpalwabbit.dftovw.MultiLabel"]], "multiclasslabel (class in vowpalwabbit.dftovw)": [[15, "vowpalwabbit.dftovw.MulticlassLabel"]], "namespace (class in vowpalwabbit.dftovw)": [[15, "vowpalwabbit.dftovw.Namespace"]], "simplelabel (class in vowpalwabbit.dftovw)": [[15, "vowpalwabbit.dftovw.SimpleLabel"]], "__init__() (vowpalwabbit.dftovw.contextualbanditlabel method)": [[15, "vowpalwabbit.dftovw.ContextualbanditLabel.__init__"]], "__init__() (vowpalwabbit.dftovw.dftovw method)": [[15, "vowpalwabbit.dftovw.DFtoVW.__init__"]], "__init__() (vowpalwabbit.dftovw.feature method)": [[15, "vowpalwabbit.dftovw.Feature.__init__"]], "__init__() (vowpalwabbit.dftovw.multilabel method)": [[15, "vowpalwabbit.dftovw.MultiLabel.__init__"]], "__init__() (vowpalwabbit.dftovw.multiclasslabel method)": [[15, "vowpalwabbit.dftovw.MulticlassLabel.__init__"]], "__init__() (vowpalwabbit.dftovw.namespace method)": [[15, "vowpalwabbit.dftovw.Namespace.__init__"]], "__init__() (vowpalwabbit.dftovw.simplelabel method)": [[15, "vowpalwabbit.dftovw.SimpleLabel.__init__"]], "action (vowpalwabbit.dftovw.contextualbanditlabel attribute)": [[15, "vowpalwabbit.dftovw.ContextualbanditLabel.action"]], "check_attributes_type() (vowpalwabbit.dftovw.namespace method)": [[15, "vowpalwabbit.dftovw.Namespace.check_attributes_type"]], "check_columns_type_and_values() (vowpalwabbit.dftovw.dftovw method)": [[15, "vowpalwabbit.dftovw.DFtoVW.check_columns_type_and_values"]], "check_features_type() (vowpalwabbit.dftovw.dftovw method)": [[15, "vowpalwabbit.dftovw.DFtoVW.check_features_type"]], "check_instance_columns() (vowpalwabbit.dftovw.dftovw method)": [[15, "vowpalwabbit.dftovw.DFtoVW.check_instance_columns"]], "check_label_type() (vowpalwabbit.dftovw.dftovw method)": [[15, "vowpalwabbit.dftovw.DFtoVW.check_label_type"]], "check_missing_columns_df() (vowpalwabbit.dftovw.dftovw method)": [[15, "vowpalwabbit.dftovw.DFtoVW.check_missing_columns_df"]], "check_namespaces_type() (vowpalwabbit.dftovw.dftovw method)": [[15, "vowpalwabbit.dftovw.DFtoVW.check_namespaces_type"]], "convert_df() (vowpalwabbit.dftovw.dftovw method)": [[15, "vowpalwabbit.dftovw.DFtoVW.convert_df"]], "cost (vowpalwabbit.dftovw.contextualbanditlabel attribute)": [[15, "vowpalwabbit.dftovw.ContextualbanditLabel.cost"]], "empty_col() (vowpalwabbit.dftovw.dftovw method)": [[15, "vowpalwabbit.dftovw.DFtoVW.empty_col"]], "expected_type (vowpalwabbit.dftovw.namespace attribute)": [[15, "vowpalwabbit.dftovw.Namespace.expected_type"]], "from_colnames() (vowpalwabbit.dftovw.dftovw class method)": [[15, "vowpalwabbit.dftovw.DFtoVW.from_colnames"]], "from_column_names() (vowpalwabbit.dftovw.dftovw class method)": [[15, "vowpalwabbit.dftovw.DFtoVW.from_column_names"]], "label (vowpalwabbit.dftovw.multilabel attribute)": [[15, "vowpalwabbit.dftovw.MultiLabel.label"]], "label (vowpalwabbit.dftovw.multiclasslabel attribute)": [[15, "vowpalwabbit.dftovw.MulticlassLabel.label"]], "label (vowpalwabbit.dftovw.simplelabel attribute)": [[15, "vowpalwabbit.dftovw.SimpleLabel.label"]], "probability (vowpalwabbit.dftovw.contextualbanditlabel attribute)": [[15, "vowpalwabbit.dftovw.ContextualbanditLabel.probability"]], "process() (vowpalwabbit.dftovw.contextualbanditlabel method)": [[15, "vowpalwabbit.dftovw.ContextualbanditLabel.process"]], "process() (vowpalwabbit.dftovw.feature method)": [[15, "vowpalwabbit.dftovw.Feature.process"]], "process() (vowpalwabbit.dftovw.multilabel method)": [[15, "vowpalwabbit.dftovw.MultiLabel.process"]], "process() (vowpalwabbit.dftovw.multiclasslabel method)": [[15, "vowpalwabbit.dftovw.MulticlassLabel.process"]], "process() (vowpalwabbit.dftovw.namespace method)": [[15, "vowpalwabbit.dftovw.Namespace.process"]], "process() (vowpalwabbit.dftovw.simplelabel method)": [[15, "vowpalwabbit.dftovw.SimpleLabel.process"]], "process_features() (vowpalwabbit.dftovw.dftovw method)": [[15, "vowpalwabbit.dftovw.DFtoVW.process_features"]], "process_label_and_tag() (vowpalwabbit.dftovw.dftovw method)": [[15, "vowpalwabbit.dftovw.DFtoVW.process_label_and_tag"]], "raise_missing_col_error() (vowpalwabbit.dftovw.dftovw method)": [[15, "vowpalwabbit.dftovw.DFtoVW.raise_missing_col_error"]], "set_namespaces() (vowpalwabbit.dftovw.dftovw method)": [[15, "vowpalwabbit.dftovw.DFtoVW.set_namespaces"]], "value (vowpalwabbit.dftovw.feature attribute)": [[15, "vowpalwabbit.dftovw.Feature.value"]], "vowpalwabbit.dftovw": [[15, "module-vowpalwabbit.dftovw"]], "weight (vowpalwabbit.dftovw.multiclasslabel attribute)": [[15, "vowpalwabbit.dftovw.MulticlassLabel.weight"]], "weight (vowpalwabbit.dftovw.simplelabel attribute)": [[15, "vowpalwabbit.dftovw.SimpleLabel.weight"]], "action (vowpalwabbit.pyvw.ccblabeltype attribute)": [[16, "vowpalwabbit.pyvw.CCBLabelType.ACTION"]], "action (vowpalwabbit.pyvw.slateslabeltype attribute)": [[16, "vowpalwabbit.pyvw.SlatesLabelType.ACTION"]], "action_pdf_value (vowpalwabbit.pyvw.predictiontype attribute)": [[16, "vowpalwabbit.pyvw.PredictionType.ACTION_PDF_VALUE"]], "action_probs (vowpalwabbit.pyvw.predictiontype attribute)": [[16, "vowpalwabbit.pyvw.PredictionType.ACTION_PROBS"]], "action_scores (vowpalwabbit.pyvw.predictiontype attribute)": [[16, "vowpalwabbit.pyvw.PredictionType.ACTION_SCORES"]], "active_multiclass (vowpalwabbit.pyvw.predictiontype attribute)": [[16, "vowpalwabbit.pyvw.PredictionType.ACTIVE_MULTICLASS"]], "abstractlabel (class in vowpalwabbit.pyvw)": [[16, "vowpalwabbit.pyvw.AbstractLabel"]], "actionscore (class in vowpalwabbit.pyvw)": [[16, "vowpalwabbit.pyvw.ActionScore"]], "cbcontinuouslabel (class in vowpalwabbit.pyvw)": [[16, "vowpalwabbit.pyvw.CBContinuousLabel"]], "cbcontinuouslabelelement (class in vowpalwabbit.pyvw)": [[16, "vowpalwabbit.pyvw.CBContinuousLabelElement"]], "cbevallabel (class in vowpalwabbit.pyvw)": [[16, "vowpalwabbit.pyvw.CBEvalLabel"]], "cblabel (class in vowpalwabbit.pyvw)": [[16, "vowpalwabbit.pyvw.CBLabel"]], "cblabelelement (class in vowpalwabbit.pyvw)": [[16, "vowpalwabbit.pyvw.CBLabelElement"]], "ccblabel (class in vowpalwabbit.pyvw)": [[16, "vowpalwabbit.pyvw.CCBLabel"]], "ccblabeltype (class in vowpalwabbit.pyvw)": [[16, "vowpalwabbit.pyvw.CCBLabelType"]], "ccbslotoutcome (class in vowpalwabbit.pyvw)": [[16, "vowpalwabbit.pyvw.CCBSlotOutcome"]], "conditional_contextual_bandit (vowpalwabbit.pyvw.labeltype attribute)": [[16, "vowpalwabbit.pyvw.LabelType.CONDITIONAL_CONTEXTUAL_BANDIT"]], "contextual_bandit (vowpalwabbit.pyvw.labeltype attribute)": [[16, "vowpalwabbit.pyvw.LabelType.CONTEXTUAL_BANDIT"]], "contextual_bandit_eval (vowpalwabbit.pyvw.labeltype attribute)": [[16, "vowpalwabbit.pyvw.LabelType.CONTEXTUAL_BANDIT_EVAL"]], "continuous (vowpalwabbit.pyvw.labeltype attribute)": [[16, "vowpalwabbit.pyvw.LabelType.CONTINUOUS"]], "cost_sensitive (vowpalwabbit.pyvw.labeltype attribute)": [[16, "vowpalwabbit.pyvw.LabelType.COST_SENSITIVE"]], "costsensitiveelement (class in vowpalwabbit.pyvw)": [[16, "vowpalwabbit.pyvw.CostSensitiveElement"]], "costsensitivelabel (class in vowpalwabbit.pyvw)": [[16, "vowpalwabbit.pyvw.CostSensitiveLabel"]], "decision_scores (vowpalwabbit.pyvw.predictiontype attribute)": [[16, "vowpalwabbit.pyvw.PredictionType.DECISION_SCORES"]], "example (class in vowpalwabbit.pyvw)": [[16, "vowpalwabbit.pyvw.Example"], [16, "vowpalwabbit.pyvw.example"]], "examplenamespace (class in vowpalwabbit.pyvw)": [[16, "vowpalwabbit.pyvw.ExampleNamespace"]], "labeltype (class in vowpalwabbit.pyvw)": [[16, "vowpalwabbit.pyvw.LabelType"]], "multiclass (vowpalwabbit.pyvw.labeltype attribute)": [[16, "vowpalwabbit.pyvw.LabelType.MULTICLASS"]], "multiclass (vowpalwabbit.pyvw.predictiontype attribute)": [[16, "vowpalwabbit.pyvw.PredictionType.MULTICLASS"]], "multiclassprobs (vowpalwabbit.pyvw.predictiontype attribute)": [[16, "vowpalwabbit.pyvw.PredictionType.MULTICLASSPROBS"]], "multilabel (vowpalwabbit.pyvw.labeltype attribute)": [[16, "vowpalwabbit.pyvw.LabelType.MULTILABEL"]], "multilabels (vowpalwabbit.pyvw.predictiontype attribute)": [[16, "vowpalwabbit.pyvw.PredictionType.MULTILABELS"]], "multiclasslabel (class in vowpalwabbit.pyvw)": [[16, "vowpalwabbit.pyvw.MulticlassLabel"]], "multiclassprobabilitieslabel (class in vowpalwabbit.pyvw)": [[16, "vowpalwabbit.pyvw.MulticlassProbabilitiesLabel"]], "multilabellabel (class in vowpalwabbit.pyvw)": [[16, "vowpalwabbit.pyvw.MultilabelLabel"]], "nopred (vowpalwabbit.pyvw.predictiontype attribute)": [[16, "vowpalwabbit.pyvw.PredictionType.NOPRED"]], "namespaceid (class in vowpalwabbit.pyvw)": [[16, "vowpalwabbit.pyvw.NamespaceId"]], "pdf (vowpalwabbit.pyvw.predictiontype attribute)": [[16, "vowpalwabbit.pyvw.PredictionType.PDF"]], "prob (vowpalwabbit.pyvw.predictiontype attribute)": [[16, "vowpalwabbit.pyvw.PredictionType.PROB"]], "predictiontype (class in vowpalwabbit.pyvw)": [[16, "vowpalwabbit.pyvw.PredictionType"]], "scalar (vowpalwabbit.pyvw.predictiontype attribute)": [[16, "vowpalwabbit.pyvw.PredictionType.SCALAR"]], "scalars (vowpalwabbit.pyvw.predictiontype attribute)": [[16, "vowpalwabbit.pyvw.PredictionType.SCALARS"]], "shared (vowpalwabbit.pyvw.ccblabeltype attribute)": [[16, "vowpalwabbit.pyvw.CCBLabelType.SHARED"]], "shared (vowpalwabbit.pyvw.slateslabeltype attribute)": [[16, "vowpalwabbit.pyvw.SlatesLabelType.SHARED"]], "simple (vowpalwabbit.pyvw.labeltype attribute)": [[16, "vowpalwabbit.pyvw.LabelType.SIMPLE"]], "slates (vowpalwabbit.pyvw.labeltype attribute)": [[16, "vowpalwabbit.pyvw.LabelType.SLATES"]], "slot (vowpalwabbit.pyvw.ccblabeltype attribute)": [[16, "vowpalwabbit.pyvw.CCBLabelType.SLOT"]], "slot (vowpalwabbit.pyvw.slateslabeltype attribute)": [[16, "vowpalwabbit.pyvw.SlatesLabelType.SLOT"]], "searchtask (class in vowpalwabbit.pyvw)": [[16, "vowpalwabbit.pyvw.SearchTask"]], "simplelabel (class in vowpalwabbit.pyvw)": [[16, "vowpalwabbit.pyvw.SimpleLabel"]], "slateslabel (class in vowpalwabbit.pyvw)": [[16, "vowpalwabbit.pyvw.SlatesLabel"]], "slateslabeltype (class in vowpalwabbit.pyvw)": [[16, "vowpalwabbit.pyvw.SlatesLabelType"]], "unset (vowpalwabbit.pyvw.ccblabeltype attribute)": [[16, "vowpalwabbit.pyvw.CCBLabelType.UNSET"]], "unset (vowpalwabbit.pyvw.slateslabeltype attribute)": [[16, "vowpalwabbit.pyvw.SlatesLabelType.UNSET"]], "vwoption (class in vowpalwabbit.pyvw)": [[16, "vowpalwabbit.pyvw.VWOption"]], "workspace (class in vowpalwabbit.pyvw)": [[16, "vowpalwabbit.pyvw.Workspace"]], "__init__() (vowpalwabbit.pyvw.abstractlabel method)": [[16, "vowpalwabbit.pyvw.AbstractLabel.__init__"]], "__init__() (vowpalwabbit.pyvw.actionscore method)": [[16, "vowpalwabbit.pyvw.ActionScore.__init__"]], "__init__() (vowpalwabbit.pyvw.cbcontinuouslabel method)": [[16, "vowpalwabbit.pyvw.CBContinuousLabel.__init__"]], "__init__() (vowpalwabbit.pyvw.cbcontinuouslabelelement method)": [[16, "vowpalwabbit.pyvw.CBContinuousLabelElement.__init__"]], "__init__() (vowpalwabbit.pyvw.cbevallabel method)": [[16, "vowpalwabbit.pyvw.CBEvalLabel.__init__"]], "__init__() (vowpalwabbit.pyvw.cblabel method)": [[16, "vowpalwabbit.pyvw.CBLabel.__init__"]], "__init__() (vowpalwabbit.pyvw.cblabelelement method)": [[16, "vowpalwabbit.pyvw.CBLabelElement.__init__"]], "__init__() (vowpalwabbit.pyvw.ccblabel method)": [[16, "vowpalwabbit.pyvw.CCBLabel.__init__"]], "__init__() (vowpalwabbit.pyvw.ccbslotoutcome method)": [[16, "vowpalwabbit.pyvw.CCBSlotOutcome.__init__"]], "__init__() (vowpalwabbit.pyvw.costsensitiveelement method)": [[16, "vowpalwabbit.pyvw.CostSensitiveElement.__init__"]], "__init__() (vowpalwabbit.pyvw.costsensitivelabel method)": [[16, "vowpalwabbit.pyvw.CostSensitiveLabel.__init__"]], "__init__() (vowpalwabbit.pyvw.example method)": [[16, "vowpalwabbit.pyvw.Example.__init__"]], "__init__() (vowpalwabbit.pyvw.examplenamespace method)": [[16, "vowpalwabbit.pyvw.ExampleNamespace.__init__"]], "__init__() (vowpalwabbit.pyvw.multiclasslabel method)": [[16, "vowpalwabbit.pyvw.MulticlassLabel.__init__"]], "__init__() (vowpalwabbit.pyvw.multiclassprobabilitieslabel method)": [[16, "vowpalwabbit.pyvw.MulticlassProbabilitiesLabel.__init__"]], "__init__() (vowpalwabbit.pyvw.multilabellabel method)": [[16, "vowpalwabbit.pyvw.MultilabelLabel.__init__"]], "__init__() (vowpalwabbit.pyvw.namespaceid method)": [[16, "vowpalwabbit.pyvw.NamespaceId.__init__"]], "__init__() (vowpalwabbit.pyvw.searchtask method)": [[16, "vowpalwabbit.pyvw.SearchTask.__init__"]], "__init__() (vowpalwabbit.pyvw.simplelabel method)": [[16, "vowpalwabbit.pyvw.SimpleLabel.__init__"]], "__init__() (vowpalwabbit.pyvw.slateslabel method)": [[16, "vowpalwabbit.pyvw.SlatesLabel.__init__"]], "__init__() (vowpalwabbit.pyvw.vwoption method)": [[16, "vowpalwabbit.pyvw.VWOption.__init__"]], "__init__() (vowpalwabbit.pyvw.workspace method)": [[16, "vowpalwabbit.pyvw.Workspace.__init__"]], "abstract_label (class in vowpalwabbit.pyvw)": [[16, "vowpalwabbit.pyvw.abstract_label"]], "allow_override (vowpalwabbit.pyvw.vwoption property)": [[16, "vowpalwabbit.pyvw.VWOption.allow_override"]], "cbandits_label (class in vowpalwabbit.pyvw)": [[16, "vowpalwabbit.pyvw.cbandits_label"]], "cost_sensitive_label (class in vowpalwabbit.pyvw)": [[16, "vowpalwabbit.pyvw.cost_sensitive_label"]], "default_value (vowpalwabbit.pyvw.vwoption property)": [[16, "vowpalwabbit.pyvw.VWOption.default_value"]], "default_value_supplied (vowpalwabbit.pyvw.vwoption property)": [[16, "vowpalwabbit.pyvw.VWOption.default_value_supplied"]], "ensure_namespace_exists() (vowpalwabbit.pyvw.example method)": [[16, "vowpalwabbit.pyvw.Example.ensure_namespace_exists"]], "example() (vowpalwabbit.pyvw.searchtask method)": [[16, "vowpalwabbit.pyvw.SearchTask.example"]], "example() (vowpalwabbit.pyvw.workspace method)": [[16, "vowpalwabbit.pyvw.Workspace.example"]], "example_namespace (class in vowpalwabbit.pyvw)": [[16, "vowpalwabbit.pyvw.example_namespace"]], "experimental (vowpalwabbit.pyvw.vwoption property)": [[16, "vowpalwabbit.pyvw.VWOption.experimental"]], "feature() (vowpalwabbit.pyvw.example method)": [[16, "vowpalwabbit.pyvw.Example.feature"]], "feature_weight() (vowpalwabbit.pyvw.example method)": [[16, "vowpalwabbit.pyvw.Example.feature_weight"]], "finish() (vowpalwabbit.pyvw.workspace method)": [[16, "vowpalwabbit.pyvw.Workspace.finish"]], "finish_example() (vowpalwabbit.pyvw.workspace method)": [[16, "vowpalwabbit.pyvw.Workspace.finish_example"]], "finished (vowpalwabbit.pyvw.example attribute)": [[16, "vowpalwabbit.pyvw.Example.finished"]], "finished (vowpalwabbit.pyvw.workspace attribute)": [[16, "vowpalwabbit.pyvw.Workspace.finished"]], "from_example() (vowpalwabbit.pyvw.abstractlabel static method)": [[16, "vowpalwabbit.pyvw.AbstractLabel.from_example"]], "from_example() (vowpalwabbit.pyvw.cbcontinuouslabel static method)": [[16, "vowpalwabbit.pyvw.CBContinuousLabel.from_example"]], "from_example() (vowpalwabbit.pyvw.cbevallabel static method)": [[16, "vowpalwabbit.pyvw.CBEvalLabel.from_example"]], "from_example() (vowpalwabbit.pyvw.cblabel static method)": [[16, "vowpalwabbit.pyvw.CBLabel.from_example"]], "from_example() (vowpalwabbit.pyvw.ccblabel static method)": [[16, "vowpalwabbit.pyvw.CCBLabel.from_example"]], "from_example() (vowpalwabbit.pyvw.costsensitivelabel static method)": [[16, "vowpalwabbit.pyvw.CostSensitiveLabel.from_example"]], "from_example() (vowpalwabbit.pyvw.multiclasslabel static method)": [[16, "vowpalwabbit.pyvw.MulticlassLabel.from_example"]], "from_example() (vowpalwabbit.pyvw.multiclassprobabilitieslabel static method)": [[16, "vowpalwabbit.pyvw.MulticlassProbabilitiesLabel.from_example"]], "from_example() (vowpalwabbit.pyvw.multilabellabel static method)": [[16, "vowpalwabbit.pyvw.MultilabelLabel.from_example"]], "from_example() (vowpalwabbit.pyvw.simplelabel static method)": [[16, "vowpalwabbit.pyvw.SimpleLabel.from_example"]], "from_example() (vowpalwabbit.pyvw.slateslabel static method)": [[16, "vowpalwabbit.pyvw.SlatesLabel.from_example"]], "get_all_vw_options() (in module vowpalwabbit.pyvw)": [[16, "vowpalwabbit.pyvw.get_all_vw_options"]], "get_config() (vowpalwabbit.pyvw.workspace method)": [[16, "vowpalwabbit.pyvw.Workspace.get_config"]], "get_feature_id() (vowpalwabbit.pyvw.example method)": [[16, "vowpalwabbit.pyvw.Example.get_feature_id"]], "get_label() (vowpalwabbit.pyvw.example method)": [[16, "vowpalwabbit.pyvw.Example.get_label"]], "get_label_class_from_enum() (in module vowpalwabbit.pyvw)": [[16, "vowpalwabbit.pyvw.get_label_class_from_enum"]], "get_label_type() (vowpalwabbit.pyvw.workspace method)": [[16, "vowpalwabbit.pyvw.Workspace.get_label_type"]], "get_log() (vowpalwabbit.pyvw.workspace method)": [[16, "vowpalwabbit.pyvw.Workspace.get_log"]], "get_ns() (vowpalwabbit.pyvw.example method)": [[16, "vowpalwabbit.pyvw.Example.get_ns"]], "get_prediction() (in module vowpalwabbit.pyvw)": [[16, "vowpalwabbit.pyvw.get_prediction"]], "get_prediction() (vowpalwabbit.pyvw.example method)": [[16, "vowpalwabbit.pyvw.Example.get_prediction"]], "get_prediction_type() (vowpalwabbit.pyvw.workspace method)": [[16, "vowpalwabbit.pyvw.Workspace.get_prediction_type"]], "get_weight() (vowpalwabbit.pyvw.workspace method)": [[16, "vowpalwabbit.pyvw.Workspace.get_weight"]], "get_weight_from_name() (vowpalwabbit.pyvw.workspace method)": [[16, "vowpalwabbit.pyvw.Workspace.get_weight_from_name"]], "help_str (vowpalwabbit.pyvw.vwoption property)": [[16, "vowpalwabbit.pyvw.VWOption.help_str"]], "id (vowpalwabbit.pyvw.namespaceid attribute)": [[16, "vowpalwabbit.pyvw.NamespaceId.id"]], "init (vowpalwabbit.pyvw.workspace attribute)": [[16, "vowpalwabbit.pyvw.Workspace.init"]], "init_search_task() (vowpalwabbit.pyvw.workspace method)": [[16, "vowpalwabbit.pyvw.Workspace.init_search_task"]], "is_flag() (vowpalwabbit.pyvw.vwoption method)": [[16, "vowpalwabbit.pyvw.VWOption.is_flag"]], "iter_features() (vowpalwabbit.pyvw.example method)": [[16, "vowpalwabbit.pyvw.Example.iter_features"]], "iter_features() (vowpalwabbit.pyvw.examplenamespace method)": [[16, "vowpalwabbit.pyvw.ExampleNamespace.iter_features"]], "keep (vowpalwabbit.pyvw.vwoption property)": [[16, "vowpalwabbit.pyvw.VWOption.keep"]], "labeltype (vowpalwabbit.pyvw.example attribute)": [[16, "vowpalwabbit.pyvw.Example.labelType"]], "learn() (vowpalwabbit.pyvw.example method)": [[16, "vowpalwabbit.pyvw.Example.learn"]], "learn() (vowpalwabbit.pyvw.searchtask method)": [[16, "vowpalwabbit.pyvw.SearchTask.learn"]], "learn() (vowpalwabbit.pyvw.workspace method)": [[16, "vowpalwabbit.pyvw.Workspace.learn"]], "merge_models() (in module vowpalwabbit.pyvw)": [[16, "vowpalwabbit.pyvw.merge_models"]], "multiclass_label (class in vowpalwabbit.pyvw)": [[16, "vowpalwabbit.pyvw.multiclass_label"]], "multiclass_probabilities_label (class in vowpalwabbit.pyvw)": [[16, "vowpalwabbit.pyvw.multiclass_probabilities_label"]], "name (vowpalwabbit.pyvw.vwoption property)": [[16, "vowpalwabbit.pyvw.VWOption.name"]], "namespace_id (class in vowpalwabbit.pyvw)": [[16, "vowpalwabbit.pyvw.namespace_id"]], "necessary (vowpalwabbit.pyvw.vwoption property)": [[16, "vowpalwabbit.pyvw.VWOption.necessary"]], "ns (vowpalwabbit.pyvw.namespaceid attribute)": [[16, "vowpalwabbit.pyvw.NamespaceId.ns"]], "num_features_in() (vowpalwabbit.pyvw.example method)": [[16, "vowpalwabbit.pyvw.Example.num_features_in"]], "num_features_in() (vowpalwabbit.pyvw.examplenamespace method)": [[16, "vowpalwabbit.pyvw.ExampleNamespace.num_features_in"]], "num_weights() (vowpalwabbit.pyvw.workspace method)": [[16, "vowpalwabbit.pyvw.Workspace.num_weights"]], "ord_ns (vowpalwabbit.pyvw.namespaceid attribute)": [[16, "vowpalwabbit.pyvw.NamespaceId.ord_ns"]], "parse() (vowpalwabbit.pyvw.workspace method)": [[16, "vowpalwabbit.pyvw.Workspace.parse"]], "parser_ran (vowpalwabbit.pyvw.workspace attribute)": [[16, "vowpalwabbit.pyvw.Workspace.parser_ran"]], "pop_feature() (vowpalwabbit.pyvw.example method)": [[16, "vowpalwabbit.pyvw.Example.pop_feature"]], "pop_feature() (vowpalwabbit.pyvw.examplenamespace method)": [[16, "vowpalwabbit.pyvw.ExampleNamespace.pop_feature"]], "pop_namespace() (vowpalwabbit.pyvw.example method)": [[16, "vowpalwabbit.pyvw.Example.pop_namespace"]], "predict() (vowpalwabbit.pyvw.searchtask method)": [[16, "vowpalwabbit.pyvw.SearchTask.predict"]], "predict() (vowpalwabbit.pyvw.workspace method)": [[16, "vowpalwabbit.pyvw.Workspace.predict"]], "push_feature() (vowpalwabbit.pyvw.example method)": [[16, "vowpalwabbit.pyvw.Example.push_feature"]], "push_feature() (vowpalwabbit.pyvw.examplenamespace method)": [[16, "vowpalwabbit.pyvw.ExampleNamespace.push_feature"]], "push_features() (vowpalwabbit.pyvw.example method)": [[16, "vowpalwabbit.pyvw.Example.push_features"]], "push_features() (vowpalwabbit.pyvw.examplenamespace method)": [[16, "vowpalwabbit.pyvw.ExampleNamespace.push_features"]], "push_hashed_feature() (vowpalwabbit.pyvw.example method)": [[16, "vowpalwabbit.pyvw.Example.push_hashed_feature"]], "push_namespace() (vowpalwabbit.pyvw.example method)": [[16, "vowpalwabbit.pyvw.Example.push_namespace"]], "save() (vowpalwabbit.pyvw.workspace method)": [[16, "vowpalwabbit.pyvw.Workspace.save"]], "set_label_string() (vowpalwabbit.pyvw.example method)": [[16, "vowpalwabbit.pyvw.Example.set_label_string"]], "setup_done (vowpalwabbit.pyvw.example attribute)": [[16, "vowpalwabbit.pyvw.Example.setup_done"]], "setup_example() (vowpalwabbit.pyvw.example method)": [[16, "vowpalwabbit.pyvw.Example.setup_example"]], "short_name (vowpalwabbit.pyvw.vwoption property)": [[16, "vowpalwabbit.pyvw.VWOption.short_name"]], "simple_label (class in vowpalwabbit.pyvw)": [[16, "vowpalwabbit.pyvw.simple_label"]], "stride (vowpalwabbit.pyvw.example attribute)": [[16, "vowpalwabbit.pyvw.Example.stride"]], "sum_feat_sq() (vowpalwabbit.pyvw.example method)": [[16, "vowpalwabbit.pyvw.Example.sum_feat_sq"]], "unsetup_example() (vowpalwabbit.pyvw.example method)": [[16, "vowpalwabbit.pyvw.Example.unsetup_example"]], "value (vowpalwabbit.pyvw.vwoption property)": [[16, "vowpalwabbit.pyvw.VWOption.value"]], "value_supplied (vowpalwabbit.pyvw.vwoption property)": [[16, "vowpalwabbit.pyvw.VWOption.value_supplied"]], "vowpalwabbit.pyvw": [[16, "module-vowpalwabbit.pyvw"]], "vw (class in vowpalwabbit.pyvw)": [[16, "vowpalwabbit.pyvw.vw"]], "vw (vowpalwabbit.pyvw.example attribute)": [[16, "vowpalwabbit.pyvw.Example.vw"]], "__init__() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.__init__"]], "__init__() (vowpalwabbit.pyvw.pylibvw.vw method)": [[17, "vowpalwabbit.pyvw.pylibvw.vw.__init__"]], "audit_example() (vowpalwabbit.pyvw.pylibvw.vw method)": [[17, "vowpalwabbit.pyvw.pylibvw.vw.audit_example"]], "ensure_namespace_exists() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.ensure_namespace_exists"]], "erase_namespace() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.erase_namespace"]], "example (class in vowpalwabbit.pyvw.pylibvw)": [[17, "vowpalwabbit.pyvw.pylibvw.example"]], "feature() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.feature"]], "feature_weight() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.feature_weight"]], "finish() (vowpalwabbit.pyvw.pylibvw.vw method)": [[17, "vowpalwabbit.pyvw.pylibvw.vw.finish"]], "get_action_pdf_value() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.get_action_pdf_value"]], "get_action_scores() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.get_action_scores"]], "get_active_multiclass() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.get_active_multiclass"]], "get_arguments() (vowpalwabbit.pyvw.pylibvw.vw method)": [[17, "vowpalwabbit.pyvw.pylibvw.vw.get_arguments"]], "get_cb_continuous_class() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.get_cb_continuous_class"]], "get_cb_continuous_cost() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.get_cb_continuous_cost"]], "get_cb_continuous_num_costs() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.get_cb_continuous_num_costs"]], "get_cb_continuous_pdf_value() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.get_cb_continuous_pdf_value"]], "get_cb_eval_action() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.get_cb_eval_action"]], "get_cb_eval_class() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.get_cb_eval_class"]], "get_cb_eval_cost() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.get_cb_eval_cost"]], "get_cb_eval_num_costs() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.get_cb_eval_num_costs"]], "get_cb_eval_partial_prediction() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.get_cb_eval_partial_prediction"]], "get_cb_eval_probability() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.get_cb_eval_probability"]], "get_cb_eval_weight() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.get_cb_eval_weight"]], "get_cbandits_class() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.get_cbandits_class"]], "get_cbandits_cost() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.get_cbandits_cost"]], "get_cbandits_num_costs() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.get_cbandits_num_costs"]], "get_cbandits_partial_prediction() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.get_cbandits_partial_prediction"]], "get_cbandits_prediction() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.get_cbandits_prediction"]], "get_cbandits_probability() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.get_cbandits_probability"]], "get_cbandits_weight() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.get_cbandits_weight"]], "get_ccb_action() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.get_ccb_action"]], "get_ccb_cost() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.get_ccb_cost"]], "get_ccb_explicitly_included_actions() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.get_ccb_explicitly_included_actions"]], "get_ccb_has_outcome() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.get_ccb_has_outcome"]], "get_ccb_num_explicitly_included_actions() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.get_ccb_num_explicitly_included_actions"]], "get_ccb_num_probabilities() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.get_ccb_num_probabilities"]], "get_ccb_probability() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.get_ccb_probability"]], "get_ccb_type() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.get_ccb_type"]], "get_ccb_weight() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.get_ccb_weight"]], "get_costsensitive_class() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.get_costsensitive_class"]], "get_costsensitive_cost() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.get_costsensitive_cost"]], "get_costsensitive_num_costs() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.get_costsensitive_num_costs"]], "get_costsensitive_partial_prediction() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.get_costsensitive_partial_prediction"]], "get_costsensitive_prediction() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.get_costsensitive_prediction"]], "get_costsensitive_wap_value() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.get_costsensitive_wap_value"]], "get_decision_scores() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.get_decision_scores"]], "get_enabled_learners() (vowpalwabbit.pyvw.pylibvw.vw method)": [[17, "vowpalwabbit.pyvw.pylibvw.vw.get_enabled_learners"]], "get_enabled_reductions() (vowpalwabbit.pyvw.pylibvw.vw method)": [[17, "vowpalwabbit.pyvw.pylibvw.vw.get_enabled_reductions"]], "get_example_counter() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.get_example_counter"]], "get_feature_number() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.get_feature_number"]], "get_ft_offset() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.get_ft_offset"]], "get_holdout_sum_loss() (vowpalwabbit.pyvw.pylibvw.vw method)": [[17, "vowpalwabbit.pyvw.pylibvw.vw.get_holdout_sum_loss"]], "get_id() (vowpalwabbit.pyvw.pylibvw.vw method)": [[17, "vowpalwabbit.pyvw.pylibvw.vw.get_id"]], "get_learner_metrics() (vowpalwabbit.pyvw.pylibvw.vw method)": [[17, "vowpalwabbit.pyvw.pylibvw.vw.get_learner_metrics"]], "get_loss() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.get_loss"]], "get_multiclass_label() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.get_multiclass_label"]], "get_multiclass_prediction() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.get_multiclass_prediction"]], "get_multiclass_weight() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.get_multiclass_weight"]], "get_multilabel_labels() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.get_multilabel_labels"]], "get_multilabel_predictions() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.get_multilabel_predictions"]], "get_options() (vowpalwabbit.pyvw.pylibvw.vw method)": [[17, "vowpalwabbit.pyvw.pylibvw.vw.get_options"]], "get_partial_prediction() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.get_partial_prediction"]], "get_pdf() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.get_pdf"]], "get_prob() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.get_prob"]], "get_scalars() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.get_scalars"]], "get_search_ptr() (vowpalwabbit.pyvw.pylibvw.vw method)": [[17, "vowpalwabbit.pyvw.pylibvw.vw.get_search_ptr"]], "get_simplelabel_initial() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.get_simplelabel_initial"]], "get_simplelabel_label() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.get_simplelabel_label"]], "get_simplelabel_prediction() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.get_simplelabel_prediction"]], "get_simplelabel_weight() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.get_simplelabel_weight"]], "get_slates_action() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.get_slates_action"]], "get_slates_cost() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.get_slates_cost"]], "get_slates_labeled() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.get_slates_labeled"]], "get_slates_num_probabilities() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.get_slates_num_probabilities"]], "get_slates_probability() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.get_slates_probability"]], "get_slates_slot_id() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.get_slates_slot_id"]], "get_slates_type() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.get_slates_type"]], "get_slates_weight() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.get_slates_weight"]], "get_stride() (vowpalwabbit.pyvw.pylibvw.vw method)": [[17, "vowpalwabbit.pyvw.pylibvw.vw.get_stride"]], "get_sum_loss() (vowpalwabbit.pyvw.pylibvw.vw method)": [[17, "vowpalwabbit.pyvw.pylibvw.vw.get_sum_loss"]], "get_tag() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.get_tag"]], "get_topic_prediction() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.get_topic_prediction"]], "get_total_sum_feat_sq() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.get_total_sum_feat_sq"]], "get_updated_prediction() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.get_updated_prediction"]], "get_weight() (vowpalwabbit.pyvw.pylibvw.vw method)": [[17, "vowpalwabbit.pyvw.pylibvw.vw.get_weight"]], "get_weighted_examples() (vowpalwabbit.pyvw.pylibvw.vw method)": [[17, "vowpalwabbit.pyvw.pylibvw.vw.get_weighted_examples"]], "hash_feature() (vowpalwabbit.pyvw.pylibvw.vw method)": [[17, "vowpalwabbit.pyvw.pylibvw.vw.hash_feature"]], "hash_space() (vowpalwabbit.pyvw.pylibvw.vw method)": [[17, "vowpalwabbit.pyvw.pylibvw.vw.hash_space"]], "json_weights() (vowpalwabbit.pyvw.pylibvw.vw method)": [[17, "vowpalwabbit.pyvw.pylibvw.vw.json_weights"]], "lbinary (vowpalwabbit.pyvw.pylibvw.vw attribute)": [[17, "vowpalwabbit.pyvw.pylibvw.vw.lBinary"]], "lconditionalcontextualbandit (vowpalwabbit.pyvw.pylibvw.vw attribute)": [[17, "vowpalwabbit.pyvw.pylibvw.vw.lConditionalContextualBandit"]], "lcontextualbandit (vowpalwabbit.pyvw.pylibvw.vw attribute)": [[17, "vowpalwabbit.pyvw.pylibvw.vw.lContextualBandit"]], "lcontextualbanditeval (vowpalwabbit.pyvw.pylibvw.vw attribute)": [[17, "vowpalwabbit.pyvw.pylibvw.vw.lContextualBanditEval"]], "lcontinuous (vowpalwabbit.pyvw.pylibvw.vw attribute)": [[17, "vowpalwabbit.pyvw.pylibvw.vw.lContinuous"]], "lcostsensitive (vowpalwabbit.pyvw.pylibvw.vw attribute)": [[17, "vowpalwabbit.pyvw.pylibvw.vw.lCostSensitive"]], "ldefault (vowpalwabbit.pyvw.pylibvw.vw attribute)": [[17, "vowpalwabbit.pyvw.pylibvw.vw.lDefault"]], "lmax (vowpalwabbit.pyvw.pylibvw.vw attribute)": [[17, "vowpalwabbit.pyvw.pylibvw.vw.lMax"]], "lmulticlass (vowpalwabbit.pyvw.pylibvw.vw attribute)": [[17, "vowpalwabbit.pyvw.pylibvw.vw.lMulticlass"]], "lmultilabel (vowpalwabbit.pyvw.pylibvw.vw attribute)": [[17, "vowpalwabbit.pyvw.pylibvw.vw.lMultilabel"]], "lsimple (vowpalwabbit.pyvw.pylibvw.vw attribute)": [[17, "vowpalwabbit.pyvw.pylibvw.vw.lSimple"]], "lslates (vowpalwabbit.pyvw.pylibvw.vw attribute)": [[17, "vowpalwabbit.pyvw.pylibvw.vw.lSlates"]], "learn() (vowpalwabbit.pyvw.pylibvw.vw method)": [[17, "vowpalwabbit.pyvw.pylibvw.vw.learn"]], "learn_multi() (vowpalwabbit.pyvw.pylibvw.vw method)": [[17, "vowpalwabbit.pyvw.pylibvw.vw.learn_multi"]], "namespace() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.namespace"]], "num_features_in() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.num_features_in"]], "num_namespaces() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.num_namespaces"]], "num_weights() (vowpalwabbit.pyvw.pylibvw.vw method)": [[17, "vowpalwabbit.pyvw.pylibvw.vw.num_weights"]], "paction_pdf_value (vowpalwabbit.pyvw.pylibvw.vw attribute)": [[17, "vowpalwabbit.pyvw.pylibvw.vw.pACTION_PDF_VALUE"]], "paction_probs (vowpalwabbit.pyvw.pylibvw.vw attribute)": [[17, "vowpalwabbit.pyvw.pylibvw.vw.pACTION_PROBS"]], "paction_scores (vowpalwabbit.pyvw.pylibvw.vw attribute)": [[17, "vowpalwabbit.pyvw.pylibvw.vw.pACTION_SCORES"]], "pactive_multiclass (vowpalwabbit.pyvw.pylibvw.vw attribute)": [[17, "vowpalwabbit.pyvw.pylibvw.vw.pACTIVE_MULTICLASS"]], "pdecision_scores (vowpalwabbit.pyvw.pylibvw.vw attribute)": [[17, "vowpalwabbit.pyvw.pylibvw.vw.pDECISION_SCORES"]], "pmulticlass (vowpalwabbit.pyvw.pylibvw.vw attribute)": [[17, "vowpalwabbit.pyvw.pylibvw.vw.pMULTICLASS"]], "pmulticlassprobs (vowpalwabbit.pyvw.pylibvw.vw attribute)": [[17, "vowpalwabbit.pyvw.pylibvw.vw.pMULTICLASSPROBS"]], "pmultilabels (vowpalwabbit.pyvw.pylibvw.vw attribute)": [[17, "vowpalwabbit.pyvw.pylibvw.vw.pMULTILABELS"]], "pnopred (vowpalwabbit.pyvw.pylibvw.vw attribute)": [[17, "vowpalwabbit.pyvw.pylibvw.vw.pNOPRED"]], "ppdf (vowpalwabbit.pyvw.pylibvw.vw attribute)": [[17, "vowpalwabbit.pyvw.pylibvw.vw.pPDF"]], "pprob (vowpalwabbit.pyvw.pylibvw.vw attribute)": [[17, "vowpalwabbit.pyvw.pylibvw.vw.pPROB"]], "pscalar (vowpalwabbit.pyvw.pylibvw.vw attribute)": [[17, "vowpalwabbit.pyvw.pylibvw.vw.pSCALAR"]], "pscalars (vowpalwabbit.pyvw.pylibvw.vw attribute)": [[17, "vowpalwabbit.pyvw.pylibvw.vw.pSCALARS"]], "pop_feature() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.pop_feature"]], "pop_namespace() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.pop_namespace"]], "predict() (vowpalwabbit.pyvw.pylibvw.vw method)": [[17, "vowpalwabbit.pyvw.pylibvw.vw.predict"]], "predict_multi() (vowpalwabbit.pyvw.pylibvw.vw method)": [[17, "vowpalwabbit.pyvw.pylibvw.vw.predict_multi"]], "push_feature_dict() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.push_feature_dict"]], "push_feature_list() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.push_feature_list"]], "push_hashed_feature() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.push_hashed_feature"]], "push_namespace() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.push_namespace"]], "run_parser() (vowpalwabbit.pyvw.pylibvw.vw method)": [[17, "vowpalwabbit.pyvw.pylibvw.vw.run_parser"]], "save() (vowpalwabbit.pyvw.pylibvw.vw method)": [[17, "vowpalwabbit.pyvw.pylibvw.vw.save"]], "set_label_string() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.set_label_string"]], "set_test_only() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.set_test_only"]], "set_weight() (vowpalwabbit.pyvw.pylibvw.vw method)": [[17, "vowpalwabbit.pyvw.pylibvw.vw.set_weight"]], "setup_example() (vowpalwabbit.pyvw.pylibvw.vw method)": [[17, "vowpalwabbit.pyvw.pylibvw.vw.setup_example"]], "sum_feat_sq() (vowpalwabbit.pyvw.pylibvw.example method)": [[17, "vowpalwabbit.pyvw.pylibvw.example.sum_feat_sq"]], "taction (vowpalwabbit.pyvw.pylibvw.vw attribute)": [[17, "vowpalwabbit.pyvw.pylibvw.vw.tACTION"]], "tshared (vowpalwabbit.pyvw.pylibvw.vw attribute)": [[17, "vowpalwabbit.pyvw.pylibvw.vw.tSHARED"]], "tslot (vowpalwabbit.pyvw.pylibvw.vw attribute)": [[17, "vowpalwabbit.pyvw.pylibvw.vw.tSLOT"]], "tunset (vowpalwabbit.pyvw.pylibvw.vw attribute)": [[17, "vowpalwabbit.pyvw.pylibvw.vw.tUNSET"]], "unsetup_example() (vowpalwabbit.pyvw.pylibvw.vw method)": [[17, "vowpalwabbit.pyvw.pylibvw.vw.unsetup_example"]], "vw (class in vowpalwabbit.pyvw.pylibvw)": [[17, "vowpalwabbit.pyvw.pylibvw.vw"]], "linearclassifiermixin (class in vowpalwabbit.sklearn)": [[18, "vowpalwabbit.sklearn.LinearClassifierMixin"]], "vw (class in vowpalwabbit.sklearn)": [[18, "vowpalwabbit.sklearn.VW"]], "vwclassifier (class in vowpalwabbit.sklearn)": [[18, "vowpalwabbit.sklearn.VWClassifier"]], "vwmulticlassifier (class in vowpalwabbit.sklearn)": [[18, "vowpalwabbit.sklearn.VWMultiClassifier"]], "vwregressor (class in vowpalwabbit.sklearn)": [[18, "vowpalwabbit.sklearn.VWRegressor"]], "__init__() (vowpalwabbit.sklearn.linearclassifiermixin method)": [[18, "vowpalwabbit.sklearn.LinearClassifierMixin.__init__"]], "__init__() (vowpalwabbit.sklearn.vw method)": [[18, "vowpalwabbit.sklearn.VW.__init__"]], "__init__() (vowpalwabbit.sklearn.vwclassifier method)": [[18, "vowpalwabbit.sklearn.VWClassifier.__init__"]], "__init__() (vowpalwabbit.sklearn.vwmulticlassifier method)": [[18, "vowpalwabbit.sklearn.VWMultiClassifier.__init__"]], "__init__() (vowpalwabbit.sklearn.vwregressor method)": [[18, "vowpalwabbit.sklearn.VWRegressor.__init__"]], "classes_ (vowpalwabbit.sklearn.vwclassifier attribute)": [[18, "vowpalwabbit.sklearn.VWClassifier.classes_"]], "classes_ (vowpalwabbit.sklearn.vwmulticlassifier attribute)": [[18, "vowpalwabbit.sklearn.VWMultiClassifier.classes_"]], "coef_ (vowpalwabbit.sklearn.vwclassifier attribute)": [[18, "vowpalwabbit.sklearn.VWClassifier.coef_"]], "convert_labels (vowpalwabbit.sklearn.vw attribute)": [[18, "vowpalwabbit.sklearn.VW.convert_labels"]], "convert_to_vw (vowpalwabbit.sklearn.vw attribute)": [[18, "vowpalwabbit.sklearn.VW.convert_to_vw"]], "decision_function() (vowpalwabbit.sklearn.vwclassifier method)": [[18, "vowpalwabbit.sklearn.VWClassifier.decision_function"]], "decision_function() (vowpalwabbit.sklearn.vwmulticlassifier method)": [[18, "vowpalwabbit.sklearn.VWMultiClassifier.decision_function"]], "estimator_ (vowpalwabbit.sklearn.vwmulticlassifier attribute)": [[18, "vowpalwabbit.sklearn.VWMultiClassifier.estimator_"]], "fit() (vowpalwabbit.sklearn.vw method)": [[18, "vowpalwabbit.sklearn.VW.fit"]], "fit() (vowpalwabbit.sklearn.vwclassifier method)": [[18, "vowpalwabbit.sklearn.VWClassifier.fit"]], "fit() (vowpalwabbit.sklearn.vwmulticlassifier method)": [[18, "vowpalwabbit.sklearn.VWMultiClassifier.fit"]], "get_coefs() (vowpalwabbit.sklearn.vw method)": [[18, "vowpalwabbit.sklearn.VW.get_coefs"]], "get_intercept() (vowpalwabbit.sklearn.vw method)": [[18, "vowpalwabbit.sklearn.VW.get_intercept"]], "get_params() (vowpalwabbit.sklearn.vw method)": [[18, "vowpalwabbit.sklearn.VW.get_params"]], "get_vw() (vowpalwabbit.sklearn.vw method)": [[18, "vowpalwabbit.sklearn.VW.get_vw"]], "load() (vowpalwabbit.sklearn.vw method)": [[18, "vowpalwabbit.sklearn.VW.load"]], "predict() (vowpalwabbit.sklearn.vw method)": [[18, "vowpalwabbit.sklearn.VW.predict"]], "predict() (vowpalwabbit.sklearn.vwclassifier method)": [[18, "vowpalwabbit.sklearn.VWClassifier.predict"]], "predict_proba() (vowpalwabbit.sklearn.vwclassifier method)": [[18, "vowpalwabbit.sklearn.VWClassifier.predict_proba"]], "predict_proba() (vowpalwabbit.sklearn.vwmulticlassifier method)": [[18, "vowpalwabbit.sklearn.VWMultiClassifier.predict_proba"]], "save() (vowpalwabbit.sklearn.vw method)": [[18, "vowpalwabbit.sklearn.VW.save"]], "set_coefs() (vowpalwabbit.sklearn.vw method)": [[18, "vowpalwabbit.sklearn.VW.set_coefs"]], "set_params() (vowpalwabbit.sklearn.vw method)": [[18, "vowpalwabbit.sklearn.VW.set_params"]], "tovw() (in module vowpalwabbit.sklearn)": [[18, "vowpalwabbit.sklearn.tovw"]], "vowpalwabbit.sklearn": [[18, "module-vowpalwabbit.sklearn"]], "vw_ (vowpalwabbit.sklearn.vw attribute)": [[18, "vowpalwabbit.sklearn.VW.vw_"]]}})